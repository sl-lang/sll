(---
	"array.sll"
	"font/true_type.sll"
	"gfx/buffer.sll"
	"gfx/context.sll"
	"gfx/data_type.sll"
	"gfx/sampler.sll"
	"gfx/texture.sll"
	"math.sll"
	"sort.sll"
	"types.sll"
)



(= font_atlas_glyph_bbox_type (&:
	float_type tx0
	float_type ty0
	float_type tx1
	float_type ty1
))

(= font_atlas_rendered_font_data_type (&:
	float_type scale
	array_type glyphs
))

(= font_atlas_type (&:
	(~ gfx:context$gfx_context_type) context
	(~ gfx:sampler$gfx_sampler_type) sampler
	gfx:texture$gfx_texture_type texture
	func_type callback
	map_type _rendered_fonts
))

(= font_texture_glyph_type (&:
	float_type tx0
	float_type ty0
	float_type tx1
	float_type ty1
	float_type x
	float_type y
	float_type width
	float_type height
	float_type advance
))

(= font_texture_type (&:
	(~ float_type) ascent
	(~ float_type) descent
	(~ float_type) line_gap
	(~ array_type) glyphs
	(~ font:true_type$font_type) font
))

(= font_glyph_and_font_index_type (&:
	int_type font_index
	font:true_type$font_glyph_type glyph
))

(= font_atlas_module_type (&:
	(~ type_type) font_atlas_type
	(~ type_type) font_texture_type
	(~ func_type) add_font
	(~ func_type) create
))



(= _copy_image (,,, src dst width height x_offset y_offset stride
	(= src_idx 0)
	(= dst_idx (+
		x_offset
		(* y_offset stride)
	))
	(= stride (- stride width))
	(-> (= y 0) (< y height)
		(-> (= x 0) (< x width)
			(= (: dst dst_idx) (: src src_idx))
			(++ x)
			(++ src_idx)
			(++ dst_idx)
		)
		(= dst_idx (+ dst_idx stride))
		(++ y)
	)
))

(= add_font (,,, atlas font scale
	(? (! atlas) (@@))
	(= atlas (:: atlas font_atlas_type))
	(= font (:: font font:true_type$font_type))
	(= scale (:: scale float_type))
	(? (<= scale 0) (= scale 64.0))
	(= rendered_font_data (: atlas$_rendered_fonts font))
	(? (||
		(! rendered_font_data)
		(< rendered_font_data$scale scale)
	) {
		(? (! rendered_font_data) {
			(= rendered_font_data (. font_atlas_rendered_font_data_type
				scale
				(<- array$create 256)
			))
			(= (: atlas$_rendered_fonts font) rendered_font_data)
		})
		(= fonts (:: atlas$_rendered_fonts map_key_type))
		(= rendered_fonts (:: atlas$_rendered_fonts map_value_type))
		(= glyphs [])
		(= total_glyph_area 0.0)
		(-> (= i 0) (< i ($ fonts))
			(= embedded_font (: fonts i))
			(= rendered_font_data (: atlas$_rendered_fonts embedded_font))
			(= total_glyph_area (+ total_glyph_area (*
				embedded_font$_total_area
				rendered_font_data$scale
				rendered_font_data$scale
			)))
			(-> (= j 0) (< j ($ embedded_font$glyphs))
				(<- array$push glyphs (. font_glyph_and_font_index_type
					i
					(: embedded_font$glyphs j)
				))
				(++ j)
			)
			(++ i)
		)
		(<- sort$sort glyphs true true (,,, glyph
			(@@ [glyph$glyph$height glyph$glyph$_area])
		))
		(= first_glyph (: glyphs 0))
		(= row_height (// ($ first_glyph$glyph$_data) first_glyph$glyph$_data_width))
		(= width (+ (<- math$int_sqrt total_glyph_area) (// ($ glyphs) 2)))
		(= texture_data (* "\x00" width row_height))
		(= x_offset 0)
		(= y_offset 0)
		(-> (= i 0) (< i ($ glyphs))
			(= glyph (: glyphs i))
			(= bitmap_width glyph$glyph$_data_width)
			(= bitmap_height (// ($ glyph$glyph$_data) bitmap_width))
			(? (< (- width x_offset) bitmap_width) {
				(= x_offset 0)
				(= y_offset (+ y_offset row_height 1))
				(= row_height bitmap_height)
				(= texture_data (+
					texture_data
					(* "\x00" width (+ row_height 1))
				))
			})
			(<- _copy_image glyph$glyph$_data texture_data bitmap_width bitmap_height x_offset y_offset width)
			(= rendered_font_data (: rendered_fonts glyph$font_index))
			(= (: rendered_font_data$glyphs (:: glyph$glyph$codepoint int_type)) (. font_atlas_glyph_bbox_type
				x_offset
				y_offset
				(+ x_offset bitmap_width)
				(+ y_offset bitmap_height)
			))
			(= x_offset (+ x_offset bitmap_width 1))
			(++ i)
		)
		(= height (+ y_offset row_height))
		(= inv_width (/ 1.0 width))
		(= inv_height (/ 1.0 height))
		(-> (= i 0) (< i ($ glyphs))
			(= glyph (: glyphs i))
			(= rendered_font_data (: rendered_fonts glyph$font_index))
			(= glyph_bbox (: rendered_font_data$glyphs (:: glyph$glyph$codepoint int_type)))
			(++ i)
			(? (! glyph_bbox) (<<<))
			(= glyph_bbox$tx0 (* glyph_bbox$tx0 inv_width))
			(= glyph_bbox$ty0 (* glyph_bbox$ty0 inv_height))
			(= glyph_bbox$tx1 (* glyph_bbox$tx1 inv_width))
			(= glyph_bbox$ty1 (* glyph_bbox$ty1 inv_height))
		)
		(= atlas$texture (<- gfx:texture$create atlas$context [width height] (| gfx:data_type$SIZE_8BIT gfx:data_type$COUNT_1 gfx:data_type$TYPE_COLOR_UNORM) (<- gfx:buffer$create atlas$context gfx:buffer$TYPE_TEXTURE gfx:buffer$DATA_TYPE_UINT8 (:: texture_data array_type) true)))
		;;; FIXME: Currently due to an unknown bug the following line needs to be duplicated
		(<- atlas$callback atlas)
		(<- atlas$callback atlas)
	})
	(= rendered_font_data (: atlas$_rendered_fonts font))
	(= texture_data (<- array$create 256))
	(-> (= i 0) (< i ($ font$glyphs))
		(= glyph (: font$glyphs i))
		(= glyph_bbox (: rendered_font_data$glyphs (:: glyph$codepoint int_type)))
		(= (: texture_data (:: glyph$codepoint int_type)) (. font_texture_glyph_type
			glyph_bbox$tx0
			glyph_bbox$ty0
			glyph_bbox$tx1
			glyph_bbox$ty1
			(* glyph$x scale)
			(* glyph$y scale)
			(* glyph$width scale)
			(* glyph$height scale)
			(* glyph$advance scale)
		))
		(++ i)
	)
	(@@ (. font_texture_type
		(* font$ascent scale)
		(* font$descent scale)
		(* font$line_gap scale)
		texture_data
		font
	))
))

(= create (,,, ctx callback
	(? (! ctx) (@@ nil))
	(= ctx (:: ctx gfx:context$gfx_context_type))
	(= callback (:: callback func_type))
	(@@ (. font_atlas_type
		ctx
		(<- gfx:sampler$create ctx (. gfx:sampler$gfx_sampler_config_type
			gfx:sampler$FILTER_LINEAR
			gfx:sampler$FILTER_LINEAR
			gfx:sampler$ADDRESS_MODE_TYPE_CLAMP
			gfx:sampler$ADDRESS_MODE_TYPE_CLAMP
			gfx:sampler$ADDRESS_MODE_TYPE_CLAMP
		))
		(<- gfx:texture$create ctx [1 1] (| gfx:data_type$SIZE_8BIT gfx:data_type$COUNT_1 gfx:data_type$TYPE_COLOR_UNORM) (<- gfx:buffer$create ctx gfx:buffer$TYPE_TEXTURE gfx:buffer$DATA_TYPE_UINT8 [0xff] true))
		callback
		<>
	))
))



(= font:atlas (. font_atlas_module_type
	font_atlas_type
	font_texture_type
	add_font
	create
))
(## font:atlas)
