(---
	"font/_load_library.sll"
	"gfx/buffer.sll"
	"gfx/context.sll"
	"gfx/data_type.sll"
	"gfx/sampler.sll"
	"gfx/texture.sll"
	"string.sll"
	"types.sll"
)



(= font_glyph_type (&:
	(,,, data
		(@@ (<- string$format "(%d %d %u %u | +%u)"
			data$x
			data$y
			data$width
			data$height
			data$advance
		))
	) @@string@@
	int_type x
	int_type y
	int_type width
	int_type height
	int_type advance
	string_type _data
))

(= font_atlas_type (&:
	(~ gfx:context$gfx_context_type) context
	(~ gfx:sampler$gfx_sampler_type) sampler
	(~ gfx:buffer$gfx_buffer_type) buffer
	(~ gfx:texture$gfx_texture_type) texture
))

(= font_type (&:
	(~ int_type) ascent
	(~ int_type) descent
	(~ int_type) line_gap
	(~ array_type) glypths
))

(= font_true_type_module_type (&:
	(~ type_type) font_atlas_type
	(~ type_type) font_glyph_type
	(~ type_type) font_type
	(~ func_type) add_font
	(~ func_type) create
	(~ func_type) create_atlas
	(~ func_type) find
))



(= add_font (,,, atlas font
	(? (! atlas) (@@))
	(= atlas (:: atlas font_atlas_type))
))

(= create (,,, data
	(= out (:: (<- (... "font:true_type_create")
		(:: data string_type)
	) font_type))
	(-> (= i 0) (< i ($ out$glypths))
		(= (: out$glypths i) (:: (: out$glypths i) font_glyph_type))
		(++ i)
	)
	(:> out '\n')
	(@@ out)
))

(= create_atlas (,,, ctx @@fonts@@
	(? (! ctx) (@@ nil))
	(= ctx (:: ctx gfx:context$gfx_context_type))
	(= texture_buffer (<- gfx:buffer$create ctx gfx:buffer$TYPE_TEXTURE gfx:buffer$DATA_TYPE_UINT8 [0 0x33 0x66 0x33 0x66 0x99 0x66 0x99 0xcc] true))
	(= out (. font_atlas_type
		ctx
		(<- gfx:sampler$create ctx (. gfx:sampler$gfx_sampler_config_type
			gfx:sampler$FILTER_LINEAR
			gfx:sampler$FILTER_LINEAR
			gfx:sampler$ADDRESS_MODE_TYPE_CLAMP
			gfx:sampler$ADDRESS_MODE_TYPE_CLAMP
			gfx:sampler$ADDRESS_MODE_TYPE_CLAMP
		))
		texture_buffer
		(<- gfx:texture$create ctx [3 3] (| gfx:data_type$SIZE_8BIT gfx:data_type$COUNT_1 gfx:data_type$TYPE_COLOR_UNORM) texture_buffer)
	))
	(-> (= i 0) (< i ($ @@fonts@@))
		(<- add_font out (: @@fonts@@ i))
		(++ i)
	)
	(@@ out)
))

(= find (,,, @@names@@
	(-> (= i 0) (< i ($ @@names@@))
		(= out (<- (... "font:true_type_find")
			(:: (: @@names@@ i) string_type)
		))
		(? out (@@ out))
		(++ i)
	)
	(@@ nil)
))



(= font:true_type (. font_true_type_module_type
	font_atlas_type
	font_glyph_type
	font_type
	add_font
	create
	create_atlas
	find
))
(## font:true_type)
