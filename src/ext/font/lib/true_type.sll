(---
	"font/_load_library.sll"
	"string.sll"
	"types.sll"
)



(# create_font)



(= font_glyph_type (&:
	(,,, data
		(@@ (<- string$format "(%c: %d %d %u %u | +%u)"
			data$codepoint
			data$x
			data$y
			data$width
			data$height
			data$advance
		))
	) @@string@@
	char_type codepoint
	int_type x
	int_type y
	int_type width
	int_type height
	int_type advance
	string_type _data
	int_type _area
))

(= font_type (&:
	(~ int_type) ascent
	(~ int_type) descent
	(~ int_type) line_gap
	(~ array_type) glyphs
	int_type _total_area
))

(= font_true_type_module_type (&:
	(~ type_type) font_glyph_type
	(~ type_type) font_type
	(~ func_type) create
	(~ func_type) create_font
	(~ func_type) find
))



(= create (,,, data
	(@@ (<-* create_font (<- (... "font:true_type_create")
		(:: data string_type)
	)))
))

(= create_font (,,, ascent descent line_gap glyphs
	(= glyphs (:: glyphs array_type))
	(= area 0)
	(= out (. font_type
		ascent
		descent
		line_gap
		([> (= i 0) (< i ($ glyphs))
			(= glyph (:: (: glyphs i) font_glyph_type))
			(++ i)
			(= glyph$_area (* glyph$width glyph$height))
			(= area (+ area glyph$_area))
			glyph
		)
	))
	(= out$_total_area area)
	(@@ out)
))

(= find (,,, @@names@@
	(-> (= i 0) (< i ($ @@names@@))
		(= out (<- (... "font:true_type_find")
			(:: (: @@names@@ i) string_type)
		))
		(? out (@@ out))
		(++ i)
	)
	(@@ nil)
))



(= font:true_type (. font_true_type_module_type
	font_glyph_type
	font_type
	create
	create_font
	find
))
(## font:true_type)
