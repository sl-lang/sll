(---
	"clib/_library.sll"
	"clib/_load_library.sll"
	"clib/function.sll"
	"error.sll"
	"map.sll"
	"path.sll"
	"string.sll"
	"sys.sll"
	"types.sll"
	"weakref.sll"
)



(= clib_library_module_type (&:
	(~ type_type) clib_library_type
	(~ clib_library_type) SLL_LIBRARY
	(~ func_type) get_loaded_libraries
	(~ func_type) load
	(~ func_type) lookup_symbol
	(~ func_type) unload
))



(= SLL_LIBRARY (. clib_library_type
	sys$LIBRARY
	<>
	(<- (... "clib:library_get_sll_handle"))
))

(= (: _lib_map sys$LIBRARY) (<- weakref$ref SLL_LIBRARY))

(= _default_abi (?: (=== sys$PLATFORM "windows")
	clib_function$CALLING_CONVENCTION_MICROSOFT_X64
	clib_function$CALLING_CONVENCTION_SYSTEM_V_AMD64_ABI
))



(= get_loaded_libraries (,,,
	(= data (:: _lib_map map_value_type))
	(@@ ([> (= i 0) (< i ($ data))
		(= lib (<- weakref$get (: data i)))
		(++ i)
		(? (=== lib weakref$WEAKREF_NO_OBJECT) (<<<))
		lib
	))
))

(= load (,,, name
	(= lib (<- weakref$get (: _lib_map name)))
	(? (!== lib weakref$WEAKREF_NO_OBJECT) (@@ lib))
	(= handle (<- (... "clib:library_load")
		name
	))
	(? (=== (:? handle) int_type) (@@ (<- error$from_internal handle)))
	(= lib (. clib_library_type
		(|| (: handle 1) name)
		<>
		(: handle 0)
	))
	(= (: _lib_map lib$file_path) (<- weakref$ref lib))
	(@@ lib)
))

(= lookup_symbol (,,, lib name
	(? (! lib) (@@ nil))
	(= lib (:: lib clib_library_type))
	(= name (:: name string_type))
	(? (|: lib$symbols name) (@@ (: lib$symbols name)))
	(= addr (<- (... "clib:library_lookup_symbol")
		lib$_handle
		name
	))
	(? (! addr) {
		(= (: lib$symbols name) nil)
		(@@ nil)
	})
	(= symbol (. clib_function$clib_function_type
		name
		addr
		lib
		[]
		clib_types$int
		_default_abi
	))
	(= (: lib$symbols name) symbol)
	(@@ symbol)
))

(= unload (,,, lib
	(? (! lib) (@@ nil))
	(= lib (:: lib clib_library_type))
	(? (! lib$_handle) (@@ nil))
	(<- map$remove _lib_map lib$file_path)
	(= handle lib$_handle)
	(= lib$_handle 0)
	(@@ (<- error$from_internal (<- (... "clib:library_unload")
		handle
	)))
))



(= clib_library (. clib_library_module_type
	clib_library_type
	SLL_LIBRARY
	get_loaded_libraries
	load
	lookup_symbol
	unload
))
(## clib_library)
