(---
	"gfx/_load_library.sll"
	"gfx/buffer.sll"
	"gfx/context.sll"
	"gfx/data_type.sll"
	"gfx/sampler.sll"
	"gfx/shader.sll"
	"gfx/stage.sll"
	"gfx/texture.sll"
	"array.sll"
	"string.sll"
	"types.sll"
)



(# delete _topology_map _input_type_map _polygon_mode_map _front_face_map _descriptor_type_map CULL_MODE_FRONT CULL_MODE_BACK INPUT_SIZE_MASK INPUT_COUNT_MASK INPUT_TYPE_MASK)



(= gfx_pipeline_config_vertex_input_attribute_type (&:
	(,,, data
		(@@ (<- string$format "<gfx:pipeline_config_vertex_input_attribute binding=%u layout=%u offset=%u type=%s>"
			data$binding
			data$layout
			data$offset
			(<- gfx:data_type$to_string data$type)
		))
	) @@string@@
	int_type binding
	int_type layout
	int_type offset
	int_type type
))

(= gfx_pipeline_config_vertex_input_type (&:
	(,,, data
		(@@ (<- string$format "<gfx:pipeline_config_vertex_input input_attributes=%s stride=%u>"
			(<- string$str data$input_attributes)
			data$stride
		))
	) @@string@@
	array_type input_attributes
	int_type stride
))

(= gfx_pipeline_config_descriptor_sampler_type (&:
	(,,, data
		(@@ (<- string$format "<gfx:pipeline_config_descriptor_sampler texture=%s sampler=%s>"
			(:: data$texture string_type)
			(:: data$sampler string_type)
		))
	) @@string@@
	gfx:texture$gfx_texture_type texture
	gfx:sampler$gfx_sampler_type sampler
))

(= gfx_pipeline_config_descriptor_type (&:
	(,,, data
		(@@ (<- string$format "<gfx:pipeline_config_descriptor type=%s binding=%u stage=%s data=%s>"
			(: _descriptor_type_map data$type)
			data$binding
			(<- gfx:stage$to_string data$stage)
			(<- string$str data$data)
		))
	) @@string@@
	int_type type
	int_type binding
	int_type stage
	object_type data
))

(= gfx_pipeline_config_rasterizer_type (&:
	(,,, data
		(= cull_mode [])
		(? (& data$CULL_MODE_FRONT) (<- array$push cull_mode "Front"))
		(? (& data$CULL_MODE_BACK) (<- array$push cull_mode "Back"))
		(@@ (<- string$format "<gfx:pipeline_config_rasterize polygon_mode=%s front_face=%s cull_mode=%s>"
			(: _polygon_mode_map data$polygon_mode)
			(: _front_face_map data$front_face)
			(?: cull_mode
				(<- string$join '+' cull_mode)
				"None"
			)
		))
	) @@string@@
	int_type polygon_mode
	int_type front_face
	int_type cull_mode
))

(= gfx_pipeline_config_type (&:
	(,,, data
		(@@ (<- string$format "<gfx:pipeline_config topology=%s vertex_input=%s descriptors=%s rasterizer=%s shaders=%s>"
			(: _topology_map data$topology)
			(:: data$vertex_input string_type)
			(<- string$str data$descriptors)
			(:: data$rasterizer string_type)
			(<- string$str data$shaders)
		))
	) @@string@@
	int_type topology
	gfx_pipeline_config_vertex_input_type vertex_input
	array_type descriptors
	gfx_pipeline_config_rasterizer_type rasterizer
	array_type shaders
))

(= gfx_pipeline_type (&:
	(,,, data
		(@@ (<- string$format "<gfx:pipeline config=%s context=%s>"
			(:: data$config string_type)
			(:: data$ctx string_type)
		))
	) @@string@@
	(,,, data
		(<- delete data)
	) @@delete@@
	(~ int_type) _handle
	(~ gfx_pipeline_config_type) config
	(~ gfx:context$gfx_context_type) ctx
))

(= gfx_pipeline_module_type (&:
	(~ int_type) CULL_MODE_BACK
	(~ int_type) CULL_MODE_FRONT
	(~ int_type) DESCRIPTOR_TYPE_SAMPLER
	(~ int_type) DESCRIPTOR_TYPE_UNIFORM_BUFFER
	(~ int_type) FRONT_FACE_CLOCKWISE
	(~ int_type) FRONT_FACE_COUNTER_CLOCKWISE
	(~ int_type) POLYGON_MODE_FILL
	(~ int_type) POLYGON_MODE_LINE
	(~ int_type) POLYGON_MODE_POINT
	(~ int_type) TOPOLOGY_LINE_LIST
	(~ int_type) TOPOLOGY_LINE_LIST_WITH_ADJACENCY
	(~ int_type) TOPOLOGY_LINE_STRIP
	(~ int_type) TOPOLOGY_LINE_STRIP_WITH_ADJACENCY
	(~ int_type) TOPOLOGY_PATCH_LIST
	(~ int_type) TOPOLOGY_POINT_LIST
	(~ int_type) TOPOLOGY_TRIANGLE_FAN
	(~ int_type) TOPOLOGY_TRIANGLE_LIST
	(~ int_type) TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY
	(~ int_type) TOPOLOGY_TRIANGLE_STRIP
	(~ int_type) TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY
	(~ type_type) gfx_pipeline_config_type
	(~ type_type) gfx_pipeline_config_vertex_input_attribute_type
	(~ type_type) gfx_pipeline_type
	(~ func_type) create
	(~ func_type) delete
	(~ func_type) update_descriptor
	(~ func_type) use
))



(= TOPOLOGY_POINT_LIST 0)
(= TOPOLOGY_LINE_LIST 1)
(= TOPOLOGY_LINE_STRIP 2)
(= TOPOLOGY_TRIANGLE_LIST 3)
(= TOPOLOGY_TRIANGLE_STRIP 4)
(= TOPOLOGY_TRIANGLE_FAN 5)
(= TOPOLOGY_LINE_LIST_WITH_ADJACENCY 6)
(= TOPOLOGY_LINE_STRIP_WITH_ADJACENCY 7)
(= TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY 8)
(= TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY 9)
(= TOPOLOGY_PATCH_LIST 10)

(= POLYGON_MODE_POINT 0)
(= POLYGON_MODE_LINE 1)
(= POLYGON_MODE_FILL 2)

(= FRONT_FACE_CLOCKWISE 0)
(= FRONT_FACE_COUNTER_CLOCKWISE 1)

(= CULL_MODE_FRONT 1)
(= CULL_MODE_BACK 2)

(= DESCRIPTOR_TYPE_UNIFORM_BUFFER 0)
(= DESCRIPTOR_TYPE_SAMPLER 1)

(= _topology_map <
	TOPOLOGY_POINT_LIST "Point list"
	TOPOLOGY_LINE_LIST "Line list"
	TOPOLOGY_LINE_STRIP "Line strip"
	TOPOLOGY_TRIANGLE_LIST "Triangle list"
	TOPOLOGY_TRIANGLE_STRIP "Triangle strip"
	TOPOLOGY_TRIANGLE_FAN "Triangle fan"
	TOPOLOGY_LINE_LIST_WITH_ADJACENCY "Line list with adjacency"
	TOPOLOGY_LINE_STRIP_WITH_ADJACENCY "Line strip with adjacency"
	TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY "Triangle list with adjacency"
	TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY "Triangle strip with adjacency"
	TOPOLOGY_PATCH_LIST "Patch list"
>)

(= _polygon_mode_map <
	POLYGON_MODE_POINT "Point"
	POLYGON_MODE_LINE "Line"
	POLYGON_MODE_FILL "Fill"
>)

(= _front_face_map <
	FRONT_FACE_CLOCKWISE "Clockwise"
	FRONT_FACE_COUNTER_CLOCKWISE "Counter clockwise"
>)

(= _descriptor_type_map <
	DESCRIPTOR_TYPE_UNIFORM_BUFFER "Uniform buffer"
	DESCRIPTOR_TYPE_SAMPLER "Sampler"
>)

(= _descriptor_data_type_map <
	DESCRIPTOR_TYPE_UNIFORM_BUFFER gfx:buffer$gfx_buffer_type
	DESCRIPTOR_TYPE_SAMPLER gfx_pipeline_config_descriptor_sampler_type
>)



(= create (,,, ctx config
	(? (! ctx) (@@ nil))
	(= ctx (:: ctx gfx:context$gfx_context_type))
	(= config (:: config gfx_pipeline_config_type))
	(-> (= i 0) (< i ($ config$vertex_input$input_attributes))
		(= (: config$vertex_input$input_attributes i) (:: (: config$vertex_input$input_attributes i) gfx_pipeline_config_vertex_input_attribute_type))
		(++ i)
	)
	(= uniform_buffers [])
	(= samplers [])
	(-> (= i 0) (< i ($ config$descriptors))
		(= descriptor (:: (: config$descriptors i) gfx_pipeline_config_descriptor_type))
		(= type (: _descriptor_data_type_map descriptor$type))
		(= descriptor$data (?:
			(|| (=== (:? descriptor$data) int_type) (=== (:? descriptor$data) type)) descriptor$data
			(&& (=== (:? descriptor$data) array_type) (!== (:? (: descriptor$data 0)) array_type)) (:: descriptor$data type)
			([> (= j 0) (< j ($ descriptor$data))
				(= element (: descriptor$data j))
				(++ j)
				(:: element type)
			)
		))
		(= (: config$descriptors i) descriptor)
		(? (&&
			(=== descriptor$type DESCRIPTOR_TYPE_UNIFORM_BUFFER)
			(! (<- gfx:buffer$is_constant_size? descriptor$data))
		) (:> "Uniform buffers must have a constant size!\n"))
		(<- array$push (?: (=== descriptor$type DESCRIPTOR_TYPE_UNIFORM_BUFFER) uniform_buffers samplers) (?:
			(=== (:? descriptor$data) int_type) [
				descriptor$binding
				descriptor$stage
				descriptor$data
			]
			(=== descriptor$type DESCRIPTOR_TYPE_UNIFORM_BUFFER) [
				descriptor$binding
				descriptor$stage
				descriptor$data$_handle
				nil
			]
			(=== descriptor$type DESCRIPTOR_TYPE_SAMPLER) [
				descriptor$binding
				descriptor$stage
				descriptor$data$texture$_handle
				descriptor$data$sampler$_handle
			]
		))
		(++ i)
	)
	(-> (= i 0) (< i ($ config$shaders))
		(= (: config$shaders i) (:: (: config$shaders i) gfx:shader$gfx_shader_type))
		(++ i)
	)
	(= handle (<- (... "gfx:pipeline_create")
		ctx$_handle
		config$topology
		([> (= i 0) (< i ($ config$vertex_input$input_attributes))
			(= attr (: config$vertex_input$input_attributes i))
			(++ i)
			(:: attr array_type)
		)
		config$vertex_input$stride
		uniform_buffers
		samplers
		config$rasterizer$polygon_mode
		config$rasterizer$front_face
		config$rasterizer$cull_mode
		([> (= i 0) (< i ($ config$shaders))
			(= shader (: config$shaders i))
			(++ i)
			shader$_handle
		)
	))
	(@@ (. gfx_pipeline_type
		handle
		config
		ctx
	))
))

(= delete (,,, pipeline
	(? (! pipeline) (@@))
	(= pipeline (:: pipeline gfx_pipeline_type))
	(<- (... "gfx:pipeline_delete") pipeline$ctx$_handle pipeline$_handle)
))

(= update_descriptor (,,, pipeline descriptor
	(? (! pipeline) (@@))
	(= pipeline (:: pipeline gfx_pipeline_type))
	(= descriptor (:: descriptor gfx_pipeline_config_descriptor_type))
	(<- (... "gfx:pipeline_update_descriptor") pipeline$ctx$_handle pipeline$_handle descriptor$binding descriptor$stage (?:
		(=== descriptor$type DESCRIPTOR_TYPE_UNIFORM_BUFFER) [descriptor$data$_handle]
		(=== descriptor$type DESCRIPTOR_TYPE_SAMPLER) [descriptor$data$texture$_handle descriptor$data$sampler$_handle]
	))
))

(= use (,,, pipeline
	(? (! pipeline) (@@))
	(= pipeline (:: pipeline gfx_pipeline_type))
	(<- (... "gfx:pipeline_use") pipeline$ctx$_handle pipeline$_handle)
))



(= gfx:pipeline (. gfx_pipeline_module_type
	CULL_MODE_BACK
	CULL_MODE_FRONT
	DESCRIPTOR_TYPE_SAMPLER
	DESCRIPTOR_TYPE_UNIFORM_BUFFER
	FRONT_FACE_CLOCKWISE
	FRONT_FACE_COUNTER_CLOCKWISE
	POLYGON_MODE_FILL
	POLYGON_MODE_LINE
	POLYGON_MODE_POINT
	TOPOLOGY_LINE_LIST
	TOPOLOGY_LINE_LIST_WITH_ADJACENCY
	TOPOLOGY_LINE_STRIP
	TOPOLOGY_LINE_STRIP_WITH_ADJACENCY
	TOPOLOGY_PATCH_LIST
	TOPOLOGY_POINT_LIST
	TOPOLOGY_TRIANGLE_FAN
	TOPOLOGY_TRIANGLE_LIST
	TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY
	TOPOLOGY_TRIANGLE_STRIP
	TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY
	gfx_pipeline_config_type
	gfx_pipeline_config_vertex_input_attribute_type
	gfx_pipeline_type
	create
	delete
	update_descriptor
	use
))
(## gfx:pipeline)
