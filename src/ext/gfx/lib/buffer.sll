(---
	"array.sll"
	"gfx/_load_library.sll"
	"gfx/context.sll"
	"string.sll"
	"types.sll"
)



(# delete _data_type_map FREQUENCY_NEVER FREQUENCY_MEDIUM FREQUENCY_HIGH TYPE_VERTEX TYPE_INDEX TYPE_UNIFORM TYPE_TEXTURE TYPE_ANY)



(= gfx_buffer_type (&:
	(,,, data
		(= types [])
		(?
			(=== data$type TYPE_ANY) (= types ["Any"])
			{
				(? (& data$type TYPE_VERTEX) (<- array$push types "Vertex"))
				(? (& data$type TYPE_INDEX) (<- array$push types "Index"))
				(? (& data$type TYPE_UNIFORM) (<- array$push types "Uniform"))
				(? (& data$type TYPE_TEXTURE) (<- array$push types "Texture"))
			}
		)
		(@@ (<- string$format "<gfx:buffer type=%s data_type=%s update_frequency=%s data_length=%u context=%s>"
			(<- string$join ", " types)
			(: _data_type_map data$data_type)
			(?:
				(=== data$update_frequency FREQUENCY_NEVER) "Never"
				(=== data$update_frequency FREQUENCY_MEDIUM) "Medium"
				(=== data$update_frequency FREQUENCY_HIGH) "High"
				"Low"
			)
			($ data$data)
			(:: data$ctx string_type)
		))
	) @@string@@
	(,,, data
		(<- delete data)
	) @@delete@@
	(~ int_type) _handle
	(~ int_type) type
	(~ int_type) data_type
	(~ gfx:context$gfx_context_type) ctx
	array_type data
	int_type update_frequency
	int_type _is_default_frequency?
	(~ int_type) _original_size
))

(= gfx_buffer_module_type (&:
	(~ int_type) DATA_TYPE_FLOAT16
	(~ int_type) DATA_TYPE_FLOAT32
	(~ int_type) DATA_TYPE_FLOAT64
	(~ int_type) DATA_TYPE_UINT16
	(~ int_type) DATA_TYPE_UINT32
	(~ int_type) DATA_TYPE_UINT64
	(~ int_type) DATA_TYPE_UINT8
	(~ int_type) FREQUENCY_HIGH
	(~ int_type) FREQUENCY_LOW
	(~ int_type) FREQUENCY_MEDIUM
	(~ int_type) FREQUENCY_NEVER
	(~ int_type) TYPE_ANY
	(~ int_type) TYPE_INDEX
	(~ int_type) TYPE_TEXTURE
	(~ int_type) TYPE_UNIFORM
	(~ int_type) TYPE_VERTEX
	(~ type_type) gfx_buffer_type
	(~ func_type) create
	(~ func_type) delete
	(~ func_type) draw
	(~ func_type) hint_update_frequency
	(~ func_type) is_constant_size?
	(~ func_type) sync
	(~ func_type) use
))



(= TYPE_VERTEX 1)
(= TYPE_INDEX 2)
(= TYPE_UNIFORM 4)
(= TYPE_TEXTURE 8)
(= TYPE_ANY (| TYPE_VERTEX TYPE_INDEX TYPE_UNIFORM TYPE_TEXTURE))

(= FREQUENCY_NEVER 0)
(= FREQUENCY_LOW 1)
(= FREQUENCY_MEDIUM 2)
(= FREQUENCY_HIGH 3)

(= DATA_TYPE_UINT8 0)
(= DATA_TYPE_UINT16 1)
(= DATA_TYPE_FLOAT16 2)
(= DATA_TYPE_UINT32 3)
(= DATA_TYPE_FLOAT32 4)
(= DATA_TYPE_UINT64 5)
(= DATA_TYPE_FLOAT64 6)

(= _data_type_map <
	DATA_TYPE_UINT8 "uint8"
	DATA_TYPE_UINT16 "uint16"
	DATA_TYPE_FLOAT16 "float16"
	DATA_TYPE_UINT32 "uint32"
	DATA_TYPE_FLOAT32 "float32"
	DATA_TYPE_UINT64 "uint64"
	DATA_TYPE_FLOAT64 "float64"
>)



(= create (,,, ctx type data_type data is_constant_size?
	(? (! ctx) (@@ nil))
	(= ctx (:: ctx gfx:context$gfx_context_type))
	(= type (& (:: type int_type) TYPE_ANY))
	(= data_type (:: data_type int_type))
	(= data (?: data (:: data array_type) []))
	(? (&&
		(& type TYPE_TEXTURE)
		(! is_constant_size?)
	) (:> "Texture buffers must have a constant size!\n"))
	(= handle (<- (... "gfx:buffer_create")
		ctx$_handle
		type
		data_type
	))
	(= out (. gfx_buffer_type
		handle
		type
		data_type
		ctx
		data
		FREQUENCY_NEVER
		true
		(?: is_constant_size? ($ data) -1)
	))
	(? data {
		(<- (... "gfx:buffer_sync") ctx$_handle handle data)
		(<- array$push ctx$_sync_objects out)
	})
	(@@ out)
))

(= delete (,,, buffer
	(? (! buffer) (@@))
	(= buffer (:: buffer gfx_buffer_type))
	(<- (... "gfx:buffer_delete") buffer$ctx$_handle buffer$_handle)
))

(= draw (,,, buffer
	(? (! buffer) (@@))
	(= buffer (:: buffer gfx_buffer_type))
	(? (! (& buffer$type TYPE_INDEX)) (@@))
	(<- (... "gfx:buffer_draw") buffer$ctx$_handle buffer$_handle)
))

(= hint_update_frequency (,,, buffer frequency
	(? (! buffer) (@@))
	(= buffer (:: buffer gfx_buffer_type))
	(= frequency (:: frequency int_type))
	(? (||
		(< frequency FREQUENCY_NEVER)
		(> frequency FREQUENCY_HIGH)
	) (= frequency FREQUENCY_NEVER))
	(= buffer$update_frequency frequency)
	(= buffer$_is_default_frequency? false)
	(<- (... "gfx:buffer_hint_update_frequency") buffer$ctx$_handle buffer$_handle frequency)
))

(= is_constant_size? (,,, buffer
	(? (! buffer) (@@ false))
	(= buffer (:: buffer gfx_buffer_type))
	(@@ (!== buffer$_original_size -1))
))

(= sync (,,, buffer
	(? (! buffer) (@@))
	(= buffer (:: buffer gfx_buffer_type))
	(? (&&
		(!== buffer$_original_size -1)
		(!== buffer$_original_size ($ buffer$data))
	) {
		(= buffer$data (: buffer$data 0 buffer$_original_size))
		(? (< ($ buffer$data) buffer$_original_size) {
			(= buffer$data (+ buffer$data (<- array$create (- buffer$_original_size ($ buffer$data)))))
		})
	})
	(? buffer$_is_default_frequency? (<- hint_update_frequency buffer FREQUENCY_LOW))
	(<- (... "gfx:buffer_sync") buffer$ctx$_handle buffer$_handle buffer$data)
	(<- array$push buffer$ctx$_sync_objects buffer)
))

(= use (,,, buffer
	(? (! buffer) (@@))
	(= buffer (:: buffer gfx_buffer_type))
	(<- (... "gfx:buffer_use") buffer$ctx$_handle buffer$_handle)
))



(= gfx:buffer (. gfx_buffer_module_type
	DATA_TYPE_FLOAT16
	DATA_TYPE_FLOAT32
	DATA_TYPE_FLOAT64
	DATA_TYPE_UINT16
	DATA_TYPE_UINT32
	DATA_TYPE_UINT64
	DATA_TYPE_UINT8
	FREQUENCY_HIGH
	FREQUENCY_LOW
	FREQUENCY_MEDIUM
	FREQUENCY_NEVER
	TYPE_ANY
	TYPE_INDEX
	TYPE_TEXTURE
	TYPE_UNIFORM
	TYPE_VERTEX
	gfx_buffer_type
	create
	delete
	draw
	hint_update_frequency
	is_constant_size?
	sync
	use
))
(## gfx:buffer)
