(---
	"gfx/_load_library.sll"
	"gfx/buffer.sll"
	"gfx/context.sll"
	"gfx/data_type.sll"
	"string.sll"
	"types.sll"
)



(# delete)



(= gfx_texture_type (&:
	(,,, data
		(@@ (<- string$format "<gfx:texture size=%s data_type=%s buffer=%s context=%s>"
			(<- string$join 'x' data$size)
			(<- gfx:data_type$to_string data$data_type)
			(:: data$buffer string_type)
			(:: data$ctx string_type)
		))
	) @@string@@
	(,,, data
		(<- delete data)
	) @@delete@@
	(~ int_type) _handle
	(~ array_type) size
	(~ int_type) data_type
	(~ gfx:buffer$gfx_buffer_type) buffer
	(~ gfx:context$gfx_context_type) ctx
))

(= gfx_texture_module_type (&:
	(~ type_type) gfx_texture_type
	(~ func_type) create
	(~ func_type) delete
	(~ func_type) sync
))



(= create (,,, ctx size data_type buffer
	(? (! ctx) (@@ nil))
	(= ctx (:: ctx gfx:context$gfx_context_type))
	(= size (: (:: size array_type) 0 3))
	(? (! size) (@@ nil))
	(= data_type (& (:: data_type int_type) gfx:data_type$MASK))
	(= handle (<- (... "gfx:texture_create")
		ctx$_handle
		size
		data_type
		buffer$_handle
	))
	(<- (... "gfx:texture_sync") ctx$_handle handle)
	(@@ (. gfx_texture_type
		handle
		size
		data_type
		buffer
		ctx
	))
))

(= delete (,,, texture
	(? (! texture) (@@))
	(= texture (:: texture gfx_texture_type))
	(<- (... "gfx:texture_delete") texture$ctx$_handle texture$_handle)
))

(= sync (,,, texture
	(? (! texture) (@@))
	(= texture (:: texture gfx_texture_type))
	(<- (... "gfx:texture_sync") texture$ctx$_handle texture$_handle)
))



(= gfx:texture (. gfx_texture_module_type
	gfx_texture_type
	create
	delete
	sync
))
(## gfx:texture)
