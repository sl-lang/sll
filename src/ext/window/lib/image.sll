(---
	"string.sll"
	"types.sll"
)



(= window_image_type (&:
	(,,, data
		(@@ (<- string$format "<%llux%llu, RGBA>"
			data$width
			data$height
		))
	) @@string@@
	int_type width
	int_type height
	string_type data
))

(= window_pixel_type (&:
	(,,, data
		(@@ (<- string$format "#%.2hhx%.2hhx%.2hhx%.2hhx"
			data$red
			data$green
			data$blue
			data$alpha
		))
	) @@string@@
	char_type red
	char_type green
	char_type blue
	char_type alpha
))

(= window_image_module_type (&:
	(~ type_type) window_image_type
	(~ type_type) window_pixel_type
	(~ func_type) create
	(~ func_type) get_pixel
	(~ func_type) set_pixel
))



 (= create (,,, width height pixel
 	(= width (:: width int_type))
 	(= height (:: height int_type))
 	(? (||
 		(! width)
 		(! height)
 	) (@@ (. window_image_type
 		0
 		0
 		""
 	)))
 	(= pixel (?: pixel (:: pixel window_pixel_type) (. window_pixel_type 255 255 255 255)))
 	(@@ (. window_image_type
 		width
 		height
 		(*
 			(+
 				(:: pixel$red string_type)
 				pixel$green
 				pixel$blue
 				pixel$alpha
 			)
 			(* width height)
 		)
 	))
 ))

(= get_pixel (,,, image x y
	(? (! image) (@@ nil))
	(= image (:: image window_image_type))
	(= x (:: x int_type))
	(= y (:: y int_type))
	(? (||
		(< x 0)
		(< y 0)
		(>= x image$width)
		(>= y image$height)
	) (@@ nil))
	(= offset (* (+
		x
		(* y image$width)
	) 4))
	(= data (: image$data offset (+ offset 4)))
	(@@ (. window_pixel_type
		(: data 0)
		(: data 1)
		(: data 2)
		(: data 3)
	))
))

(= set_pixel (,,, image x y pixel
	(? (! image) (@@ nil))
	(= image (:: image window_image_type))
	(= x (:: x int_type))
	(= y (:: y int_type))
	(? (||
		(< x 0)
		(< y 0)
		(>= x image$width)
		(>= y image$height)
	) (@@ nil))
	(= pixel (:: pixel window_pixel_type))
	(= offset (* (+
		x
		(* y image$width)
	) 4))
	(= (: image$data offset) pixel$red)
	(= (: image$data (+ offset 1)) pixel$green)
	(= (: image$data (+ offset 2)) pixel$blue)
	(= (: image$data (+ offset 3)) pixel$alpha)
))



(= window_image (. window_image_module_type
	window_image_type
	window_pixel_type
	create
	get_pixel
	set_pixel
))
(## window_image)
