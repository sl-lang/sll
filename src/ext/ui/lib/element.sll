(---
	"array.sll"
	"string.sll"
	"types.sll"
	"ui/_element_types.sll"
	"ui/_ui_type.sll"
	"ui/_util.sll"
	"ui/layout.sll"
	"ui/position.sll"
	"weakref.sll"
)



(# set_parent update)



(= ui_element_callbacks_type (&:
	func_type button_event
	func_type deserialize
	func_type get_position
	func_type mouse_event
	func_type serialize
	func_type update
))

(= ui_element_data_type (&:
	string_type name
	ui_element_callbacks_type callbacks
))

(= ui_element_type (&:
	(,,, data
		(@@ (<- string$format "<ui:element position=%s z-index=%u children=%s>"
			(:: data$position string_type)
			data$z_index
			(<- string$str data$children)
		))
	) @@string@@
	(~ object_type) ui
	int_type id
	object_type parent
	ui:position$ui_position_type position
	int_type z_index
	array_type children
))

(= ui_element_module_type (&:
	(~ type_type) ui_element_callbacks_type
	(~ type_type) ui_element_type
	(~ func_type) create
	(~ func_type) delete
	(~ func_type) get
	(~ func_type) is_valid_element
	(~ func_type) register_element
	(~ func_type) set_name
	(~ func_type) set_parent
	(~ func_type) setup
	(~ func_type) update
))



(= create (,,, ui position_layout
	(= position_layout (:: position_layout array_type))
	(@@ (. ui_element_type
		ui
		-1
		nil
		[
			0
			0
			0
			0
			(: position_layout 0)
			(: position_layout 1)
			(: position_layout 2)
			(: position_layout 3)
		]
		0
		[]
	))
))

(= delete (,,, element
	(? (! element) (@@))
	(= element (:: element ui_element_type))
))

(= get (,,, ui id
	(? (! ui) (@@ nil))
	(= ui (:: ui ui_type))
	(@@ (<- weakref$get_default (?: (=== (:? id) int_type)
		(: ui$_elements id)
		(: ui$_name_to_element (:: id string_type))
	)))
))

(= is_valid_element (,,, element
	(? (! (: _element_type_data (:? element))) {
		(:> "Invlid UI element: " element '\n')
		(@@ false)
	})
	(@@ true)
))

(= register_element (,,, element_type name callbacks
	(? (! element_type) (@@))
	(= element_type (:: element_type type_type))
	(= name (: (:: name string_type) 0 255))
	(= callbacks (:: callbacks ui_element_callbacks_type))
	(? (&&
		(: _element_name_to_type name)
		(!== (: _element_name_to_type name) element_type)
	) {
		(:> "UI element '" name "' already exists!\n")
		(@@)
	})
	(= (: _element_type_data element_type) (. ui_element_data_type
		name
		callbacks
	))
	(= (: _element_name_to_type name) element_type)
))

(= set_name (,,, element name
	(? (||
		(! element)
		(! (<- is_valid_element element))
	) (@@))
	(= name (: (:: name string_type) 0 255))
	(= (: element$base$ui$_name_to_element name) (<- weakref$ref element))
	(= (: element$base$ui$_element_to_name element$id) name)
))

(= set_parent (,,, element parent
	(? (||
		(! element)
		(! (<- is_valid_element element))
		(&& (!== parent nil) (! (<- is_valid_element parent)))
		(!== (%% element$base$ui) (%% parent$base$ui))
	) (@@ false))
	(? element$base$parent (<- array$remove element$base$parent$base$children element))
	(= element$base$parent parent)
	(= element$base$z_index (+ parent$base$z_index 1))
	(? (&&
		element$base$ui
		(> element$base$z_index element$base$ui$_max_z_index)
	) {
		(= element$base$ui$_max_z_index element$base$z_index)
		(<- _update_ui_uniform_buffer element$base$ui)
	})
	(<- array$push parent$base$children element)
	(<- update element)
	(@@ true)
))

(= setup (,,, element
	(? (||
		(! (<- is_valid_element element))
		(!== element$base$id -1)
	) (@@))
	(= element$base$id ($ element$base$ui$_elements))
	(<- array$push element$base$ui$_elements (<- weakref$ref element))
	(<- _setup_element element)
))

(= update (,,, element
	(? (||
		(! element)
		(! (<- is_valid_element element))
		(! (<- _update_element_position element))
	) (@@))
	(= data (: _element_type_data (:? element)))
	(<- data$callbacks$update element)
	(-> (= i 0) (< i ($ element$base$children))
		(<- update (: element$base$children i))
		(++ i)
	)
))



(= ui:element (. ui_element_module_type
	ui_element_callbacks_type
	ui_element_type
	create
	delete
	get
	is_valid_element
	register_element
	set_name
	set_parent
	setup
	update
))
(## ui:element)
