(---
	"array.sll"
	"string.sll"
	"types.sll"
	"ui/_ui_type.sll"
	"ui/_util.sll"
	"ui/position.sll"
	"ui/size.sll"
)



(# update)



(= ui_element_callbacks_type (&:
	func_type update
))

(= ui_element_type (&:
	(,,, data
		(@@ (<- string$format "<ui:element position=%s size=%s z-index=%u children=%s>"
			(:: data$position string_type)
			(:: data$size string_type)
			data$z_index
			(<- string$str data$children)
		))
	) @@string@@
	(~ ui_type) ui
	(~ ui_element_callbacks_type) callbacks
	object_type parent
	ui:position$ui_position_type position
	ui:size$ui_size_type size
	int_type z_index
	array_type children
))

(= ui_element_module_type (&:
	(~ type_type) ui_element_callbacks_type
	(~ type_type) ui_element_type
	(~ func_type) create
	(~ func_type) delete
	(~ func_type) register_element
	(~ func_type) set_parent
	(~ func_type) update
))



(= _element_type_to_callbacks <>)



(= _check_if_valid_element (,,, element
	(? (! (: _element_type_to_callbacks (:? element))) {
		(:> "Invlid UI element: " element '\n')
		(@@ false)
	})
	(@@ true)
))

(= create (,,, ui callbacks position_layout size_layout
	(= position_layout (:: position_layout array_type))
	(= size_layout (:: size_layout array_type))
	(@@ (. ui_element_type
		ui
		callbacks
		nil
		[
			0
			0
			(: position_layout 0)
			(: position_layout 1)
		]
		[
			0
			0
			(: size_layout 0)
			(: size_layout 1)
		]
		0
	))
))

(= delete (,,, element
	(? (! element) (@@))
	(= element (:: element ui_element_type))
))

(= register_element (,,, element_type callbacks
	(? (! element_type) (@@))
	(= element_type (:: element_type type_type))
	(= callbacks (:: callbacks ui_element_callbacks_type))
	(= (: _element_type_to_callbacks element_type) callbacks)
))

(= set_parent (,,, element parent
	(? (! element) (@@ false))
	(? (||
		(! (<- _check_if_valid_element element))
		(! (<- _check_if_valid_element parent))
		(!== (%% element$base$ui) (%% parent$base$ui))
	) (@@ false))
	(? element$base$parent (<- array$remove element$base$parent$base$children element))
	(= element$base$parent parent)
	(= element$base$z_index (+ parent$base$z_index 1))
	(? (> element$base$z_index element$base$ui$_max_z_index) {
		(= element$base$ui$_max_z_index element$base$z_index)
		(<- _update_ui_uniform_buffer element$base$ui)
	})
	(<- array$push parent$base$children element)
	(<- update element)
	(@@ true)
))

(= update (,,, element
	(? (||
		(! element)
		(! (<- _check_if_valid_element element))
		(&
			(! (<- ui:position$update element$base$position element$base$parent$base))
			(! (<- ui:size$update element$base$size element$base$parent$base))
		)
	) (@@))
	(= callbacks (: _element_type_to_callbacks (:? element)))
	(<- callbacks$update element)
	(-> (= i 0) (< i ($ element$base$children))
		(<- update (: element$base$children i))
		(++ i)
	)
))



(= ui:element (. ui_element_module_type
	ui_element_callbacks_type
	ui_element_type
	create
	delete
	register_element
	set_parent
	update
))
(## ui:element)
