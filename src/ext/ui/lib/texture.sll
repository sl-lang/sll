(---
	"array.sll"
	"gfx/pipeline.sll"
	"gfx/sampler.sll"
	"gfx/stage.sll"
	"gfx/texture.sll"
	"string.sll"
	"types.sll"
	"ui/core.sll"
)



(= ui_texture_type (&:
	(,,, data
		(@@ (<- string$format "<ui:texture texture=%s sampler=%s>"
			(:: data$texture string_type)
			(:: data$sampler string_type)
		))
	) @@string@@
	(~ ui:core$ui_type) ui
	gfx:texture$gfx_texture_type texture
	gfx:sampler$gfx_sampler_type sampler
	float_type _shader_index
))

(= ui_texture_module_type (&:
	(~ type_type) ui_texture_type
	(~ func_type) create
))



(= create (,,, ui texture sampler
	(? (! ui) (@@ nil))
	(= ui (:: ui ui:core$ui_type))
	(= texture (:: texture gfx:texture$gfx_texture_type))
	(= sampler (:: sampler gfx:sampler$gfx_sampler_type))
	(= out (. ui_texture_type
		ui
		texture
		sampler
		(+ ($ ui$_textures) 2)
	))
	(<- gfx:pipeline$update_descriptor ui$_pipeline [
		gfx:pipeline$DESCRIPTOR_TYPE_SAMPLER
		1
		gfx:stage$TYPE_FRAGMENT
		[
			texture
			sampler
		]
	] ($ ui$_textures))
	(<- array$push ui$_textures out)
	(@@ out)
))



(= ui:texture (. ui_texture_module_type
	ui_texture_type
	create
))
(## ui:texture)
