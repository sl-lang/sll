(---
	"gfx/buffer.sll"
	"gfx/color.sll"
	"gfx/context.sll"
	"string.sll"
	"types.sll"
	"window_manager/event.sll"
	"window_manager/window.sll"
)



(= ui_type (&:
	(,,, data
		(@@ (<- string$format "<ui:ui window=%s>"
			(:: data$window string_type)
		))
	) @@string@@
	(~ window_manager:window$window_manager_window_type) window
	(~ gfx:context$gfx_context_type) _ctx
	array_type _objects
	gfx:buffer$gfx_buffer_type _vertex_buffer
	gfx:buffer$gfx_buffer_type _index_buffer
))

(= ui_core_module_type (&:
	(~ type_type) ui_type
	(~ func_type) create
	(~ func_type) set_background
	(~ func_type) update
))



(= create (,,, window
	(? (! window) (@@ nil))
	(= window (:: window window_manager:window$window_manager_window_type))
	(= ctx (<- gfx:context$create window true))
	(= vertex_buffer (<- gfx:buffer$create ctx gfx:buffer$TYPE_VERTEX gfx:buffer$DATA_TYPE_FLOAT32))
	(<- gfx:buffer$hint_update_frequency vertex_buffer gfx:buffer$FREQUENCY_LOW)
	(= index_buffer (<- gfx:buffer$create ctx gfx:buffer$TYPE_INDEX gfx:buffer$DATA_TYPE_UINT32))
	(<- gfx:buffer$hint_update_frequency index_buffer gfx:buffer$FREQUENCY_LOW)
	(@@ (. ui_type
		window
		ctx
		[]
		vertex_buffer
		index_buffer
	))
))

(= set_background (,,, ui color
	(? (! ui) (@@))
	(= ui (:: ui ui_type))
	(<- gfx:color$set_clear_color ui$_ctx color)
))

(= update (,,, ui blocking?
	(? (! ui) (@@))
	(= ui (:: ui ui_type))
	(<- gfx:buffer$use ui$_vertex_buffer)
	(<- gfx:buffer$use ui$_index_buffer)
	(<- gfx:buffer$draw ui$_index_buffer)
	(<- gfx:context$render ui$_ctx)
	(<- window_manager:event$poll (!! blocking?))
))



(= ui:core (. ui_core_module_type
	ui_type
	create
	set_background
	update
))
(## ui:core)
