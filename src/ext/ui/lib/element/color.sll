(---
	"array.sll"
	"gfx/color.sll"
	"string.sll"
	"types.sll"
	"ui/_util.sll"
	"ui/core.sll"
	"ui/element.sll"
)



(# delete set_color set_parent update)



(= ui_rgb_type (&:
	(,,, data
		(@@ (<- string$format "(%f %f %f)"
			data$red
			data$green
			data$blue
		))
	) @@string@@
	float_type red
	float_type green
	float_type blue
))

(= ui_color_element_type (&:
	(,,, data
		(@@ (<- string$format "<ui:element:color colors=%s base=%s>"
			(<- string$str data$colors)
			(:: data$base string_type)
		))
	) @@string@@
	(,,, data
		(<- delete data)
	) @@delete@@
	(~ ui:element$ui_element_type) base
	array_type colors
	int_type _vertex_buffer_offset
	int_type _index_buffer_offset
))

(= ui_element_color_module_type (&:
	(~ type_type) ui_color_element_type
	(~ func_type) create
	(~ func_type) delete
	(~ func_type) set_color
	(~ func_type) set_parent
))



(= _create_color (,,, ui base parent colors
	(= out (. ui_color_element_type
		base
		[
			(. ui_rgb_type 0.0 0.0 0.0)
		]
		($ ui$_vertex_buffer$data)
		($ ui$_index_buffer$data)
	))
	(? ui {
		(= idx (// ($ ui$_vertex_buffer$data) 6))
		(<- array$extend ui$_vertex_buffer$data [
			0.0 0.0 0.0 0.0 0.0 0.0
			0.0 0.0 0.0 0.0 0.0 0.0
			0.0 0.0 0.0 0.0 0.0 0.0
			0.0 0.0 0.0 0.0 0.0 0.0
		])
		(<- array$extend ui$_index_buffer$data [
			(+ idx 2) (+ idx 1) idx
			(+ idx 3) (+ idx 2) idx
		])
		(= ui$_buffer_update_flags (| ui$_buffer_update_flags UI_BUFFER_UPDATE_FLAG_INDEX))
	})
	(? colors (<- set_color out colors))
	(? parent (<- set_parent out parent))
	(<- update out)
	(<- ui:element$setup out)
	(@@ out)
))

(= _deseralize_data (,,, ui base parent data
	(@@ (<- _create_color ui base parent data))
))

(= _seralize_data (,,, color
	(= c0 (: color$colors 0))
	(= c1 (: color$colors 1))
	(= c2 (: color$colors 2))
	(= c3 (: color$colors 3))
	(@@ (: [
		c0$red
		c0$green
		c0$blue
		c1$red
		c1$green
		c1$blue
		c2$red
		c2$green
		c2$blue
		c3$red
		c3$green
		c3$blue
	] 0 (* ($ color$colors) 3)))
))

(= _update_position_and_size (,,, color
	(? (! color$base$ui) (@@))
	(= idx color$_vertex_buffer_offset)
	(= x1 color$base$position$x)
	(= y1 color$base$position$y)
	(= x2 (+ x1 color$base$position$width))
	(= y2 (+ y1 color$base$position$height))
	(= vertex_buffer color$base$ui$_vertex_buffer)
	(= (: vertex_buffer$data idx) x1)
	(= (: vertex_buffer$data (+ idx 1)) y1)
	(= (: vertex_buffer$data (+ idx 6)) x2)
	(= (: vertex_buffer$data (+ idx 7)) y1)
	(= (: vertex_buffer$data (+ idx 12)) x2)
	(= (: vertex_buffer$data (+ idx 13)) y2)
	(= (: vertex_buffer$data (+ idx 18)) x1)
	(= (: vertex_buffer$data (+ idx 19)) y2)
	(= color$base$ui$_buffer_update_flags (| color$base$ui$_buffer_update_flags UI_BUFFER_UPDATE_FLAG_VERTEX))
))

(= create (,,, ui position_layout parent rgb
	(= ui (?: ui (:: ui ui:core$ui_type) nil))
	(@@ (<- _create_color
		ui
		(<- ui:element$create ui position_layout)
		parent
		rgb
	))
))

(= delete (,,, color
	(? (! color) (@@))
	(= color (:: color ui_color_element_type))
	(<- ui:element$delete color)
))

(= set_color (,,, color colors
	(? (! color) (@@))
	(= color (:: color ui_color_element_type))
	(= colors (: (:: colors array_type)))
	(= colors (?:
		(=== ($ colors) 2) (* colors 2)
		(=== ($ colors) 3) [colors]
		(: colors 0 4)
	)
	(-> (= i 0) (< i ($ colors))
		(= (: colors i) (:: (: colors i) ui_rgb_type))
		(++ i)
	)
	(= color$colors colors)
	(? (! color$base$ui) (@@))
	(= idx color$_vertex_buffer_offset)
	(= vertex_buffer color$base$ui$_vertex_buffer)
	(= c0 (: colors 0))
	(= c1 (|| (: colors 1) c0))
	(= c2 (|| (: colors 2) c0))
	(= c3 (|| (: colors 3) c0))
	(= (: vertex_buffer$data (+ idx 3)) c0$red)
	(= (: vertex_buffer$data (+ idx 4)) c0$green)
	(= (: vertex_buffer$data (+ idx 5)) c0$blue)
	(= (: vertex_buffer$data (+ idx 9)) c1$red)
	(= (: vertex_buffer$data (+ idx 10)) c1$green)
	(= (: vertex_buffer$data (+ idx 11)) c1$blue)
	(= (: vertex_buffer$data (+ idx 15)) c2$red)
	(= (: vertex_buffer$data (+ idx 16)) c2$green)
	(= (: vertex_buffer$data (+ idx 17)) c2$blue)
	(= (: vertex_buffer$data (+ idx 21)) c3$red)
	(= (: vertex_buffer$data (+ idx 22)) c3$green)
	(= (: vertex_buffer$data (+ idx 23)) c3$blue)
	(= color$base$ui$_buffer_update_flags (| color$base$ui$_buffer_update_flags UI_BUFFER_UPDATE_FLAG_VERTEX))
))

(= set_parent (,,, color parent
	(? (! color) (@@))
	(= color (:: color ui_color_element_type))
	(?
		(! (<- ui:element$set_parent color parent)) (@@ false)
		(! color$base$ui) (@@ true)
	)
	(= idx color$_vertex_buffer_offset)
	(= z (:: color$base$z_index float_type))
	(= vertex_buffer color$base$ui$_vertex_buffer)
	(= (: vertex_buffer$data (+ idx 2)) z)
	(= (: vertex_buffer$data (+ idx 8)) z)
	(= (: vertex_buffer$data (+ idx 14)) z)
	(= (: vertex_buffer$data (+ idx 20)) z)
	(= color$base$ui$_buffer_update_flags (| color$base$ui$_buffer_update_flags UI_BUFFER_UPDATE_FLAG_VERTEX))
	(@@ true)
))



(<- ui:element$register_element ui_color_element_type "ui:element:color" (. ui:element$ui_element_callbacks_type
	nil
	_deseralize_data
	nil
	nil
	_seralize_data
	_update_position_and_size
))



(= ui:element:color (. ui_element_color_module_type
	ui_color_element_type
	create
	delete
	set_color
	set_parent
))
(## ui:element:color)
