(---
	"array.sll"
	"gfx/color.sll"
	"string.sll"
	"types.sll"
	"ui/core.sll"
	"ui/element.sll"
	"ui/_util.sll"
)



(# delete set_color set_parent update)



(= ui_rectangle_element_type (&:
	(,,, data
		(@@ (<- string$format "<ui:element:rectangle color=(%f %f %f) base=%s>"
			data$color$red
			data$color$green
			data$color$blue
			(:: data$base string_type)
		))
	) @@string@@
	(,,, data
		(<- delete data)
	) @@delete@@
	(~ ui:element$ui_element_type) base
	gfx:color$gfx_color_type color
	int_type _vertex_buffer_offset
	int_type _index_buffer_offset
))

(= ui_element_rectangle_module_type (&:
	(~ type_type) ui_rectangle_element_type
	(~ func_type) create
	(~ func_type) delete
	(~ func_type) set_color
	(~ func_type) set_parent
))



(= _create_rectangle (,,, ui base parent color
	(= out (. ui_rectangle_element_type
		base
		[0.0 0.0 0.0]
		($ ui$_vertex_buffer$data)
		($ ui$_index_buffer$data)
	))
	(? ui {
		(= idx (// ($ ui$_vertex_buffer$data) 6))
		(<- array$extend ui$_vertex_buffer$data [
			0.0 0.0 0.0 0.0 0.0 0.0
			0.0 0.0 0.0 0.0 0.0 0.0
			0.0 0.0 0.0 0.0 0.0 0.0
			0.0 0.0 0.0 0.0 0.0 0.0
		])
		(<- array$extend ui$_index_buffer$data [
			idx (+ idx 2) (+ idx 1)
			(+ idx 3) (+ idx 2) idx
		])
		(= ui$_buffer_update_flags (| ui$_buffer_update_flags UI_BUFFER_UPDATE_FLAG_INDEX))
	})
	(? color (<- set_color out color))
	(? parent (<- set_parent out parent))
	(<- update out)
	(@@ out)
))

(= _deseralize_data (,,, ui base parent data
	(@@ (<- _create_rectangle ui base parent data))
))

(= _seralize_data (,,, rectangle
	(@@ [
		rectangle$color$red
		rectangle$color$green
		rectangle$color$blue
	])
))

(= _update_position_and_size (,,, rectangle
	(? (! rectangle$base$ui) (@@))
	(= idx rectangle$_vertex_buffer_offset)
	(= x1 rectangle$base$position$x)
	(= y1 rectangle$base$position$y)
	(= x2 (+ x1 rectangle$base$position$width))
	(= y2 (+ y1 rectangle$base$position$height))
	(= vertex_buffer rectangle$base$ui$_vertex_buffer)
	(= (: vertex_buffer$data idx) x1)
	(= (: vertex_buffer$data (+ idx 1)) y1)
	(= (: vertex_buffer$data (+ idx 6)) x2)
	(= (: vertex_buffer$data (+ idx 7)) y1)
	(= (: vertex_buffer$data (+ idx 12)) x2)
	(= (: vertex_buffer$data (+ idx 13)) y2)
	(= (: vertex_buffer$data (+ idx 18)) x1)
	(= (: vertex_buffer$data (+ idx 19)) y2)
	(= rectangle$base$ui$_buffer_update_flags (| rectangle$base$ui$_buffer_update_flags UI_BUFFER_UPDATE_FLAG_VERTEX))
))

(= create (,,, ui position_layout parent color
	(= ui (?: ui (:: ui ui:core$ui_type) nil))
	(@@ (<- _create_rectangle
		ui
		(<- ui:element$create ui position_layout)
		parent
		color
	))
))

(= delete (,,, rectangle
	(? (! rectangle) (@@))
	(= rectangle (:: rectangle ui_rectangle_element_type))
	(<- ui:element$delete rectangle)
))

(= set_color (,,, rectangle color
	(? (! rectangle) (@@))
	(= rectangle (:: rectangle ui_rectangle_element_type))
	(= color (:: color gfx:color$gfx_color_type))
	(= rectangle$color (: color))
	(? (! rectangle$base$ui) (@@))
	(= idx rectangle$_vertex_buffer_offset)
	(= vertex_buffer rectangle$base$ui$_vertex_buffer)
	(= (: vertex_buffer$data (+ idx 3)) color$red)
	(= (: vertex_buffer$data (+ idx 4)) color$green)
	(= (: vertex_buffer$data (+ idx 5)) color$blue)
	(= (: vertex_buffer$data (+ idx 9)) color$red)
	(= (: vertex_buffer$data (+ idx 10)) color$green)
	(= (: vertex_buffer$data (+ idx 11)) color$blue)
	(= (: vertex_buffer$data (+ idx 15)) color$red)
	(= (: vertex_buffer$data (+ idx 16)) color$green)
	(= (: vertex_buffer$data (+ idx 17)) color$blue)
	(= (: vertex_buffer$data (+ idx 21)) color$red)
	(= (: vertex_buffer$data (+ idx 22)) color$green)
	(= (: vertex_buffer$data (+ idx 23)) color$blue)
	(= rectangle$base$ui$_buffer_update_flags (| rectangle$base$ui$_buffer_update_flags UI_BUFFER_UPDATE_FLAG_VERTEX))
	(@@)
))

(= set_parent (,,, rectangle parent
	(? (! rectangle) (@@))
	(= rectangle (:: rectangle ui_rectangle_element_type))
	(?
		(! (<- ui:element$set_parent rectangle parent)) (@@ false)
		(! rectangle$base$ui) (@@ true)
	)
	(= idx rectangle$_vertex_buffer_offset)
	(= z (:: rectangle$base$z_index float_type))
	(= vertex_buffer rectangle$base$ui$_vertex_buffer)
	(= (: vertex_buffer$data (+ idx 2)) z)
	(= (: vertex_buffer$data (+ idx 8)) z)
	(= (: vertex_buffer$data (+ idx 14)) z)
	(= (: vertex_buffer$data (+ idx 20)) z)
	(= rectangle$base$ui$_buffer_update_flags (| rectangle$base$ui$_buffer_update_flags UI_BUFFER_UPDATE_FLAG_VERTEX))
	(@@ true)
))



(<- ui:element$register_element ui_rectangle_element_type "ui:element:rectangle" (. ui:element$ui_element_callbacks_type
	_deseralize_data
	nil
	_seralize_data
	_update_position_and_size
))



(= ui:element:rectangle (. ui_element_rectangle_module_type
	ui_rectangle_element_type
	create
	delete
	set_color
	set_parent
))
(## ui:element:rectangle)
