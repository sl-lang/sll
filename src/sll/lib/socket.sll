(---
	"_socket.sll"
	"array.sll"
	"error.sll"
	"file.sll"
	"int.sll"
	"string.sll"
	"types.sll"
)



(# _address_family_to_string _type_to_string)



(= socket_address_unknown_type (&:
	(,,, data
		(@@ "<UNKNOWN ADDRESS>")
	) @@string@@
))

(= socket_address_ipv4_type (&:
	(,,, data
		(@@ (<- string$format "%u:%u:%u:%u(%u)"
			(>> data$address 24)
			(& (>> data$address 16) 255)
			(& (>> data$address 8) 255)
			(& data$address 255)
			data$port
		))
	) @@string@@
	int_type address
	int_type port
))

(= socket_address_ipv6_type (&:
	(,,, data
		(= arr [])
		(-> (= i 0) (< i 8)
			(= value (: data$address i))
			(?
				value (<- array$push arr (<- int$to_hex value))
				(!== (: arr -1) "") (<- array$push arr "")
			)
			(++ i)
		)
		(? (! arr) (= arr ["::"]))
		(@@ (<- string$format "%s(%u)"
			(<- string$join ':' arr)
			data$port
		))
	) @@string@@
	array_type address
	int_type flow_info
	int_type scope_id
	int_type port
))

(= socket_address_info_type (&:
	(,,, data
		(@@ (<- string$format "<%s, %s, %u, %s>"
			(: _address_family_to_string data$address_family)
			(: _type_to_string data$type)
			data$protocol
			data$address
		))
	) @@string@@
	(~ int_type) address_family
	(~ int_type) type
	(~ int_type) protocol
	(~ object_type) address
))

(= socket_module_type (&:
	(~ type_type) socket_address_info_type
	(~ type_type) socket_address_ipv4_type
	(~ type_type) socket_address_ipv6_type
	(~ type_type) socket_address_unknown_type
	(~ type_type) socket_type
	(~ int_type) AF_INET
	(~ int_type) AF_INET6
	(~ int_type) SHUT_RD
	(~ int_type) SHUT_RDWR
	(~ int_type) SHUT_WR
	(~ int_type) SOCK_DGRAM
	(~ int_type) SOCK_RAW
	(~ int_type) SOCK_RDM
	(~ int_type) SOCK_SEQPACKET
	(~ int_type) SOCK_STREAM
	(~ func_type) accept
	(~ func_type) bind
	(~ func_type) connect
	(~ func_type) create
	(~ func_type) getaddrinfo
	(~ func_type) listen
	(~ func_type) shutdown
))




(= AF_INET 1)
(= AF_INET6 2)

(= SHUT_RD 1)
(= SHUT_WR 2)
(= SHUT_RDWR (| SHUT_RD SHUT_WR))

(= SOCK_STREAM 1)
(= SOCK_DGRAM 2)
(= SOCK_RAW 3)
(= SOCK_RDM 4)
(= SOCK_SEQPACKET 5)

(= ADDRESS_TYPE_UNKNOWN 0)
(= ADDRESS_TYPE_IPV4 1)
(= ADDRESS_TYPE_IPV6 2)



(= _address_family_to_string <
	0 "AF_UNSPEC"
	AF_INET "AF_INET"
	AF_INET6 "AF_INET6"
>)

(= _type_to_string <
	0 "SOCK_UNSPEC"
	SOCK_STREAM "SOCK_STREAM"
	SOCK_DGRAM "SOCK_DGRAM"
	SOCK_RAW "SOCK_RAW"
	SOCK_RDM "SOCK_RDM"
	SOCK_SEQPACKET "SOCK_SEQPACKET"
>)

(= _length_to_type <
	2 socket_address_ipv4_type
	4 socket_address_ipv6_type
>)



(= _bind_or_connect (,,, socket address func
	(= err (<- error$from_internal
		(<- func
			socket$_handle
			(:: address array_type)
		)
	))
	(? (!== err nil) (@@ err))
	(= socket$address address)
	(@@ nil)
))

(= _parse_address (,,, data
	(@@ (::
		data
		(|| (: _length_to_type ($ data)) socket_address_unknown_type)
	))
))

(= accept (,,, socket
	(? (! socket) (@@ nil))
	(= socket (:: socket socket_type))
	(@@ nil)
))

(= bind (,,, socket address
	(? (! socket) (@@ nil))
	(@@ (<- _bind_or_connect
		(:: socket socket_type)
		address
		(... "sll:socket_bind")
	))
))

(= connect (,,, socket address
	(? (! socket) (@@ nil))
	(= socket (:: socket socket_type))
	(= err (<- _bind_or_connect
		socket
		address
		(... "sll:socket_connect")
	))
	(? (=== err nil) (= socket$flags (| socket$flags file$FLAG_READ file$FLAG_WRITE)))
	(@@ err)
))

(= create (,,, address_family type protocol
	(= address_family (:: address_family int_type))
	(= type (:: type int_type))
	(= protocol (:: protocol int_type))
	(? (&&
		(!== address_family AF_INET)
		(!== address_family AF_INET6)
	) (@@ nil))
	(? (&&
		(!== type SOCK_STREAM)
		(!== type SOCK_DGRAM)
	) (@@ nil))
	(= handle (<- (... "sll:socket_create")
		address_family
		type
		protocol
	))
	(? (< handle 0) (@@ (<- error$from_internal (~ handle))))
	(@@ (. socket_type
		address_family
		type
		protocol
		0
		handle
	))
))

(= getaddrinfo (,,, node service address_family type protocol flags
	(= node (:: node string_type))
	(= service (:: service string_type))
	(= address_family (:: address_family int_type))
	(= type (:: type int_type))
	(= protocol (:: protocol int_type))
	(= flags (:: flags int_type))
	(= out (<- (... "sll:socket_get_address_info")
		node
		service
		address_family
		type
		protocol
		flags
	))
	(@@ (?: (=== (:? out) int_type)
		(<- error$from_internal out)
		([> (= i 0) (< i ($ out))
			(= elem (: out i))
			(++ i)
			(. socket_address_info_type
				(: elem 0)
				(: elem 1)
				(: elem 2)
				(<- _parse_address (: elem 3))
			)
		)
	))
))

(= listen (,,, socket queue_size
	(? (! socket) (@@ nil))
	(= socket (:: socket socket_type))
	(= queue_size (:: queue_size int_type))
	(@@ (<- error$from_internal
		(<- (... "sll:socket_listen")
			socket$_handle
			queue_size
		)
	))
))

(= shutdown (,,, socket flags
	(? (! socket) (@@ nil))
	(= socket (:: socket socket_type))
	(= flags (:: flags int_type))
	(@@ (<- error$from_internal
		(<- (... "sll:socket_shutdown")
			socket$_handle
			(& flags (| SHUT_RD SHUT_WR))
		)
	))
))



(= socket (. socket_module_type
	socket_address_info_type
	socket_address_ipv4_type
	socket_address_ipv6_type
	socket_address_unknown_type
	socket_type
	AF_INET
	AF_INET6
	SHUT_RD
	SHUT_RDWR
	SHUT_WR
	SOCK_DGRAM
	SOCK_RAW
	SOCK_RDM
	SOCK_SEQPACKET
	SOCK_STREAM
	accept
	bind
	connect
	create
	getaddrinfo
	listen
	shutdown
))
(## socket)
