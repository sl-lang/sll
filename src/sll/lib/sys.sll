(--- "types.sll" "path.sll" "string.sll" "map.sll" "date.sll" "_internal.sll" "array.sll")



(= version_type (&:
	(,,, dt {
		(@@ (<- string$format "sll-v%u.%u.%u" dt$major dt$minor dt$patch))
	}) @@string@@
	(~ int_type) major
	(~ int_type) minor
	(~ int_type) patch
	(~ string_type) commit
	(~ string_type) full_commit
	(~ string_type) url
	(~ date$date_type) time
))

(= sys_module_type (&:
	(~ array_type) ARGV
	(~ int_type) CPU_COUNT
	(~ map_type) ENVIRONMENT
	(~ string_type) EXECUTABLE
	(~ string_type) LIBRARY
	(~ string_type) LIBRARY_EXTENSION
	(~ string_type) LIBRARY_PATH
	(~ string_type) PLATFORM
	(~ array_type) SANDBOX_FLAGS
	(~ version_type) VERSION
	(~ func_type) get_env
	(~ func_type) get_sandbox_flags
	(~ func_type) load_library
	(~ func_type) remove_env
	(~ func_type) set_sandbox_flags
	(~ func_type) set_env
))



(= ARGV (<- (... "sll:sys_get_args")))

(= CPU_COUNT (<- (... "sll:sys_get_cpu_count")))

(= ENVIRONMENT (<- (... "sll:sys_get_env")))

(= EXECUTABLE (<- (... "sll:sys_get_executable")))

(= LIBRARY (<- (... "sll:sys_get_library")))
(= LIBRARY_PATH (+ (<- path$absolute (+ (: (<- path$split LIBRARY) 0) path$SEPARATOR "sys_lib")) path$SEPARATOR))
(= LIBRARY_EXTENSION (?: (=== _PLATFORM "windows") "dll" "so"))

(= v_dt (<- (... "sll:sys_get_version")))
(= commit (: v_dt 3))
(= short_commit "")
(= url "")
(? commit {
	(= short_commit (: commit 0 7))
	(= url (<- string$format "https://github.com/sl-lang/sll/tree/sll-v%u.%u.%u"
		(: v_dt 0)
		(: v_dt 1)
		(: v_dt 2)
	))
})
(= VERSION (. version_type
	(: v_dt 0)
	(: v_dt 1)
	(: v_dt 2)
	short_commit
	commit
	url
	(<- date$from_time_ns (: v_dt 4))
))



(= get_env (,,, k default
	(@@ (|| (: ENVIRONMENT (<- string$upper_case (<- string$replace (:: k string_type) '=' ""))) default))
))

(= get_sandbox_flags (,,,
	(= fl (<- (... "sll:sys_get_sandbox_flags")))
	(= i 0)
	(= out [])
	(-> nil fl
		(? (& fl 1)
			(<- array$push out (: _SANDBOX_FLAGS i))
		)
		(= fl (>> fl 1))
		(++ i)
	)
	(@@ out)
))

(= load_library (,,, fp chk
	(? (! fp) (@@ nil))
	(= fp (:: fp string_type))
	(= sz 0)
	(= h [0 0 0 0])
	(? (&& (=== (:? chk) array_type) (=== ($ chk) 5)) {
		(= sz (: chk 0))
		(= h (>> chk 1))
	})
	(@@ (<- (... "sll:sys_load_library")
		fp
		sz
		(: h 0)
		(: h 1)
		(: h 2)
		(: h 3)
	))
)

(= remove_env (,,, k
	(? (! k) (@@ nil))
	(= k (<- string$replace (:: k string_type) '=' ""))
	(<- map$remove ENVIRONMENT k)
	(<- (... "sll:sys_remove_env") k)
))

(= set_sandbox_flags (,,, @@flags@@
	(= o 1)
	(-> (= i 0) (< i ($ @@flags@@))
		(= j (<- array$index _SANDBOX_FLAGS (:: (: @@flags@@ i) string_type)))
		(? (=== j -1)
			(= o 0)
			(<- (... "sll:sys_set_sandbox_flag") j)
		)
		(++ i)
	)
	(@@ o)
))

(= set_env (,,, k v
	(?
		(! k) (@@)
		(! v) (@@ (<- remove_env k))
	)
	(= k (<- string$replace (:: k string_type) '=' ""))
	(= v (:: v string_type))
	(= (: ENVIRONMENT k) v)
	(<- (... "sll:sys_set_env") k v)
))



(= sys (. sys_module_type
	ARGV
	CPU_COUNT
	ENVIRONMENT
	EXECUTABLE
	LIBRARY
	LIBRARY_EXTENSION
	LIBRARY_PATH
	_PLATFORM
	_SANDBOX_FLAGS
	VERSION
	get_env
	get_sandbox_flags
	load_library
	remove_env
	set_sandbox_flags
	set_env
))
(## sys)
