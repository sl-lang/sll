(--- "types.sll")



(= random_module_type (&:
	(~ func_type) choice
	(~ func_type) get_int
	(~ func_type) get_float
	(~ func_type) get_char
	(~ func_type) get_string
	(~ func_type) shuffle
))



(= choice (,,, data
	(?? (:? data)
		int_type (@@ (<- (... "sll:random_get_int") 0 (- data 1)))
		float_type (@@ (<- (... "sll:get_float") 0 data))
		char_type (@@ (: data (<- (... "sll:random_get_int") 0 (- data 1))))
		string_type (@@ (: data (<- (... "sll:random_get_int") 0 (- ($ data) 1))))
		map_type (@@ (: (:: data map_key_type) (<- (... "sll:random_get_int") 0 (- ($ data) 1))))
		{
			(= data (:: data array_type))
			(@@ (: data (<- (... "sll:random_get_int") 0 (- ($ data) 1))))
		}
	)
))

(= get_int (,,, mn mx {
	(= mn (:: mn int_type))
	(= mx (:: mx int_type))
	(@@ (<- (... "sll:random_get_int")
		mn
		(?: (=== mn mx) (+ mx 1) mx)
	))
}))

(= get_float (,,, mn mx {
	(= mn (:: mn float_type))
	(= mx (:: mx float_type))
	(@@ (<- (... "sll:random_get_float")
		mn
		(?: (=== mn mx) (+ mx 1) mx)
	))
}))

(= get_char (,,, mn mx {
	(= mn (:: mn char_type))
	(= mx (:: mx char_type))
	(? (=== mn mx) {
		(= mn 0)
		(= mx 255)
	})
	(@@ (:: (<- (... "sll:random_get_int")
		mn
		mx
	) char_type))
}))

(= get_string (,,, l mn mx {
	(= l (:: l int_type))
	(? (< l 1) {
		(@@ "")
	})
	(= mn (:: mn char_type))
	(= mx (:: mx char_type))
	(? (< mx mn) {
		(= mx 255)
	} (=== mn mx) {
		(? mn {
			(@@ (* (:: mn string_type) l))
		} {
			(= mx 255)
		})
	})
	(@@ (<- (... "sll:random_get_string")
		l
		mn
		mx
	))
}))

(= shuffle (,,, arr
	(? (|| (!== (:? arr) array_type) (< ($ arr) 2)) (@@))
	(-> (= i ($ arr)) (> i 1)
		(-- i)
		(= j (<- (... "sll:random_get_int") 0 i))
		(= tmp (: arr i))
		(= (: arr i) (: arr j))
		(= (: arr j) tmp)
	)
))



(= random (. random_module_type
	choice
	get_int
	get_float
	get_char
	get_string
	shuffle
))
(## random)
