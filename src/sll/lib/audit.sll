(--- "types.sll")



(= audit_module_type (&:
	(~ array_type) BUILTIN_EVENTS
	(~ func_type) audit
	(~ func_type) register
	(~ func_type) unregister
))



(= BUILTIN_EVENTS <
	"sll.error.create" ["type" "data" "backtrace"]
	"sll.error.from_internal" ["error_code" "data"]
	"sll.file.copy" ["src" "dst"]
	"sll.file.delete" ["path"]
	"sll.file.open" ["path" "mode"]
	"sll.file.rename" ["src" "dst"]
	"sll.object.new" ["template" "data"]
	"sll.path.list_dir" ["path"]
	"sll.path.list_dir.recursive" ["path"]
	"sll.path.mkdir" ["path"]
	"sll.path.set_cwd" ["path"]
	"sll.process.shell" ["command"]
	"sll.process.start" ["arguments" "cwd" "stdin"]
	"sll.sys.env.delete" ["key"]
	"sll.sys.env.set" ["key" "value"]
	"sll.sys.load_library" ["name"]
	"sll.sys.set_sandbox_flag" ["flag"]
	"sll.thread.create" ["func" "args" "thread"]
	"sll.thread.return" ["thread"]
	"sll.vm.get_location" ["location"]
	"sll.vm.get_ref_count" ["object"]
	"sll.vm.init" []
	"sll.vm.shutdown" []
>)



(= audit (... "sll:audit_audit"))

(= register (... "sll:audit_register"))

(= unregister (... "sll:audit_unregister"))



(= audit (. audit_module_type
	BUILTIN_EVENTS
	audit
	register
	unregister
))
(## audit)
