! not
!! bool
!. thread_id
!<* thread_lock
!<+ thread_semaphore
!<- read_blocking
!<. read_blocking_char
!<< thread_wait
!<= thread_barrier_eq
!<> thread_barrier_geq
!= not_equal
!== strict_not_equal
!@@ thread_exit
# operation_list variable_declaration
## operation_list export
$ length
% mod
%% ref
& bit_and
&& and
&: decl
&:? nameof_type
* mult
*** inline_func $function
+ add
++ inc
, comma
,,, func $function
- sub
-- dec
--- operation_list import
-> for $loop
. new
... internal_func
.? nameof
/ div
// floor_div
: access
:! deep_copy
:: cast
:> print
:? typeof
< less
<- call
<-* call_array
<< bit_left_shift
<<< continue
<= less_equal
= assign
== equal
=== strict_equal
> more
>- while $loop
>< loop
>= more_equal
>> bit_right_shift
? if
?: inline_if
?? switch
@ break
@@ return
[< while_array $loop
[> for_array $loop
^ bit_xor
{< while_map $loop
{> for_map $loop
| bit_or
|: has
|| or
~ bit_not
