(---
	"@build-script/config.sll"
	"array.sll"
	"file.sll"
	"log.sll"
	"string.sll"
	"types.sll"
)



(= optimizer_module_type (&:
	(~ func_type) generate_optimizer
))



(= generate_optimizer (,,,
	(<- log$log "Generating optimizer from '" config$OPTIMIZER_CONFIG_FILE_PATH "'...")
	(<- log$log "  Loading node types from '" config$OPTIMIZER_NODE_HEADER_FILE_PATH "'...")
	(= data (<- string$split
		(<- file$read
			(<- file$open
				config$OPTIMIZER_NODE_HEADER_FILE_PATH
				"r"
			)
		)
		'\n'
	))
	; (= type_to_number <>)
	; (-> (= i 0) (< i ($ data))
	; 	(= line (: data i))
	; 	(++ i)
	; 	(? (! (<- string$starts line "#define")) (<<<))
	; 	(= line (<- string$split
	; 		(<- string$trim
	; 			(>> line 7)
	; 		)
	; 		' '
	; 	))
	; 	(= name (: line 0))
	; 	(? (||
	; 		(! (<- string$starts name config$OPTIMIZER_NODE_TYPE_PREFIX))
	; 		(|: config$OPTIMIZER_IGNORED_NODE_TYPES name)
	; 	) (<<<))
	; 	(=
	; 		(:
	; 			type_to_number
	; 			(<- string$lower_case
	; 				(>>
	; 					name
	; 					($ config$OPTIMIZER_NODE_TYPE_PREFIX)
	; 				)
	; 			)
	; 		)
	; 		(::
	; 			(:
	; 				line
	; 				1
	; 			)
	; 			int_type
	; 		)
	; 	)
	; )
	; (:> type_to_number '\n')
	; (--- "@build-script/util.sll")(<- util$fail_and_exit)
	(<- log$log "  Reading configuration file...")
	(= data (<- string$split
		(<- file$read
			(<- file$open
				config$OPTIMIZER_CONFIG_FILE_PATH
				"r"
			)
		)
		'\n'
	))
	(= init_and_deinit [])
	(= pre_visit [])
	(= data ([> (= i 0) (< i ($ data))
		(= line (<- string$trim (: data i)))
		(++ i)
		(? (|| (! line) (=== (: line 0) '#')) (<<<))
		(= line (<- string$split line ':'))
		(= name (: line 0))
		(= line (>> line 1))
		(? (|: line "init")(<- array$push init_and_deinit name))
		(? (|: line "pre_visit")(<- array$push pre_visit name))
		name
	))
	(<- log$log "  Generating code in '" config$OPTIMIZER_OUTPUT_FILE_PATH "'...")
	(= fh (<- file$open config$OPTIMIZER_OUTPUT_FILE_PATH "w"))
	(<- file$write fh
`#ifndef __SLL_GENERATED_OPTIMIZER_H__
#define __SLL_GENERATED_OPTIMIZER_H__ 1
#include <sll/_internal/common.h>
#include <sll/node.h>
`)
	(<- file$write fh
`


#endif
`)
	(<- file$close fh)
))



(= optimizer (. optimizer_module_type
	generate_optimizer
))
(## optimizer)
