
build/sll-ext-debug-0.7.0.so:     file format elf64-x86-64
build/sll-ext-debug-0.7.0.so
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000001200

Program Header:
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12
         filesz 0x0000000000000a70 memsz 0x0000000000000a70 flags r--
    LOAD off    0x0000000000001000 vaddr 0x0000000000001000 paddr 0x0000000000001000 align 2**12
         filesz 0x0000000000000b01 memsz 0x0000000000000b01 flags r-x
    LOAD off    0x0000000000002000 vaddr 0x0000000000002000 paddr 0x0000000000002000 align 2**12
         filesz 0x00000000000003c0 memsz 0x00000000000003c0 flags r--
    LOAD off    0x0000000000002de8 vaddr 0x0000000000003de8 paddr 0x0000000000003de8 align 2**12
         filesz 0x00000000000002a8 memsz 0x00000000000002c0 flags rw-
 DYNAMIC off    0x0000000000002df8 vaddr 0x0000000000003df8 paddr 0x0000000000003df8 align 2**3
         filesz 0x00000000000001c0 memsz 0x00000000000001c0 flags rw-
    NOTE off    0x0000000000000000 vaddr 0x00000000000002a8 paddr 0x0000000000000000 align 2**3
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags r--
    NOTE off    0x0000000000000000 vaddr 0x00000000000002c8 paddr 0x0000000000000000 align 2**3
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags r--
0x6474e553 off    0x0000000000000000 vaddr 0x00000000000002a8 paddr 0x0000000000000000 align 2**3
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags r--
EH_FRAME off    0x000000000000212c vaddr 0x000000000000212c paddr 0x000000000000212c align 2**2
         filesz 0x000000000000007c memsz 0x000000000000007c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**3
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x0000000000001000
  FINI                 0x0000000000001af4
  INIT_ARRAY           0x0000000000003de8
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000003df0
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x00000000000002f0
  STRTAB               0x0000000000000588
  SYMTAB               0x0000000000000318
  STRSZ                0x000000000000020f
  SYMENT               0x0000000000000018
  PLTGOT               0x0000000000004000
  PLTRELSZ             0x0000000000000150
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000000920
  RELA                 0x0000000000000800
  RELASZ               0x0000000000000120
  RELAENT              0x0000000000000018
  VERNEED              0x00000000000007d0
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x0000000000000798
  RELACOUNT            0x0000000000000003

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .dynsym       00000270  0000000000000318  0000000000000318  00000318  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .dynstr       0000020f  0000000000000588  0000000000000588  00000588  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .rela.dyn     00000120  0000000000000800  0000000000000800  00000800  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .rela.plt     00000150  0000000000000920  0000000000000920  00000920  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init         0000001b  0000000000001000  0000000000001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .plt          000000f0  0000000000001020  0000000000001020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .plt.got      00000010  0000000000001110  0000000000001110  00001110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .plt.sec      000000e0  0000000000001120  0000000000001120  00001120  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text         000008f2  0000000000001200  0000000000001200  00001200  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .fini         0000000d  0000000000001af4  0000000000001af4  00001af4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .rodata       00000129  0000000000002000  0000000000002000  00002000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .eh_frame_hdr 0000007c  000000000000212c  000000000000212c  0000212c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .eh_frame     00000218  00000000000021a8  00000000000021a8  000021a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 13 .init_array   00000008  0000000000003de8  0000000000003de8  00002de8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 14 .fini_array   00000008  0000000000003df0  0000000000003df0  00002df0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 15 .dynamic      000001c0  0000000000003df8  0000000000003df8  00002df8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 16 .got          00000048  0000000000003fb8  0000000000003fb8  00002fb8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 17 .got.plt      00000088  0000000000004000  0000000000004000  00003000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .data         00000008  0000000000004088  0000000000004088  00003088  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .bss          00000018  0000000000004090  0000000000004090  00003090  2**2
                  ALLOC
SYMBOL TABLE:
no symbols



Disassembly of section .dynsym:

0000000000000318 <.dynsym>:
	...
 330:	a0 00 00 00 10 00 00 	movabs 0x10000000,%al
 337:	00 00 
	...
 345:	00 00                	add    %al,(%rax)
 347:	00 76 00             	add    %dh,0x0(%rsi)
 34a:	00 00                	add    %al,(%rax)
 34c:	10 00                	adc    %al,(%rax)
	...
 35e:	00 00                	add    %al,(%rax)
 360:	10 00                	adc    %al,(%rax)
 362:	00 00                	add    %al,(%rax)
 364:	20 00                	and    %al,(%rax)
	...
 376:	00 00                	add    %al,(%rax)
 378:	6b 01 00             	imul   $0x0,(%rcx),%eax
 37b:	00 10                	add    %dl,(%rax)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 f4                	add    %dh,%ah
 391:	00 00                	add    %al,(%rax)
 393:	00 12                	add    %dl,(%rdx)
	...
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 8f 00 00 00 10    	add    %cl,0x10000000(%rdi)
	...
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 dc                	add    %bl,%ah
 3c1:	01 00                	add    %eax,(%rax)
 3c3:	00 10                	add    %dl,(%rax)
	...
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 63 01             	add    %ah,0x1(%rbx)
 3da:	00 00                	add    %al,(%rax)
 3dc:	10 00                	adc    %al,(%rax)
	...
 3ee:	00 00                	add    %al,(%rax)
 3f0:	a8 01                	test   $0x1,%al
 3f2:	00 00                	add    %al,(%rax)
 3f4:	10 00                	adc    %al,(%rax)
	...
 406:	00 00                	add    %al,(%rax)
 408:	64 00 00             	add    %al,%fs:(%rax)
 40b:	00 10                	add    %dl,(%rax)
	...
 41d:	00 00                	add    %al,(%rax)
 41f:	00 01                	add    %al,(%rcx)
 421:	00 00                	add    %al,(%rax)
 423:	00 20                	add    %ah,(%rax)
	...
 435:	00 00                	add    %al,(%rax)
 437:	00 05 01 00 00 10    	add    %al,0x10000001(%rip)        # 1000043e <__sll_unload+0xfffecde>
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 ca                	add    %cl,%dl
 451:	00 00                	add    %al,(%rax)
 453:	00 10                	add    %dl,(%rax)
	...
 465:	00 00                	add    %al,(%rax)
 467:	00 23                	add    %ah,(%rbx)
 469:	01 00                	add    %eax,(%rax)
 46b:	00 10                	add    %dl,(%rax)
	...
 47d:	00 00                	add    %al,(%rax)
 47f:	00 c6                	add    %al,%dh
 481:	01 00                	add    %eax,(%rax)
 483:	00 10                	add    %dl,(%rax)
	...
 495:	00 00                	add    %al,(%rax)
 497:	00 97 01 00 00 10    	add    %dl,0x10000001(%rdi)
	...
 4ad:	00 00                	add    %al,(%rax)
 4af:	00 46 01             	add    %al,0x1(%rsi)
 4b2:	00 00                	add    %al,(%rax)
 4b4:	10 00                	adc    %al,(%rax)
	...
 4c6:	00 00                	add    %al,(%rax)
 4c8:	2c 00                	sub    $0x0,%al
 4ca:	00 00                	add    %al,(%rax)
 4cc:	20 00                	and    %al,(%rax)
	...
 4de:	00 00                	add    %al,(%rax)
 4e0:	55                   	push   %rbp
 4e1:	00 00                	add    %al,(%rax)
 4e3:	00 10                	add    %dl,(%rax)
	...
 4f5:	00 00                	add    %al,(%rax)
 4f7:	00 b2 00 00 00 10    	add    %dh,0x10000000(%rdx)
	...
 50d:	00 00                	add    %al,(%rax)
 50f:	00 46 00             	add    %al,0x0(%rsi)
 512:	00 00                	add    %al,(%rax)
 514:	22 00                	and    (%rax),%al
	...
 526:	00 00                	add    %al,(%rax)
 528:	e1 00                	loope  52a <__cxa_finalize@plt-0xbe6>
 52a:	00 00                	add    %al,(%rax)
 52c:	10 00                	adc    %al,(%rax)
	...
 53e:	00 00                	add    %al,(%rax)
 540:	35 01 00 00 10       	xor    $0x10000001,%eax
	...
 555:	00 00                	add    %al,(%rax)
 557:	00 8a 01 00 00 12    	add    %cl,0x12000001(%rdx)
 55d:	00 0e                	add    %cl,(%rsi)
 55f:	00 60 17             	add    %ah,0x17(%rax)
 562:	00 00                	add    %al,(%rax)
 564:	00 00                	add    %al,(%rax)
 566:	00 00                	add    %al,(%rax)
 568:	05 00 00 00 00       	add    $0x0,%eax
 56d:	00 00                	add    %al,(%rax)
 56f:	00 58 01             	add    %bl,0x1(%rax)
 572:	00 00                	add    %al,(%rax)
 574:	12 00                	adc    (%rax),%al
 576:	0e                   	(bad)  
 577:	00 30                	add    %dh,(%rax)
 579:	16                   	(bad)  
 57a:	00 00                	add    %al,(%rax)
 57c:	00 00                	add    %al,(%rax)
 57e:	00 00                	add    %al,(%rax)
 580:	26 01 00             	add    %eax,%es:(%rax)
 583:	00 00                	add    %al,(%rax)
 585:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000000588 <.dynstr>:
 588:	00 5f 5f             	add    %bl,0x5f(%rdi)
 58b:	67 6d                	insl   (%dx),%es:(%edi)
 58d:	6f                   	outsl  %ds:(%rsi),(%dx)
 58e:	6e                   	outsb  %ds:(%rsi),(%dx)
 58f:	5f                   	pop    %rdi
 590:	73 74                	jae    606 <__cxa_finalize@plt-0xb0a>
 592:	61                   	(bad)  
 593:	72 74                	jb     609 <__cxa_finalize@plt-0xb07>
 595:	5f                   	pop    %rdi
 596:	5f                   	pop    %rdi
 597:	00 5f 49             	add    %bl,0x49(%rdi)
 59a:	54                   	push   %rsp
 59b:	4d 5f                	rex.WRB pop %r15
 59d:	64 65 72 65          	fs gs jb 606 <__cxa_finalize@plt-0xb0a>
 5a1:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5a8:	4d 
 5a9:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5ab:	6f                   	outsl  %ds:(%rsi),(%dx)
 5ac:	6e                   	outsb  %ds:(%rsi),(%dx)
 5ad:	65 54                	gs push %rsp
 5af:	61                   	(bad)  
 5b0:	62                   	(bad)  
 5b1:	6c                   	insb   (%dx),%es:(%rdi)
 5b2:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 5b6:	54                   	push   %rsp
 5b7:	4d 5f                	rex.WRB pop %r15
 5b9:	72 65                	jb     620 <__cxa_finalize@plt-0xaf0>
 5bb:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5c2:	4d 
 5c3:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5c5:	6f                   	outsl  %ds:(%rsi),(%dx)
 5c6:	6e                   	outsb  %ds:(%rsi),(%dx)
 5c7:	65 54                	gs push %rsp
 5c9:	61                   	(bad)  
 5ca:	62                   	(bad)  
 5cb:	6c                   	insb   (%dx),%es:(%rdi)
 5cc:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 5d0:	63 78 61             	movslq 0x61(%rax),%edi
 5d3:	5f                   	pop    %rdi
 5d4:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 5da:	7a 65                	jp     641 <__cxa_finalize@plt-0xacf>
 5dc:	00 73 6c             	add    %dh,0x6c(%rbx)
 5df:	6c                   	insb   (%dx),%es:(%rdi)
 5e0:	5f                   	pop    %rdi
 5e1:	73 74                	jae    657 <__cxa_finalize@plt-0xab9>
 5e3:	61                   	(bad)  
 5e4:	74 69                	je     64f <__cxa_finalize@plt-0xac1>
 5e6:	63 5f 69             	movslq 0x69(%rdi),%ebx
 5e9:	6e                   	outsb  %ds:(%rsi),(%dx)
 5ea:	74 00                	je     5ec <__cxa_finalize@plt-0xb24>
 5ec:	73 6c                	jae    65a <__cxa_finalize@plt-0xab6>
 5ee:	6c                   	insb   (%dx),%es:(%rdi)
 5ef:	5f                   	pop    %rdi
 5f0:	63 72 65             	movslq 0x65(%rdx),%esi
 5f3:	61                   	(bad)  
 5f4:	74 65                	je     65b <__cxa_finalize@plt-0xab5>
 5f6:	5f                   	pop    %rdi
 5f7:	6f                   	outsl  %ds:(%rsi),(%dx)
 5f8:	62                   	(bad)  
 5f9:	6a 65                	pushq  $0x65
 5fb:	63 74 00 73          	movslq 0x73(%rax,%rax,1),%esi
 5ff:	6c                   	insb   (%dx),%es:(%rdi)
 600:	6c                   	insb   (%dx),%es:(%rdi)
 601:	5f                   	pop    %rdi
 602:	63 75 72             	movslq 0x72(%rbp),%esi
 605:	72 65                	jb     66c <__cxa_finalize@plt-0xaa4>
 607:	6e                   	outsb  %ds:(%rsi),(%dx)
 608:	74 5f                	je     669 <__cxa_finalize@plt-0xaa7>
 60a:	72 75                	jb     681 <__cxa_finalize@plt-0xa8f>
 60c:	6e                   	outsb  %ds:(%rsi),(%dx)
 60d:	74 69                	je     678 <__cxa_finalize@plt-0xa98>
 60f:	6d                   	insl   (%dx),%es:(%rdi)
 610:	65 5f                	gs pop %rdi
 612:	64 61                	fs (bad) 
 614:	74 61                	je     677 <__cxa_finalize@plt-0xa99>
 616:	00 73 6c             	add    %dh,0x6c(%rbx)
 619:	6c                   	insb   (%dx),%es:(%rdi)
 61a:	5f                   	pop    %rdi
 61b:	61                   	(bad)  
 61c:	72 72                	jb     690 <__cxa_finalize@plt-0xa80>
 61e:	61                   	(bad)  
 61f:	79 5f                	jns    680 <__cxa_finalize@plt-0xa90>
 621:	63 72 65             	movslq 0x65(%rdx),%esi
 624:	61                   	(bad)  
 625:	74 65                	je     68c <__cxa_finalize@plt-0xa84>
 627:	00 73 6c             	add    %dh,0x6c(%rbx)
 62a:	6c                   	insb   (%dx),%es:(%rdi)
 62b:	5f                   	pop    %rdi
 62c:	69 6e 74 5f 74 6f 5f 	imul   $0x5f6f745f,0x74(%rsi),%ebp
 633:	6f                   	outsl  %ds:(%rsi),(%dx)
 634:	62                   	(bad)  
 635:	6a 65                	pushq  $0x65
 637:	63 74 00 73          	movslq 0x73(%rax,%rax,1),%esi
 63b:	6c                   	insb   (%dx),%es:(%rdi)
 63c:	6c                   	insb   (%dx),%es:(%rdi)
 63d:	5f                   	pop    %rdi
 63e:	73 74                	jae    6b4 <__cxa_finalize@plt-0xa5c>
 640:	72 69                	jb     6ab <__cxa_finalize@plt-0xa65>
 642:	6e                   	outsb  %ds:(%rsi),(%dx)
 643:	67 5f                	addr32 pop %rdi
 645:	66 72 6f             	data16 jb 6b7 <__cxa_finalize@plt-0xa59>
 648:	6d                   	insl   (%dx),%es:(%rdi)
 649:	5f                   	pop    %rdi
 64a:	70 6f                	jo     6bb <__cxa_finalize@plt-0xa55>
 64c:	69 6e 74 65 72 00 73 	imul   $0x73007265,0x74(%rsi),%ebp
 653:	6c                   	insb   (%dx),%es:(%rdi)
 654:	6c                   	insb   (%dx),%es:(%rdi)
 655:	5f                   	pop    %rdi
 656:	63 72 65             	movslq 0x65(%rdx),%esi
 659:	61                   	(bad)  
 65a:	74 65                	je     6c1 <__cxa_finalize@plt-0xa4f>
 65c:	5f                   	pop    %rdi
 65d:	6f                   	outsl  %ds:(%rsi),(%dx)
 65e:	62                   	(bad)  
 65f:	6a 65                	pushq  $0x65
 661:	63 74 5f 74          	movslq 0x74(%rdi,%rbx,2),%esi
 665:	79 70                	jns    6d7 <__cxa_finalize@plt-0xa39>
 667:	65 00 73 6c          	add    %dh,%gs:0x6c(%rbx)
 66b:	6c                   	insb   (%dx),%es:(%rdi)
 66c:	5f                   	pop    %rdi
 66d:	72 65                	jb     6d4 <__cxa_finalize@plt-0xa3c>
 66f:	6c                   	insb   (%dx),%es:(%rdi)
 670:	65 61                	gs (bad) 
 672:	73 65                	jae    6d9 <__cxa_finalize@plt-0xa37>
 674:	5f                   	pop    %rdi
 675:	6f                   	outsl  %ds:(%rsi),(%dx)
 676:	62                   	(bad)  
 677:	6a 65                	pushq  $0x65
 679:	63 74 00 5f          	movslq 0x5f(%rax,%rax,1),%esi
 67d:	5f                   	pop    %rdi
 67e:	73 74                	jae    6f4 <__cxa_finalize@plt-0xa1c>
 680:	61                   	(bad)  
 681:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 684:	63 68 6b             	movslq 0x6b(%rax),%ebp
 687:	5f                   	pop    %rdi
 688:	66 61                	data16 (bad) 
 68a:	69 6c 00 73 6c 6c 5f 	imul   $0x635f6c6c,0x73(%rax,%rax,1),%ebp
 691:	63 
 692:	75 72                	jne    706 <__cxa_finalize@plt-0xa0a>
 694:	72 65                	jb     6fb <__cxa_finalize@plt-0xa15>
 696:	6e                   	outsb  %ds:(%rsi),(%dx)
 697:	74 5f                	je     6f8 <__cxa_finalize@plt-0xa18>
 699:	69 6e 73 74 72 75 63 	imul   $0x63757274,0x73(%rsi),%ebp
 6a0:	74 69                	je     70b <__cxa_finalize@plt-0xa05>
 6a2:	6f                   	outsl  %ds:(%rsi),(%dx)
 6a3:	6e                   	outsb  %ds:(%rsi),(%dx)
 6a4:	5f                   	pop    %rdi
 6a5:	69 6e 64 65 78 00 73 	imul   $0x73007865,0x64(%rsi),%ebp
 6ac:	6c                   	insb   (%dx),%es:(%rdi)
 6ad:	6c                   	insb   (%dx),%es:(%rdi)
 6ae:	5f                   	pop    %rdi
 6af:	6f                   	outsl  %ds:(%rsi),(%dx)
 6b0:	70 65                	jo     717 <__cxa_finalize@plt-0x9f9>
 6b2:	72 61                	jb     715 <__cxa_finalize@plt-0x9fb>
 6b4:	74 6f                	je     725 <__cxa_finalize@plt-0x9eb>
 6b6:	72 5f                	jb     717 <__cxa_finalize@plt-0x9f9>
 6b8:	63 61 73             	movslq 0x73(%rcx),%esp
 6bb:	74 00                	je     6bd <__cxa_finalize@plt-0xa53>
 6bd:	73 6c                	jae    72b <__cxa_finalize@plt-0x9e5>
 6bf:	6c                   	insb   (%dx),%es:(%rdi)
 6c0:	5f                   	pop    %rdi
 6c1:	73 74                	jae    737 <__cxa_finalize@plt-0x9d9>
 6c3:	72 69                	jb     72e <__cxa_finalize@plt-0x9e2>
 6c5:	6e                   	outsb  %ds:(%rsi),(%dx)
 6c6:	67 5f                	addr32 pop %rdi
 6c8:	63 6c 6f 6e          	movslq 0x6e(%rdi,%rbp,2),%ebp
 6cc:	65 00 73 6c          	add    %dh,%gs:0x6c(%rbx)
 6d0:	6c                   	insb   (%dx),%es:(%rdi)
 6d1:	5f                   	pop    %rdi
 6d2:	73 74                	jae    748 <__cxa_finalize@plt-0x9c8>
 6d4:	72 69                	jb     73f <__cxa_finalize@plt-0x9d1>
 6d6:	6e                   	outsb  %ds:(%rsi),(%dx)
 6d7:	67 5f                	addr32 pop %rdi
 6d9:	63 72 65             	movslq 0x65(%rdx),%esi
 6dc:	61                   	(bad)  
 6dd:	74 65                	je     744 <__cxa_finalize@plt-0x9cc>
 6df:	00 5f 5f             	add    %bl,0x5f(%rdi)
 6e2:	73 6c                	jae    750 <__cxa_finalize@plt-0x9c0>
 6e4:	6c                   	insb   (%dx),%es:(%rdi)
 6e5:	5f                   	pop    %rdi
 6e6:	6c                   	insb   (%dx),%es:(%rdi)
 6e7:	6f                   	outsl  %ds:(%rsi),(%dx)
 6e8:	61                   	(bad)  
 6e9:	64 00 73 6c          	add    %dh,%fs:0x6c(%rbx)
 6ed:	6c                   	insb   (%dx),%es:(%rdi)
 6ee:	5f                   	pop    %rdi
 6ef:	6c                   	insb   (%dx),%es:(%rdi)
 6f0:	6f                   	outsl  %ds:(%rsi),(%dx)
 6f1:	67 00 73 6c          	add    %dh,0x6c(%ebx)
 6f5:	6c                   	insb   (%dx),%es:(%rdi)
 6f6:	5f                   	pop    %rdi
 6f7:	72 65                	jb     75e <__cxa_finalize@plt-0x9b2>
 6f9:	67 69 73 74 65 72 5f 	imul   $0x695f7265,0x74(%ebx),%esi
 700:	69 
 701:	6e                   	outsb  %ds:(%rsi),(%dx)
 702:	74 65                	je     769 <__cxa_finalize@plt-0x9a7>
 704:	72 6e                	jb     774 <__cxa_finalize@plt-0x99c>
 706:	61                   	(bad)  
 707:	6c                   	insb   (%dx),%es:(%rdi)
 708:	5f                   	pop    %rdi
 709:	66 75 6e             	data16 jne 77a <__cxa_finalize@plt-0x996>
 70c:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
 710:	6e                   	outsb  %ds:(%rsi),(%dx)
 711:	00 5f 5f             	add    %bl,0x5f(%rdi)
 714:	73 6c                	jae    782 <__cxa_finalize@plt-0x98e>
 716:	6c                   	insb   (%dx),%es:(%rdi)
 717:	5f                   	pop    %rdi
 718:	75 6e                	jne    788 <__cxa_finalize@plt-0x988>
 71a:	6c                   	insb   (%dx),%es:(%rdi)
 71b:	6f                   	outsl  %ds:(%rsi),(%dx)
 71c:	61                   	(bad)  
 71d:	64 00 73 6c          	add    %dh,%fs:0x6c(%rbx)
 721:	6c                   	insb   (%dx),%es:(%rdi)
 722:	5f                   	pop    %rdi
 723:	67 65 74 5f          	addr32 gs je 786 <__cxa_finalize@plt-0x98a>
 727:	6c                   	insb   (%dx),%es:(%rdi)
 728:	6f                   	outsl  %ds:(%rsi),(%dx)
 729:	63 61 74             	movslq 0x74(%rcx),%esp
 72c:	69 6f 6e 00 73 6c 6c 	imul   $0x6c6c7300,0x6e(%rdi),%ebp
 733:	5f                   	pop    %rdi
 734:	63 75 72             	movslq 0x72(%rbp),%esi
 737:	72 65                	jb     79e <__cxa_finalize@plt-0x972>
 739:	6e                   	outsb  %ds:(%rsi),(%dx)
 73a:	74 5f                	je     79b <__cxa_finalize@plt-0x975>
 73c:	69 6e 73 74 72 75 63 	imul   $0x63757274,0x73(%rsi),%ebp
 743:	74 69                	je     7ae <__cxa_finalize@plt-0x962>
 745:	6f                   	outsl  %ds:(%rsi),(%dx)
 746:	6e                   	outsb  %ds:(%rsi),(%dx)
 747:	5f                   	pop    %rdi
 748:	63 6f 75             	movslq 0x75(%rdi),%ebp
 74b:	6e                   	outsb  %ds:(%rsi),(%dx)
 74c:	74 00                	je     74e <__cxa_finalize@plt-0x9c2>
 74e:	73 6c                	jae    7bc <__cxa_finalize@plt-0x954>
 750:	6c                   	insb   (%dx),%es:(%rdi)
 751:	5f                   	pop    %rdi
 752:	63 75 72             	movslq 0x72(%rbp),%esi
 755:	72 65                	jb     7bc <__cxa_finalize@plt-0x954>
 757:	6e                   	outsb  %ds:(%rsi),(%dx)
 758:	74 5f                	je     7b9 <__cxa_finalize@plt-0x957>
 75a:	76 6d                	jbe    7c9 <__cxa_finalize@plt-0x947>
 75c:	5f                   	pop    %rdi
 75d:	63 6f 6e             	movslq 0x6e(%rdi),%ebp
 760:	66 69 67 00 73 6c    	imul   $0x6c73,0x0(%rdi),%sp
 766:	6c                   	insb   (%dx),%es:(%rdi)
 767:	5f                   	pop    %rdi
 768:	66 69 6c 65 5f 74 6f 	imul   $0x6f74,0x5f(%rbp,%riz,2),%bp
 76f:	5f                   	pop    %rdi
 770:	68 61 6e 64 6c       	pushq  $0x6c646e61
 775:	65 00 6c 69 62       	add    %ch,%gs:0x62(%rcx,%rbp,2)
 77a:	63 2e                	movslq (%rsi),%ebp
 77c:	73 6f                	jae    7ed <__cxa_finalize@plt-0x923>
 77e:	2e 36 00 47 4c       	cs add %al,%ss:0x4c(%rdi)
 783:	49                   	rex.WB
 784:	42                   	rex.X
 785:	43 5f                	rex.XB pop %r15
 787:	32 2e                	xor    (%rsi),%ch
 789:	32 2e                	xor    (%rsi),%ch
 78b:	35 00 47 4c 49       	xor    $0x494c4700,%eax
 790:	42                   	rex.X
 791:	43 5f                	rex.XB pop %r15
 793:	32 2e                	xor    (%rsi),%ch
 795:	34 00                	xor    $0x0,%al

Disassembly of section .rela.dyn:

0000000000000800 <.rela.dyn>:
 800:	e8 3d 00 00 00       	callq  842 <__cxa_finalize@plt-0x8ce>
 805:	00 00                	add    %al,(%rax)
 807:	00 08                	add    %cl,(%rax)
 809:	00 00                	add    %al,(%rax)
 80b:	00 00                	add    %al,(%rax)
 80d:	00 00                	add    %al,(%rax)
 80f:	00 b0 12 00 00 00    	add    %dh,0x12(%rax)
 815:	00 00                	add    %al,(%rax)
 817:	00 f0                	add    %dh,%al
 819:	3d 00 00 00 00       	cmp    $0x0,%eax
 81e:	00 00                	add    %al,(%rax)
 820:	08 00                	or     %al,(%rax)
 822:	00 00                	add    %al,(%rax)
 824:	00 00                	add    %al,(%rax)
 826:	00 00                	add    %al,(%rax)
 828:	70 12                	jo     83c <__cxa_finalize@plt-0x8d4>
 82a:	00 00                	add    %al,(%rax)
 82c:	00 00                	add    %al,(%rax)
 82e:	00 00                	add    %al,(%rax)
 830:	88 40 00             	mov    %al,0x0(%rax)
 833:	00 00                	add    %al,(%rax)
 835:	00 00                	add    %al,(%rax)
 837:	00 08                	add    %cl,(%rax)
 839:	00 00                	add    %al,(%rax)
 83b:	00 00                	add    %al,(%rax)
 83d:	00 00                	add    %al,(%rax)
 83f:	00 88 40 00 00 00    	add    %cl,0x40(%rax)
 845:	00 00                	add    %al,(%rax)
 847:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
 84d:	00 00                	add    %al,(%rax)
 84f:	00 06                	add    %al,(%rsi)
 851:	00 00                	add    %al,(%rax)
 853:	00 02                	add    %al,(%rdx)
	...
 85d:	00 00                	add    %al,(%rax)
 85f:	00 c0                	add    %al,%al
 861:	3f                   	(bad)  
 862:	00 00                	add    %al,(%rax)
 864:	00 00                	add    %al,(%rax)
 866:	00 00                	add    %al,(%rax)
 868:	06                   	(bad)  
 869:	00 00                	add    %al,(%rax)
 86b:	00 03                	add    %al,(%rbx)
	...
 875:	00 00                	add    %al,(%rax)
 877:	00 c8                	add    %cl,%al
 879:	3f                   	(bad)  
 87a:	00 00                	add    %al,(%rax)
 87c:	00 00                	add    %al,(%rax)
 87e:	00 00                	add    %al,(%rax)
 880:	06                   	(bad)  
 881:	00 00                	add    %al,(%rax)
 883:	00 09                	add    %cl,(%rcx)
	...
 88d:	00 00                	add    %al,(%rax)
 88f:	00 d0                	add    %dl,%al
 891:	3f                   	(bad)  
 892:	00 00                	add    %al,(%rax)
 894:	00 00                	add    %al,(%rax)
 896:	00 00                	add    %al,(%rax)
 898:	06                   	(bad)  
 899:	00 00                	add    %al,(%rax)
 89b:	00 0b                	add    %cl,(%rbx)
	...
 8a5:	00 00                	add    %al,(%rax)
 8a7:	00 d8                	add    %bl,%al
 8a9:	3f                   	(bad)  
 8aa:	00 00                	add    %al,(%rax)
 8ac:	00 00                	add    %al,(%rax)
 8ae:	00 00                	add    %al,(%rax)
 8b0:	06                   	(bad)  
 8b1:	00 00                	add    %al,(%rax)
 8b3:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 8be:	00 00                	add    %al,(%rax)
 8c0:	e0 3f                	loopne 901 <__cxa_finalize@plt-0x80f>
 8c2:	00 00                	add    %al,(%rax)
 8c4:	00 00                	add    %al,(%rax)
 8c6:	00 00                	add    %al,(%rax)
 8c8:	06                   	(bad)  
 8c9:	00 00                	add    %al,(%rax)
 8cb:	00 0f                	add    %cl,(%rdi)
	...
 8d5:	00 00                	add    %al,(%rax)
 8d7:	00 e8                	add    %ch,%al
 8d9:	3f                   	(bad)  
 8da:	00 00                	add    %al,(%rax)
 8dc:	00 00                	add    %al,(%rax)
 8de:	00 00                	add    %al,(%rax)
 8e0:	06                   	(bad)  
 8e1:	00 00                	add    %al,(%rax)
 8e3:	00 12                	add    %dl,(%rdx)
	...
 8ed:	00 00                	add    %al,(%rax)
 8ef:	00 f0                	add    %dh,%al
 8f1:	3f                   	(bad)  
 8f2:	00 00                	add    %al,(%rax)
 8f4:	00 00                	add    %al,(%rax)
 8f6:	00 00                	add    %al,(%rax)
 8f8:	06                   	(bad)  
 8f9:	00 00                	add    %al,(%rax)
 8fb:	00 13                	add    %dl,(%rbx)
	...
 905:	00 00                	add    %al,(%rax)
 907:	00 f8                	add    %bh,%al
 909:	3f                   	(bad)  
 90a:	00 00                	add    %al,(%rax)
 90c:	00 00                	add    %al,(%rax)
 90e:	00 00                	add    %al,(%rax)
 910:	06                   	(bad)  
 911:	00 00                	add    %al,(%rax)
 913:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 919 <__cxa_finalize@plt-0x7f7>
 919:	00 00                	add    %al,(%rax)
 91b:	00 00                	add    %al,(%rax)
 91d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000920 <.rela.plt>:
 920:	18 40 00             	sbb    %al,0x0(%rax)
 923:	00 00                	add    %al,(%rax)
 925:	00 00                	add    %al,(%rax)
 927:	00 07                	add    %al,(%rdi)
 929:	00 00                	add    %al,(%rax)
 92b:	00 01                	add    %al,(%rcx)
	...
 935:	00 00                	add    %al,(%rax)
 937:	00 20                	add    %ah,(%rax)
 939:	40 00 00             	add    %al,(%rax)
 93c:	00 00                	add    %al,(%rax)
 93e:	00 00                	add    %al,(%rax)
 940:	07                   	(bad)  
 941:	00 00                	add    %al,(%rax)
 943:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 94e:	00 00                	add    %al,(%rax)
 950:	28 40 00             	sub    %al,0x0(%rax)
 953:	00 00                	add    %al,(%rax)
 955:	00 00                	add    %al,(%rax)
 957:	00 07                	add    %al,(%rdi)
 959:	00 00                	add    %al,(%rax)
 95b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 961 <__cxa_finalize@plt-0x7af>
 961:	00 00                	add    %al,(%rax)
 963:	00 00                	add    %al,(%rax)
 965:	00 00                	add    %al,(%rax)
 967:	00 30                	add    %dh,(%rax)
 969:	40 00 00             	add    %al,(%rax)
 96c:	00 00                	add    %al,(%rax)
 96e:	00 00                	add    %al,(%rax)
 970:	07                   	(bad)  
 971:	00 00                	add    %al,(%rax)
 973:	00 06                	add    %al,(%rsi)
	...
 97d:	00 00                	add    %al,(%rax)
 97f:	00 38                	add    %bh,(%rax)
 981:	40 00 00             	add    %al,(%rax)
 984:	00 00                	add    %al,(%rax)
 986:	00 00                	add    %al,(%rax)
 988:	07                   	(bad)  
 989:	00 00                	add    %al,(%rax)
 98b:	00 07                	add    %al,(%rdi)
	...
 995:	00 00                	add    %al,(%rax)
 997:	00 40 40             	add    %al,0x40(%rax)
 99a:	00 00                	add    %al,(%rax)
 99c:	00 00                	add    %al,(%rax)
 99e:	00 00                	add    %al,(%rax)
 9a0:	07                   	(bad)  
 9a1:	00 00                	add    %al,(%rax)
 9a3:	00 08                	add    %cl,(%rax)
	...
 9ad:	00 00                	add    %al,(%rax)
 9af:	00 48 40             	add    %cl,0x40(%rax)
 9b2:	00 00                	add    %al,(%rax)
 9b4:	00 00                	add    %al,(%rax)
 9b6:	00 00                	add    %al,(%rax)
 9b8:	07                   	(bad)  
 9b9:	00 00                	add    %al,(%rax)
 9bb:	00 0a                	add    %cl,(%rdx)
	...
 9c5:	00 00                	add    %al,(%rax)
 9c7:	00 50 40             	add    %dl,0x40(%rax)
 9ca:	00 00                	add    %al,(%rax)
 9cc:	00 00                	add    %al,(%rax)
 9ce:	00 00                	add    %al,(%rax)
 9d0:	07                   	(bad)  
 9d1:	00 00                	add    %al,(%rax)
 9d3:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 9d9 <__cxa_finalize@plt-0x737>
 9d9:	00 00                	add    %al,(%rax)
 9db:	00 00                	add    %al,(%rax)
 9dd:	00 00                	add    %al,(%rax)
 9df:	00 58 40             	add    %bl,0x40(%rax)
 9e2:	00 00                	add    %al,(%rax)
 9e4:	00 00                	add    %al,(%rax)
 9e6:	00 00                	add    %al,(%rax)
 9e8:	07                   	(bad)  
 9e9:	00 00                	add    %al,(%rax)
 9eb:	00 0e                	add    %cl,(%rsi)
	...
 9f5:	00 00                	add    %al,(%rax)
 9f7:	00 60 40             	add    %ah,0x40(%rax)
 9fa:	00 00                	add    %al,(%rax)
 9fc:	00 00                	add    %al,(%rax)
 9fe:	00 00                	add    %al,(%rax)
 a00:	07                   	(bad)  
 a01:	00 00                	add    %al,(%rax)
 a03:	00 10                	add    %dl,(%rax)
	...
 a0d:	00 00                	add    %al,(%rax)
 a0f:	00 68 40             	add    %ch,0x40(%rax)
 a12:	00 00                	add    %al,(%rax)
 a14:	00 00                	add    %al,(%rax)
 a16:	00 00                	add    %al,(%rax)
 a18:	07                   	(bad)  
 a19:	00 00                	add    %al,(%rax)
 a1b:	00 11                	add    %dl,(%rcx)
	...
 a25:	00 00                	add    %al,(%rax)
 a27:	00 70 40             	add    %dh,0x40(%rax)
 a2a:	00 00                	add    %al,(%rax)
 a2c:	00 00                	add    %al,(%rax)
 a2e:	00 00                	add    %al,(%rax)
 a30:	07                   	(bad)  
 a31:	00 00                	add    %al,(%rax)
 a33:	00 14 00             	add    %dl,(%rax,%rax,1)
	...
 a3e:	00 00                	add    %al,(%rax)
 a40:	78 40                	js     a82 <__cxa_finalize@plt-0x68e>
 a42:	00 00                	add    %al,(%rax)
 a44:	00 00                	add    %al,(%rax)
 a46:	00 00                	add    %al,(%rax)
 a48:	07                   	(bad)  
 a49:	00 00                	add    %al,(%rax)
 a4b:	00 16                	add    %dl,(%rsi)
	...
 a55:	00 00                	add    %al,(%rax)
 a57:	00 80 40 00 00 00    	add    %al,0x40(%rax)
 a5d:	00 00                	add    %al,(%rax)
 a5f:	00 07                	add    %al,(%rdi)
 a61:	00 00                	add    %al,(%rax)
 a63:	00 17                	add    %dl,(%rdi)
	...

Disassembly of section .init:

0000000000001000 <.init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c1 2f 00 00 	mov    0x2fc1(%rip),%rax        # 3fd0 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <__cxa_finalize@plt-0xfa>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <__sll_unload+0x28a8>
    1026:	f2 ff 25 e3 2f 00 00 	bnd jmpq *0x2fe3(%rip)        # 4010 <__sll_unload+0x28b0>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	pushq  $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	pushq  $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	pushq  $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	pushq  $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	pushq  $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0xf0>
    110f:	90                   	nop

Disassembly of section .plt.got:

0000000000001110 <__cxa_finalize@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 dd 2e 00 00 	bnd jmpq *0x2edd(%rip)        # 3ff8 <__cxa_finalize>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001120 <sll_int_to_object@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 ed 2e 00 00 	bnd jmpq *0x2eed(%rip)        # 4018 <sll_int_to_object>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <sll_register_internal_function@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 e5 2e 00 00 	bnd jmpq *0x2ee5(%rip)        # 4020 <sll_register_internal_function>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <__stack_chk_fail@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 dd 2e 00 00 	bnd jmpq *0x2edd(%rip)        # 4028 <__stack_chk_fail>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <sll_array_create@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 d5 2e 00 00 	bnd jmpq *0x2ed5(%rip)        # 4030 <sll_array_create>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <sll_file_to_handle@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 cd 2e 00 00 	bnd jmpq *0x2ecd(%rip)        # 4038 <sll_file_to_handle>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <sll_log@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 c5 2e 00 00 	bnd jmpq *0x2ec5(%rip)        # 4040 <sll_log>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <sll_create_object@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 bd 2e 00 00 	bnd jmpq *0x2ebd(%rip)        # 4048 <sll_create_object>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <sll_create_object_type@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 b5 2e 00 00 	bnd jmpq *0x2eb5(%rip)        # 4050 <sll_create_object_type>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <sll_operator_cast@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 ad 2e 00 00 	bnd jmpq *0x2ead(%rip)        # 4058 <sll_operator_cast>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <sll_get_location@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 a5 2e 00 00 	bnd jmpq *0x2ea5(%rip)        # 4060 <sll_get_location>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011c0 <sll_string_create@plt>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	f2 ff 25 9d 2e 00 00 	bnd jmpq *0x2e9d(%rip)        # 4068 <sll_string_create>
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <sll_string_from_pointer@plt>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	f2 ff 25 95 2e 00 00 	bnd jmpq *0x2e95(%rip)        # 4070 <sll_string_from_pointer>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011e0 <sll_release_object@plt>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	f2 ff 25 8d 2e 00 00 	bnd jmpq *0x2e8d(%rip)        # 4078 <sll_release_object>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <sll_string_clone@plt>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	f2 ff 25 85 2e 00 00 	bnd jmpq *0x2e85(%rip)        # 4080 <sll_string_clone>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001200 <.text>:
    1200:	48 8d 3d 89 2e 00 00 	lea    0x2e89(%rip),%rdi        # 4090 <__sll_unload+0x2930>
    1207:	48 8d 05 82 2e 00 00 	lea    0x2e82(%rip),%rax        # 4090 <__sll_unload+0x2930>
    120e:	48 39 f8             	cmp    %rdi,%rax
    1211:	74 15                	je     1228 <sll_string_clone@plt+0x38>
    1213:	48 8b 05 a6 2d 00 00 	mov    0x2da6(%rip),%rax        # 3fc0 <_ITM_deregisterTMCloneTable>
    121a:	48 85 c0             	test   %rax,%rax
    121d:	74 09                	je     1228 <sll_string_clone@plt+0x38>
    121f:	ff e0                	jmpq   *%rax
    1221:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1228:	c3                   	retq   
    1229:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1230:	48 8d 3d 59 2e 00 00 	lea    0x2e59(%rip),%rdi        # 4090 <__sll_unload+0x2930>
    1237:	48 8d 35 52 2e 00 00 	lea    0x2e52(%rip),%rsi        # 4090 <__sll_unload+0x2930>
    123e:	48 29 fe             	sub    %rdi,%rsi
    1241:	48 89 f0             	mov    %rsi,%rax
    1244:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1248:	48 c1 f8 03          	sar    $0x3,%rax
    124c:	48 01 c6             	add    %rax,%rsi
    124f:	48 d1 fe             	sar    %rsi
    1252:	74 14                	je     1268 <sll_string_clone@plt+0x78>
    1254:	48 8b 05 8d 2d 00 00 	mov    0x2d8d(%rip),%rax        # 3fe8 <_ITM_registerTMCloneTable>
    125b:	48 85 c0             	test   %rax,%rax
    125e:	74 08                	je     1268 <sll_string_clone@plt+0x78>
    1260:	ff e0                	jmpq   *%rax
    1262:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1268:	c3                   	retq   
    1269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1270:	f3 0f 1e fa          	endbr64 
    1274:	80 3d 15 2e 00 00 00 	cmpb   $0x0,0x2e15(%rip)        # 4090 <__sll_unload+0x2930>
    127b:	75 2b                	jne    12a8 <sll_string_clone@plt+0xb8>
    127d:	55                   	push   %rbp
    127e:	48 83 3d 72 2d 00 00 	cmpq   $0x0,0x2d72(%rip)        # 3ff8 <__cxa_finalize>
    1285:	00 
    1286:	48 89 e5             	mov    %rsp,%rbp
    1289:	74 0c                	je     1297 <sll_string_clone@plt+0xa7>
    128b:	48 8b 3d f6 2d 00 00 	mov    0x2df6(%rip),%rdi        # 4088 <__sll_unload+0x2928>
    1292:	e8 79 fe ff ff       	callq  1110 <__cxa_finalize@plt>
    1297:	e8 64 ff ff ff       	callq  1200 <sll_string_clone@plt+0x10>
    129c:	c6 05 ed 2d 00 00 01 	movb   $0x1,0x2ded(%rip)        # 4090 <__sll_unload+0x2930>
    12a3:	5d                   	pop    %rbp
    12a4:	c3                   	retq   
    12a5:	0f 1f 00             	nopl   (%rax)
    12a8:	c3                   	retq   
    12a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12b0:	f3 0f 1e fa          	endbr64 
    12b4:	e9 77 ff ff ff       	jmpq   1230 <sll_string_clone@plt+0x40>
    12b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	41 57                	push   %r15
    12c6:	41 56                	push   %r14
    12c8:	41 55                	push   %r13
    12ca:	41 54                	push   %r12
    12cc:	55                   	push   %rbp
    12cd:	53                   	push   %rbx
    12ce:	48 83 ec 48          	sub    $0x48,%rsp
    12d2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    12d9:	00 00 
    12db:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    12e0:	31 c0                	xor    %eax,%eax
    12e2:	48 8d 05 b7 2d 00 00 	lea    0x2db7(%rip),%rax        # 40a0 <__sll_unload+0x2940>
    12e9:	8b 10                	mov    (%rax),%edx
    12eb:	85 d2                	test   %edx,%edx
    12ed:	74 0d                	je     12fc <sll_string_clone@plt+0x10c>
    12ef:	48 8d 05 a6 2d 00 00 	lea    0x2da6(%rip),%rax        # 409c <__sll_unload+0x293c>
    12f6:	8b 00                	mov    (%rax),%eax
    12f8:	85 c0                	test   %eax,%eax
    12fa:	75 3c                	jne    1338 <sll_string_clone@plt+0x148>
    12fc:	48 8b 05 ed 2c 00 00 	mov    0x2ced(%rip),%rax        # 3ff0 <sll_static_int>
    1303:	4c 8b 20             	mov    (%rax),%r12
    1306:	41 83 04 24 01       	addl   $0x1,(%r12)
    130b:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    1310:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1317:	00 00 
    1319:	0f 85 88 01 00 00    	jne    14a7 <sll_string_clone@plt+0x2b7>
    131f:	48 83 c4 48          	add    $0x48,%rsp
    1323:	4c 89 e0             	mov    %r12,%rax
    1326:	5b                   	pop    %rbx
    1327:	5d                   	pop    %rbp
    1328:	41 5c                	pop    %r12
    132a:	41 5d                	pop    %r13
    132c:	41 5e                	pop    %r14
    132e:	41 5f                	pop    %r15
    1330:	c3                   	retq   
    1331:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1338:	e8 43 fe ff ff       	callq  1180 <sll_create_object@plt>
    133d:	48 8b 2d 74 2c 00 00 	mov    0x2c74(%rip),%rbp        # 3fb8 <sll_current_runtime_data>
    1344:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%rax)
    134b:	49 89 c4             	mov    %rax,%r12
    134e:	48 8d 70 10          	lea    0x10(%rax),%rsi
    1352:	48 8b 45 00          	mov    0x0(%rbp),%rax
    1356:	0f b7 78 20          	movzwl 0x20(%rax),%edi
    135a:	83 ef 01             	sub    $0x1,%edi
    135d:	e8 ee fd ff ff       	callq  1150 <sll_array_create@plt>
    1362:	84 c0                	test   %al,%al
    1364:	0f 84 26 01 00 00    	je     1490 <sll_string_clone@plt+0x2a0>
    136a:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    136e:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
    1373:	45 31 ed             	xor    %r13d,%r13d
    1376:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    137b:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    1380:	66 83 7a 20 01       	cmpw   $0x1,0x20(%rdx)
    1385:	48 89 04 24          	mov    %rax,(%rsp)
    1389:	76 80                	jbe    130b <sll_string_clone@plt+0x11b>
    138b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1390:	45 0f b7 fd          	movzwl %r13w,%r15d
    1394:	41 83 c5 01          	add    $0x1,%r13d
    1398:	4c 89 fb             	mov    %r15,%rbx
    139b:	48 c1 e3 04          	shl    $0x4,%rbx
    139f:	48 03 5a 18          	add    0x18(%rdx),%rbx
    13a3:	8b 7b 08             	mov    0x8(%rbx),%edi
    13a6:	e8 75 fd ff ff       	callq  1120 <sll_int_to_object@plt>
    13ab:	8b 7b 0c             	mov    0xc(%rbx),%edi
    13ae:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    13b3:	e8 68 fd ff ff       	callq  1120 <sll_int_to_object@plt>
    13b8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    13bd:	e8 be fd ff ff       	callq  1180 <sll_create_object@plt>
    13c2:	48 8b 3b             	mov    (%rbx),%rdi
    13c5:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    13cc:	48 8d 70 10          	lea    0x10(%rax),%rsi
    13d0:	49 89 c6             	mov    %rax,%r14
    13d3:	e8 f8 fd ff ff       	callq  11d0 <sll_string_from_pointer@plt>
    13d8:	8b 7b 08             	mov    0x8(%rbx),%edi
    13db:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
    13e0:	e8 8b 03 00 00       	callq  1770 <__sll_unload+0x10>
    13e5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    13ea:	b9 02 00 00 00       	mov    $0x2,%ecx
    13ef:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    13f4:	48 8b 45 00          	mov    0x0(%rbp),%rax
    13f8:	48 8b 78 10          	mov    0x10(%rax),%rdi
    13fc:	48 8d 05 99 2c 00 00 	lea    0x2c99(%rip),%rax        # 409c <__sll_unload+0x293c>
    1403:	8b 30                	mov    (%rax),%esi
    1405:	e8 86 fd ff ff       	callq  1190 <sll_create_object_type@plt>
    140a:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    140f:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    1414:	e8 c7 fd ff ff       	callq  11e0 <sll_release_object@plt>
    1419:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    141e:	e8 bd fd ff ff       	callq  11e0 <sll_release_object@plt>
    1423:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    1428:	48 8b 14 24          	mov    (%rsp),%rdx
    142c:	b9 03 00 00 00       	mov    $0x3,%ecx
    1431:	4a 8d 1c f8          	lea    (%rax,%r15,8),%rbx
    1435:	48 8b 45 00          	mov    0x0(%rbp),%rax
    1439:	48 8b 78 10          	mov    0x10(%rax),%rdi
    143d:	48 8d 05 5c 2c 00 00 	lea    0x2c5c(%rip),%rax        # 40a0 <__sll_unload+0x2940>
    1444:	8b 30                	mov    (%rax),%esi
    1446:	e8 45 fd ff ff       	callq  1190 <sll_create_object_type@plt>
    144b:	4c 89 f7             	mov    %r14,%rdi
    144e:	48 89 03             	mov    %rax,(%rbx)
    1451:	e8 8a fd ff ff       	callq  11e0 <sll_release_object@plt>
    1456:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    145b:	e8 80 fd ff ff       	callq  11e0 <sll_release_object@plt>
    1460:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    1465:	e8 76 fd ff ff       	callq  11e0 <sll_release_object@plt>
    146a:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    146e:	41 0f b7 cd          	movzwl %r13w,%ecx
    1472:	0f b7 42 20          	movzwl 0x20(%rdx),%eax
    1476:	83 e8 01             	sub    $0x1,%eax
    1479:	39 c1                	cmp    %eax,%ecx
    147b:	0f 8c 0f ff ff ff    	jl     1390 <sll_string_clone@plt+0x1a0>
    1481:	e9 85 fe ff ff       	jmpq   130b <sll_string_clone@plt+0x11b>
    1486:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    148d:	00 00 00 
    1490:	41 c7 44 24 04 00 00 	movl   $0x0,0x4(%r12)
    1497:	00 00 
    1499:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    14a0:	00 00 
    14a2:	e9 64 fe ff ff       	jmpq   130b <sll_string_clone@plt+0x11b>
    14a7:	e8 94 fc ff ff       	callq  1140 <__stack_chk_fail@plt>
    14ac:	0f 1f 40 00          	nopl   0x0(%rax)
    14b0:	f3 0f 1e fa          	endbr64 
    14b4:	55                   	push   %rbp
    14b5:	85 f6                	test   %esi,%esi
    14b7:	75 17                	jne    14d0 <sll_string_clone@plt+0x2e0>
    14b9:	48 8b 05 18 2b 00 00 	mov    0x2b18(%rip),%rax        # 3fd8 <sll_current_instruction_index>
    14c0:	8b 28                	mov    (%rax),%ebp
    14c2:	89 ef                	mov    %ebp,%edi
    14c4:	5d                   	pop    %rbp
    14c5:	e9 a6 02 00 00       	jmpq   1770 <__sll_unload+0x10>
    14ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    14d0:	48 8b 05 19 2b 00 00 	mov    0x2b19(%rip),%rax        # 3ff0 <sll_static_int>
    14d7:	48 8b 3f             	mov    (%rdi),%rdi
    14da:	31 ed                	xor    %ebp,%ebp
    14dc:	48 8b 30             	mov    (%rax),%rsi
    14df:	e8 bc fc ff ff       	callq  11a0 <sll_operator_cast@plt>
    14e4:	48 89 c7             	mov    %rax,%rdi
    14e7:	48 8b 40 10          	mov    0x10(%rax),%rax
    14eb:	48 85 c0             	test   %rax,%rax
    14ee:	78 10                	js     1500 <sll_string_clone@plt+0x310>
    14f0:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    14f5:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    14fa:	48 39 d0             	cmp    %rdx,%rax
    14fd:	0f 4e e8             	cmovle %eax,%ebp
    1500:	e8 db fc ff ff       	callq  11e0 <sll_release_object@plt>
    1505:	89 ef                	mov    %ebp,%edi
    1507:	5d                   	pop    %rbp
    1508:	e9 63 02 00 00       	jmpq   1770 <__sll_unload+0x10>
    150d:	0f 1f 00             	nopl   (%rax)
    1510:	f3 0f 1e fa          	endbr64 
    1514:	41 54                	push   %r12
    1516:	55                   	push   %rbp
    1517:	48 89 fd             	mov    %rdi,%rbp
    151a:	53                   	push   %rbx
    151b:	89 f3                	mov    %esi,%ebx
    151d:	e8 5e fc ff ff       	callq  1180 <sll_create_object@plt>
    1522:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    1529:	49 89 c4             	mov    %rax,%r12
    152c:	85 db                	test   %ebx,%ebx
    152e:	74 78                	je     15a8 <sll_string_clone@plt+0x3b8>
    1530:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    1534:	8b 42 04             	mov    0x4(%rdx),%eax
    1537:	89 c1                	mov    %eax,%ecx
    1539:	81 e1 ff ff ff 1f    	and    $0x1fffffff,%ecx
    153f:	75 2f                	jne    1570 <sll_string_clone@plt+0x380>
    1541:	48 8b 42 10          	mov    0x10(%rdx),%rax
    1545:	48 85 c0             	test   %rax,%rax
    1548:	0f 88 b2 00 00 00    	js     1600 <sll_string_clone@plt+0x410>
    154e:	75 70                	jne    15c0 <sll_string_clone@plt+0x3d0>
    1550:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    1557:	00 00 
    1559:	49 c7 44 24 18 00 00 	movq   $0x0,0x18(%r12)
    1560:	00 00 
    1562:	4c 89 e0             	mov    %r12,%rax
    1565:	5b                   	pop    %rbx
    1566:	5d                   	pop    %rbp
    1567:	41 5c                	pop    %r12
    1569:	c3                   	retq   
    156a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1570:	a9 f8 ff ff 1f       	test   $0x1ffffff8,%eax
    1575:	74 d9                	je     1550 <sll_string_clone@plt+0x360>
    1577:	48 8b 05 3a 2a 00 00 	mov    0x2a3a(%rip),%rax        # 3fb8 <sll_current_runtime_data>
    157e:	8d 51 f8             	lea    -0x8(%rcx),%edx
    1581:	48 8b 00             	mov    (%rax),%rax
    1584:	48 8b 40 10          	mov    0x10(%rax),%rax
    1588:	3b 50 08             	cmp    0x8(%rax),%edx
    158b:	73 c3                	jae    1550 <sll_string_clone@plt+0x360>
    158d:	48 8b 00             	mov    (%rax),%rax
    1590:	89 c9                	mov    %ecx,%ecx
    1592:	49 8d 74 24 10       	lea    0x10(%r12),%rsi
    1597:	48 8b 7c c8 c0       	mov    -0x40(%rax,%rcx,8),%rdi
    159c:	e8 4f fc ff ff       	callq  11f0 <sll_string_clone@plt>
    15a1:	eb bf                	jmp    1562 <sll_string_clone@plt+0x372>
    15a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    15a8:	48 8d 70 10          	lea    0x10(%rax),%rsi
    15ac:	31 ff                	xor    %edi,%edi
    15ae:	e8 0d fc ff ff       	callq  11c0 <sll_string_create@plt>
    15b3:	4c 89 e0             	mov    %r12,%rax
    15b6:	5b                   	pop    %rbx
    15b7:	5d                   	pop    %rbp
    15b8:	41 5c                	pop    %r12
    15ba:	c3                   	retq   
    15bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    15c0:	48 8b 15 f1 29 00 00 	mov    0x29f1(%rip),%rdx        # 3fb8 <sll_current_runtime_data>
    15c7:	48 8b 12             	mov    (%rdx),%rdx
    15ca:	48 8b 12             	mov    (%rdx),%rdx
    15cd:	8b 4a 18             	mov    0x18(%rdx),%ecx
    15d0:	48 39 c8             	cmp    %rcx,%rax
    15d3:	0f 8f 77 ff ff ff    	jg     1550 <sll_string_clone@plt+0x360>
    15d9:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
    15dd:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    15e1:	49 8d 74 24 10       	lea    0x10(%r12),%rsi
    15e6:	48 8d 04 81          	lea    (%rcx,%rax,4),%rax
    15ea:	8b 78 fc             	mov    -0x4(%rax),%edi
    15ed:	48 c1 e7 04          	shl    $0x4,%rdi
    15f1:	48 03 7a 28          	add    0x28(%rdx),%rdi
    15f5:	e8 f6 fb ff ff       	callq  11f0 <sll_string_clone@plt>
    15fa:	e9 63 ff ff ff       	jmpq   1562 <sll_string_clone@plt+0x372>
    15ff:	90                   	nop
    1600:	48 8b 15 b1 29 00 00 	mov    0x29b1(%rip),%rdx        # 3fb8 <sll_current_runtime_data>
    1607:	f7 d0                	not    %eax
    1609:	48 8b 12             	mov    (%rdx),%rdx
    160c:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    1610:	39 42 08             	cmp    %eax,0x8(%rdx)
    1613:	0f 86 37 ff ff ff    	jbe    1550 <sll_string_clone@plt+0x360>
    1619:	48 8b 12             	mov    (%rdx),%rdx
    161c:	49 8d 74 24 10       	lea    0x10(%r12),%rsi
    1621:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
    1625:	e8 c6 fb ff ff       	callq  11f0 <sll_string_clone@plt>
    162a:	e9 33 ff ff ff       	jmpq   1562 <sll_string_clone@plt+0x372>
    162f:	90                   	nop
    1630:	f3 0f 1e fa          	endbr64 
    1634:	53                   	push   %rbx
    1635:	81 ff 00 00 07 00    	cmp    $0x70000,%edi
    163b:	74 2b                	je     1668 <__sll_load+0x38>
    163d:	31 c0                	xor    %eax,%eax
    163f:	4c 8d 05 ba 09 00 00 	lea    0x9ba(%rip),%r8        # 2000 <__sll_unload+0x8a0>
    1646:	31 c9                	xor    %ecx,%ecx
    1648:	ba 15 00 00 00       	mov    $0x15,%edx
    164d:	48 8d 35 c4 0a 00 00 	lea    0xac4(%rip),%rsi        # 2118 <__sll_unload+0x9b8>
    1654:	48 8d 3d b7 09 00 00 	lea    0x9b7(%rip),%rdi        # 2012 <__sll_unload+0x8b2>
    165b:	e8 10 fb ff ff       	callq  1170 <sll_log@plt>
    1660:	31 c0                	xor    %eax,%eax
    1662:	5b                   	pop    %rbx
    1663:	c3                   	retq   
    1664:	0f 1f 40 00          	nopl   0x0(%rax)
    1668:	48 8b 1d 49 29 00 00 	mov    0x2949(%rip),%rbx        # 3fb8 <sll_current_runtime_data>
    166f:	48 8d 15 5a 02 00 00 	lea    0x25a(%rip),%rdx        # 18d0 <__sll_unload+0x170>
    1676:	31 c9                	xor    %ecx,%ecx
    1678:	48 8d 35 ae 09 00 00 	lea    0x9ae(%rip),%rsi        # 202d <__sll_unload+0x8cd>
    167f:	48 8b 03             	mov    (%rbx),%rax
    1682:	48 8b 78 08          	mov    0x8(%rax),%rdi
    1686:	e8 a5 fa ff ff       	callq  1130 <sll_register_internal_function@plt>
    168b:	48 8b 03             	mov    (%rbx),%rax
    168e:	31 c9                	xor    %ecx,%ecx
    1690:	48 8d 15 29 fc ff ff 	lea    -0x3d7(%rip),%rdx        # 12c0 <sll_string_clone@plt+0xd0>
    1697:	48 8d 35 a3 09 00 00 	lea    0x9a3(%rip),%rsi        # 2041 <__sll_unload+0x8e1>
    169e:	48 8b 78 08          	mov    0x8(%rax),%rdi
    16a2:	e8 89 fa ff ff       	callq  1130 <sll_register_internal_function@plt>
    16a7:	48 8b 03             	mov    (%rbx),%rax
    16aa:	31 c9                	xor    %ecx,%ecx
    16ac:	48 8d 15 cd 02 00 00 	lea    0x2cd(%rip),%rdx        # 1980 <__sll_unload+0x220>
    16b3:	48 8d 35 0e 0a 00 00 	lea    0xa0e(%rip),%rsi        # 20c8 <__sll_unload+0x968>
    16ba:	48 8b 78 08          	mov    0x8(%rax),%rdi
    16be:	e8 6d fa ff ff       	callq  1130 <sll_register_internal_function@plt>
    16c3:	48 8b 03             	mov    (%rbx),%rax
    16c6:	31 c9                	xor    %ecx,%ecx
    16c8:	48 8d 15 d1 02 00 00 	lea    0x2d1(%rip),%rdx        # 19a0 <__sll_unload+0x240>
    16cf:	48 8d 35 1a 0a 00 00 	lea    0xa1a(%rip),%rsi        # 20f0 <__sll_unload+0x990>
    16d6:	48 8b 78 08          	mov    0x8(%rax),%rdi
    16da:	e8 51 fa ff ff       	callq  1130 <sll_register_internal_function@plt>
    16df:	48 8b 03             	mov    (%rbx),%rax
    16e2:	31 c9                	xor    %ecx,%ecx
    16e4:	48 8d 15 c5 fd ff ff 	lea    -0x23b(%rip),%rdx        # 14b0 <sll_string_clone@plt+0x2c0>
    16eb:	48 8d 35 6c 09 00 00 	lea    0x96c(%rip),%rsi        # 205e <__sll_unload+0x8fe>
    16f2:	48 8b 78 08          	mov    0x8(%rax),%rdi
    16f6:	e8 35 fa ff ff       	callq  1130 <sll_register_internal_function@plt>
    16fb:	48 8b 03             	mov    (%rbx),%rax
    16fe:	31 c9                	xor    %ecx,%ecx
    1700:	48 8d 15 09 fe ff ff 	lea    -0x1f7(%rip),%rdx        # 1510 <sll_string_clone@plt+0x320>
    1707:	48 8d 35 6b 09 00 00 	lea    0x96b(%rip),%rsi        # 2079 <__sll_unload+0x919>
    170e:	48 8b 78 08          	mov    0x8(%rax),%rdi
    1712:	e8 19 fa ff ff       	callq  1130 <sll_register_internal_function@plt>
    1717:	48 8b 03             	mov    (%rbx),%rax
    171a:	31 c9                	xor    %ecx,%ecx
    171c:	48 8d 15 2d 02 00 00 	lea    0x22d(%rip),%rdx        # 1950 <__sll_unload+0x1f0>
    1723:	48 8d 35 66 09 00 00 	lea    0x966(%rip),%rsi        # 2090 <__sll_unload+0x930>
    172a:	48 8b 78 08          	mov    0x8(%rax),%rdi
    172e:	e8 fd f9 ff ff       	callq  1130 <sll_register_internal_function@plt>
    1733:	48 8b 03             	mov    (%rbx),%rax
    1736:	31 c9                	xor    %ecx,%ecx
    1738:	48 8d 15 81 02 00 00 	lea    0x281(%rip),%rdx        # 19c0 <__sll_unload+0x260>
    173f:	48 8d 35 66 09 00 00 	lea    0x966(%rip),%rsi        # 20ac <__sll_unload+0x94c>
    1746:	48 8b 78 08          	mov    0x8(%rax),%rdi
    174a:	e8 e1 f9 ff ff       	callq  1130 <sll_register_internal_function@plt>
    174f:	b8 01 00 00 00       	mov    $0x1,%eax
    1754:	5b                   	pop    %rbx
    1755:	c3                   	retq   
    1756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    175d:	00 00 00 
    1760:	f3 0f 1e fa          	endbr64 
    1764:	c3                   	retq   
    1765:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    176c:	00 00 00 
    176f:	90                   	nop
    1770:	f3 0f 1e fa          	endbr64 
    1774:	41 56                	push   %r14
    1776:	41 55                	push   %r13
    1778:	41 54                	push   %r12
    177a:	55                   	push   %rbp
    177b:	48 83 ec 38          	sub    $0x38,%rsp
    177f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1786:	00 00 
    1788:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    178d:	31 c0                	xor    %eax,%eax
    178f:	8b 05 03 29 00 00    	mov    0x2903(%rip),%eax        # 4098 <__sll_unload+0x2938>
    1795:	85 c0                	test   %eax,%eax
    1797:	75 37                	jne    17d0 <__sll_unload+0x70>
    1799:	48 8b 05 50 28 00 00 	mov    0x2850(%rip),%rax        # 3ff0 <sll_static_int>
    17a0:	4c 8b 20             	mov    (%rax),%r12
    17a3:	41 83 04 24 01       	addl   $0x1,(%r12)
    17a8:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    17ad:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    17b4:	00 00 
    17b6:	0f 85 02 01 00 00    	jne    18be <__sll_unload+0x15e>
    17bc:	48 83 c4 38          	add    $0x38,%rsp
    17c0:	4c 89 e0             	mov    %r12,%rax
    17c3:	5d                   	pop    %rbp
    17c4:	41 5c                	pop    %r12
    17c6:	41 5d                	pop    %r13
    17c8:	41 5e                	pop    %r14
    17ca:	c3                   	retq   
    17cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    17d0:	4c 8b 25 e1 27 00 00 	mov    0x27e1(%rip),%r12        # 3fb8 <sll_current_runtime_data>
    17d7:	89 fe                	mov    %edi,%esi
    17d9:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
    17de:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    17e3:	49 8b 04 24          	mov    (%r12),%rax
    17e7:	48 8b 38             	mov    (%rax),%rdi
    17ea:	e8 c1 f9 ff ff       	callq  11b0 <sll_get_location@plt>
    17ef:	49 89 c6             	mov    %rax,%r14
    17f2:	e8 89 f9 ff ff       	callq  1180 <sll_create_object@plt>
    17f7:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    17fb:	48 8d 70 10          	lea    0x10(%rax),%rsi
    17ff:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    1806:	49 89 c5             	mov    %rax,%r13
    1809:	49 8b 04 24          	mov    (%r12),%rax
    180d:	48 c1 e7 04          	shl    $0x4,%rdi
    1811:	48 8b 00             	mov    (%rax),%rax
    1814:	48 03 78 28          	add    0x28(%rax),%rdi
    1818:	e8 d3 f9 ff ff       	callq  11f0 <sll_string_clone@plt>
    181d:	e8 5e f9 ff ff       	callq  1180 <sll_create_object@plt>
    1822:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    1826:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%rax)
    182d:	48 89 c5             	mov    %rax,%rbp
    1830:	48 8d 70 10          	lea    0x10(%rax),%rsi
    1834:	83 ff ff             	cmp    $0xffffffff,%edi
    1837:	74 77                	je     18b0 <__sll_unload+0x150>
    1839:	49 8b 04 24          	mov    (%r12),%rax
    183d:	48 c1 e7 04          	shl    $0x4,%rdi
    1841:	48 8b 00             	mov    (%rax),%rax
    1844:	48 03 78 28          	add    0x28(%rax),%rdi
    1848:	e8 a3 f9 ff ff       	callq  11f0 <sll_string_clone@plt>
    184d:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    1852:	66 49 0f 6e c5       	movq   %r13,%xmm0
    1857:	4c 89 f7             	mov    %r14,%rdi
    185a:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    185e:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    1863:	e8 b8 f8 ff ff       	callq  1120 <sll_int_to_object@plt>
    1868:	8b 35 2a 28 00 00    	mov    0x282a(%rip),%esi        # 4098 <__sll_unload+0x2938>
    186e:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    1873:	b9 03 00 00 00       	mov    $0x3,%ecx
    1878:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    187d:	49 8b 04 24          	mov    (%r12),%rax
    1881:	48 8b 78 10          	mov    0x10(%rax),%rdi
    1885:	e8 06 f9 ff ff       	callq  1190 <sll_create_object_type@plt>
    188a:	4c 89 ef             	mov    %r13,%rdi
    188d:	49 89 c4             	mov    %rax,%r12
    1890:	e8 4b f9 ff ff       	callq  11e0 <sll_release_object@plt>
    1895:	48 89 ef             	mov    %rbp,%rdi
    1898:	e8 43 f9 ff ff       	callq  11e0 <sll_release_object@plt>
    189d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    18a2:	e8 39 f9 ff ff       	callq  11e0 <sll_release_object@plt>
    18a7:	e9 fc fe ff ff       	jmpq   17a8 <__sll_unload+0x48>
    18ac:	0f 1f 40 00          	nopl   0x0(%rax)
    18b0:	48 8d 3d 6c 08 00 00 	lea    0x86c(%rip),%rdi        # 2123 <__sll_unload+0x9c3>
    18b7:	e8 14 f9 ff ff       	callq  11d0 <sll_string_from_pointer@plt>
    18bc:	eb 8f                	jmp    184d <__sll_unload+0xed>
    18be:	e8 7d f8 ff ff       	callq  1140 <__stack_chk_fail@plt>
    18c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    18ca:	00 00 00 00 
    18ce:	66 90                	xchg   %ax,%ax
    18d0:	f3 0f 1e fa          	endbr64 
    18d4:	83 fe 03             	cmp    $0x3,%esi
    18d7:	76 5b                	jbe    1934 <__sll_unload+0x1d4>
    18d9:	48 8b 07             	mov    (%rdi),%rax
    18dc:	f7 40 04 ff ff ff 1f 	testl  $0x1fffffff,0x4(%rax)
    18e3:	75 0a                	jne    18ef <__sll_unload+0x18f>
    18e5:	48 8b 40 10          	mov    0x10(%rax),%rax
    18e9:	89 05 b1 27 00 00    	mov    %eax,0x27b1(%rip)        # 40a0 <__sll_unload+0x2940>
    18ef:	48 8b 47 08          	mov    0x8(%rdi),%rax
    18f3:	f7 40 04 ff ff ff 1f 	testl  $0x1fffffff,0x4(%rax)
    18fa:	75 0a                	jne    1906 <__sll_unload+0x1a6>
    18fc:	48 8b 40 10          	mov    0x10(%rax),%rax
    1900:	89 05 96 27 00 00    	mov    %eax,0x2796(%rip)        # 409c <__sll_unload+0x293c>
    1906:	48 8b 47 10          	mov    0x10(%rdi),%rax
    190a:	f7 40 04 ff ff ff 1f 	testl  $0x1fffffff,0x4(%rax)
    1911:	75 0a                	jne    191d <__sll_unload+0x1bd>
    1913:	48 8b 40 10          	mov    0x10(%rax),%rax
    1917:	89 05 7b 27 00 00    	mov    %eax,0x277b(%rip)        # 4098 <__sll_unload+0x2938>
    191d:	48 8b 47 18          	mov    0x18(%rdi),%rax
    1921:	f7 40 04 ff ff ff 1f 	testl  $0x1fffffff,0x4(%rax)
    1928:	75 0a                	jne    1934 <__sll_unload+0x1d4>
    192a:	48 8b 40 10          	mov    0x10(%rax),%rax
    192e:	89 05 60 27 00 00    	mov    %eax,0x2760(%rip)        # 4094 <__sll_unload+0x2934>
    1934:	48 8b 05 b5 26 00 00 	mov    0x26b5(%rip),%rax        # 3ff0 <sll_static_int>
    193b:	48 8b 00             	mov    (%rax),%rax
    193e:	83 00 01             	addl   $0x1,(%rax)
    1941:	c3                   	retq   
    1942:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1949:	00 00 00 00 
    194d:	0f 1f 00             	nopl   (%rax)
    1950:	f3 0f 1e fa          	endbr64 
    1954:	85 f6                	test   %esi,%esi
    1956:	75 18                	jne    1970 <__sll_unload+0x210>
    1958:	48 8b 05 91 26 00 00 	mov    0x2691(%rip),%rax        # 3ff0 <sll_static_int>
    195f:	48 8b 00             	mov    (%rax),%rax
    1962:	83 00 01             	addl   $0x1,(%rax)
    1965:	c3                   	retq   
    1966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    196d:	00 00 00 
    1970:	48 8b 07             	mov    (%rdi),%rax
    1973:	8b 38                	mov    (%rax),%edi
    1975:	e9 a6 f7 ff ff       	jmpq   1120 <sll_int_to_object@plt>
    197a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1980:	f3 0f 1e fa          	endbr64 
    1984:	48 8b 05 3d 26 00 00 	mov    0x263d(%rip),%rax        # 3fc8 <sll_current_instruction_count>
    198b:	8b 38                	mov    (%rax),%edi
    198d:	e9 8e f7 ff ff       	jmpq   1120 <sll_int_to_object@plt>
    1992:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1999:	00 00 00 00 
    199d:	0f 1f 00             	nopl   (%rax)
    19a0:	f3 0f 1e fa          	endbr64 
    19a4:	48 8b 05 2d 26 00 00 	mov    0x262d(%rip),%rax        # 3fd8 <sll_current_instruction_index>
    19ab:	8b 38                	mov    (%rax),%edi
    19ad:	e9 6e f7 ff ff       	jmpq   1120 <sll_int_to_object@plt>
    19b2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    19b9:	00 00 00 00 
    19bd:	0f 1f 00             	nopl   (%rax)
    19c0:	f3 0f 1e fa          	endbr64 
    19c4:	41 54                	push   %r12
    19c6:	53                   	push   %rbx
    19c7:	48 83 ec 38          	sub    $0x38,%rsp
    19cb:	48 8d 1d c2 26 00 00 	lea    0x26c2(%rip),%rbx        # 4094 <__sll_unload+0x2934>
    19d2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    19d9:	00 00 
    19db:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    19e0:	31 c0                	xor    %eax,%eax
    19e2:	8b 03                	mov    (%rbx),%eax
    19e4:	85 c0                	test   %eax,%eax
    19e6:	75 38                	jne    1a20 <__sll_unload+0x2c0>
    19e8:	48 8b 05 01 26 00 00 	mov    0x2601(%rip),%rax        # 3ff0 <sll_static_int>
    19ef:	4c 8b 20             	mov    (%rax),%r12
    19f2:	41 83 04 24 01       	addl   $0x1,(%r12)
    19f7:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    19fc:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1a03:	00 00 
    1a05:	0f 85 e2 00 00 00    	jne    1aed <__sll_unload+0x38d>
    1a0b:	48 83 c4 38          	add    $0x38,%rsp
    1a0f:	4c 89 e0             	mov    %r12,%rax
    1a12:	5b                   	pop    %rbx
    1a13:	41 5c                	pop    %r12
    1a15:	c3                   	retq   
    1a16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1a1d:	00 00 00 
    1a20:	4c 8b 25 b9 25 00 00 	mov    0x25b9(%rip),%r12        # 3fe0 <sll_current_vm_config>
    1a27:	49 8b 04 24          	mov    (%r12),%rax
    1a2b:	48 8b 38             	mov    (%rax),%rdi
    1a2e:	e8 ed f6 ff ff       	callq  1120 <sll_int_to_object@plt>
    1a33:	48 89 04 24          	mov    %rax,(%rsp)
    1a37:	49 8b 04 24          	mov    (%r12),%rax
    1a3b:	48 8b 78 08          	mov    0x8(%rax),%rdi
    1a3f:	e8 dc f6 ff ff       	callq  1120 <sll_int_to_object@plt>
    1a44:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1a49:	49 8b 04 24          	mov    (%r12),%rax
    1a4d:	48 8b 78 18          	mov    0x18(%rax),%rdi
    1a51:	e8 0a f7 ff ff       	callq  1160 <sll_file_to_handle@plt>
    1a56:	48 89 c7             	mov    %rax,%rdi
    1a59:	e8 c2 f6 ff ff       	callq  1120 <sll_int_to_object@plt>
    1a5e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    1a63:	49 8b 04 24          	mov    (%r12),%rax
    1a67:	48 8b 78 20          	mov    0x20(%rax),%rdi
    1a6b:	e8 f0 f6 ff ff       	callq  1160 <sll_file_to_handle@plt>
    1a70:	48 89 c7             	mov    %rax,%rdi
    1a73:	e8 a8 f6 ff ff       	callq  1120 <sll_int_to_object@plt>
    1a78:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1a7d:	49 8b 04 24          	mov    (%r12),%rax
    1a81:	48 8b 78 28          	mov    0x28(%rax),%rdi
    1a85:	e8 d6 f6 ff ff       	callq  1160 <sll_file_to_handle@plt>
    1a8a:	48 89 c7             	mov    %rax,%rdi
    1a8d:	e8 8e f6 ff ff       	callq  1120 <sll_int_to_object@plt>
    1a92:	8b 33                	mov    (%rbx),%esi
    1a94:	48 89 e2             	mov    %rsp,%rdx
    1a97:	b9 05 00 00 00       	mov    $0x5,%ecx
    1a9c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    1aa1:	48 8b 05 10 25 00 00 	mov    0x2510(%rip),%rax        # 3fb8 <sll_current_runtime_data>
    1aa8:	48 8b 00             	mov    (%rax),%rax
    1aab:	48 8b 78 10          	mov    0x10(%rax),%rdi
    1aaf:	e8 dc f6 ff ff       	callq  1190 <sll_create_object_type@plt>
    1ab4:	48 8b 3c 24          	mov    (%rsp),%rdi
    1ab8:	49 89 c4             	mov    %rax,%r12
    1abb:	e8 20 f7 ff ff       	callq  11e0 <sll_release_object@plt>
    1ac0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    1ac5:	e8 16 f7 ff ff       	callq  11e0 <sll_release_object@plt>
    1aca:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    1acf:	e8 0c f7 ff ff       	callq  11e0 <sll_release_object@plt>
    1ad4:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    1ad9:	e8 02 f7 ff ff       	callq  11e0 <sll_release_object@plt>
    1ade:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    1ae3:	e8 f8 f6 ff ff       	callq  11e0 <sll_release_object@plt>
    1ae8:	e9 0a ff ff ff       	jmpq   19f7 <__sll_unload+0x297>
    1aed:	e8 4e f6 ff ff       	callq  1140 <__stack_chk_fail@plt>

Disassembly of section .fini:

0000000000001af4 <.fini>:
    1af4:	f3 0f 1e fa          	endbr64 
    1af8:	48 83 ec 08          	sub    $0x8,%rsp
    1afc:	48 83 c4 08          	add    $0x8,%rsp
    1b00:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <.rodata>:
    2000:	56                   	push   %rsi
    2001:	65 72 73             	gs jb  2077 <__sll_unload+0x917>
    2004:	69 6f 6e 20 6d 69 73 	imul   $0x73696d20,0x6e(%rdi),%ebp
    200b:	6d                   	insl   (%dx),%es:(%rdi)
    200c:	61                   	(bad)  
    200d:	74 63                	je     2072 <__sll_unload+0x912>
    200f:	68 21 00 2e 2e       	pushq  $0x2e2e0021
    2014:	2f                   	(bad)  
    2015:	2e 2e 2f             	cs cs (bad) 
    2018:	73 72                	jae    208c <__sll_unload+0x92c>
    201a:	63 2f                	movslq (%rdi),%ebp
    201c:	65 78 74             	gs js  2093 <__sll_unload+0x933>
    201f:	2f                   	(bad)  
    2020:	64 65 62             	fs gs (bad) 
    2023:	75 67                	jne    208c <__sll_unload+0x92c>
    2025:	2f                   	(bad)  
    2026:	6d                   	insl   (%dx),%es:(%rdi)
    2027:	61                   	(bad)  
    2028:	69 6e 2e 63 00 73 6c 	imul   $0x6c730063,0x2e(%rsi),%ebp
    202f:	6c                   	insb   (%dx),%es:(%rdi)
    2030:	5f                   	pop    %rdi
    2031:	65 78 74             	gs js  20a8 <__sll_unload+0x948>
    2034:	3a 64 65 62          	cmp    0x62(%rbp,%riz,2),%ah
    2038:	75 67                	jne    20a1 <__sll_unload+0x941>
    203a:	5f                   	pop    %rdi
    203b:	5f                   	pop    %rdi
    203c:	69 6e 69 74 00 73 6c 	imul   $0x6c730074,0x69(%rsi),%ebp
    2043:	6c                   	insb   (%dx),%es:(%rdi)
    2044:	5f                   	pop    %rdi
    2045:	65 78 74             	gs js  20bc <__sll_unload+0x95c>
    2048:	3a 64 65 62          	cmp    0x62(%rbp,%riz,2),%ah
    204c:	75 67                	jne    20b5 <__sll_unload+0x955>
    204e:	5f                   	pop    %rdi
    204f:	67 65 74 5f          	addr32 gs je 20b2 <__sll_unload+0x952>
    2053:	63 61 6c             	movslq 0x6c(%rcx),%esp
    2056:	6c                   	insb   (%dx),%es:(%rdi)
    2057:	5f                   	pop    %rdi
    2058:	73 74                	jae    20ce <__sll_unload+0x96e>
    205a:	61                   	(bad)  
    205b:	63 6b 00             	movslq 0x0(%rbx),%ebp
    205e:	73 6c                	jae    20cc <__sll_unload+0x96c>
    2060:	6c                   	insb   (%dx),%es:(%rdi)
    2061:	5f                   	pop    %rdi
    2062:	65 78 74             	gs js  20d9 <__sll_unload+0x979>
    2065:	3a 64 65 62          	cmp    0x62(%rbp,%riz,2),%ah
    2069:	75 67                	jne    20d2 <__sll_unload+0x972>
    206b:	5f                   	pop    %rdi
    206c:	67 65 74 5f          	addr32 gs je 20cf <__sll_unload+0x96f>
    2070:	6c                   	insb   (%dx),%es:(%rdi)
    2071:	6f                   	outsl  %ds:(%rsi),(%dx)
    2072:	63 61 74             	movslq 0x74(%rcx),%esp
    2075:	69 6f 6e 00 73 6c 6c 	imul   $0x6c6c7300,0x6e(%rdi),%ebp
    207c:	5f                   	pop    %rdi
    207d:	65 78 74             	gs js  20f4 <__sll_unload+0x994>
    2080:	3a 64 65 62          	cmp    0x62(%rbp,%riz,2),%ah
    2084:	75 67                	jne    20ed <__sll_unload+0x98d>
    2086:	5f                   	pop    %rdi
    2087:	67 65 74 5f          	addr32 gs je 20ea <__sll_unload+0x98a>
    208b:	6e                   	outsb  %ds:(%rsi),(%dx)
    208c:	61                   	(bad)  
    208d:	6d                   	insl   (%dx),%es:(%rdi)
    208e:	65 00 73 6c          	add    %dh,%gs:0x6c(%rbx)
    2092:	6c                   	insb   (%dx),%es:(%rdi)
    2093:	5f                   	pop    %rdi
    2094:	65 78 74             	gs js  210b <__sll_unload+0x9ab>
    2097:	3a 64 65 62          	cmp    0x62(%rbp,%riz,2),%ah
    209b:	75 67                	jne    2104 <__sll_unload+0x9a4>
    209d:	5f                   	pop    %rdi
    209e:	67 65 74 5f          	addr32 gs je 2101 <__sll_unload+0x9a1>
    20a2:	72 65                	jb     2109 <__sll_unload+0x9a9>
    20a4:	66 5f                	pop    %di
    20a6:	63 6f 75             	movslq 0x75(%rdi),%ebp
    20a9:	6e                   	outsb  %ds:(%rsi),(%dx)
    20aa:	74 00                	je     20ac <__sll_unload+0x94c>
    20ac:	73 6c                	jae    211a <__sll_unload+0x9ba>
    20ae:	6c                   	insb   (%dx),%es:(%rdi)
    20af:	5f                   	pop    %rdi
    20b0:	65 78 74             	gs js  2127 <__sll_unload+0x9c7>
    20b3:	3a 64 65 62          	cmp    0x62(%rbp,%riz,2),%ah
    20b7:	75 67                	jne    2120 <__sll_unload+0x9c0>
    20b9:	5f                   	pop    %rdi
    20ba:	67 65 74 5f          	addr32 gs je 211d <__sll_unload+0x9bd>
    20be:	76 6d                	jbe    212d <__sll_unload+0x9cd>
    20c0:	5f                   	pop    %rdi
    20c1:	63 6f 6e             	movslq 0x6e(%rdi),%ebp
    20c4:	66 69 67 00 73 6c    	imul   $0x6c73,0x0(%rdi),%sp
    20ca:	6c                   	insb   (%dx),%es:(%rdi)
    20cb:	5f                   	pop    %rdi
    20cc:	65 78 74             	gs js  2143 <__sll_unload+0x9e3>
    20cf:	3a 64 65 62          	cmp    0x62(%rbp,%riz,2),%ah
    20d3:	75 67                	jne    213c <__sll_unload+0x9dc>
    20d5:	5f                   	pop    %rdi
    20d6:	67 65 74 5f          	addr32 gs je 2139 <__sll_unload+0x9d9>
    20da:	69 6e 73 74 72 75 63 	imul   $0x63757274,0x73(%rsi),%ebp
    20e1:	74 69                	je     214c <__sll_unload+0x9ec>
    20e3:	6f                   	outsl  %ds:(%rsi),(%dx)
    20e4:	6e                   	outsb  %ds:(%rsi),(%dx)
    20e5:	5f                   	pop    %rdi
    20e6:	63 6f 75             	movslq 0x75(%rdi),%ebp
    20e9:	6e                   	outsb  %ds:(%rsi),(%dx)
    20ea:	74 00                	je     20ec <__sll_unload+0x98c>
    20ec:	00 00                	add    %al,(%rax)
    20ee:	00 00                	add    %al,(%rax)
    20f0:	73 6c                	jae    215e <__sll_unload+0x9fe>
    20f2:	6c                   	insb   (%dx),%es:(%rdi)
    20f3:	5f                   	pop    %rdi
    20f4:	65 78 74             	gs js  216b <__sll_unload+0xa0b>
    20f7:	3a 64 65 62          	cmp    0x62(%rbp,%riz,2),%ah
    20fb:	75 67                	jne    2164 <__sll_unload+0xa04>
    20fd:	5f                   	pop    %rdi
    20fe:	67 65 74 5f          	addr32 gs je 2161 <__sll_unload+0xa01>
    2102:	69 6e 73 74 72 75 63 	imul   $0x63757274,0x73(%rsi),%ebp
    2109:	74 69                	je     2174 <__sll_unload+0xa14>
    210b:	6f                   	outsl  %ds:(%rsi),(%dx)
    210c:	6e                   	outsb  %ds:(%rsi),(%dx)
    210d:	5f                   	pop    %rdi
    210e:	69 6e 64 65 78 00 00 	imul   $0x7865,0x64(%rsi),%ebp
    2115:	00 00                	add    %al,(%rax)
    2117:	00 5f 5f             	add    %bl,0x5f(%rdi)
    211a:	73 6c                	jae    2188 <__sll_unload+0xa28>
    211c:	6c                   	insb   (%dx),%es:(%rdi)
    211d:	5f                   	pop    %rdi
    211e:	6c                   	insb   (%dx),%es:(%rdi)
    211f:	6f                   	outsl  %ds:(%rsi),(%dx)
    2120:	61                   	(bad)  
    2121:	64 00 40 63          	add    %al,%fs:0x63(%rax)
    2125:	6f                   	outsl  %ds:(%rsi),(%dx)
    2126:	64                   	fs
    2127:	65                   	gs
	...

Disassembly of section .eh_frame_hdr:

000000000000212c <.eh_frame_hdr>:
    212c:	01 1b                	add    %ebx,(%rbx)
    212e:	03 3b                	add    (%rbx),%edi
    2130:	78 00                	js     2132 <__sll_unload+0x9d2>
    2132:	00 00                	add    %al,(%rax)
    2134:	0e                   	(bad)  
    2135:	00 00                	add    %al,(%rax)
    2137:	00 f4                	add    %dh,%ah
    2139:	ee                   	out    %al,(%dx)
    213a:	ff                   	(bad)  
    213b:	ff 94 00 00 00 e4 ef 	callq  *-0x101c0000(%rax,%rax,1)
    2142:	ff                   	(bad)  
    2143:	ff                   	(bad)  
    2144:	bc 00 00 00 f4       	mov    $0xf4000000,%esp
    2149:	ef                   	out    %eax,(%dx)
    214a:	ff                   	(bad)  
    214b:	ff d4                	callq  *%rsp
    214d:	00 00                	add    %al,(%rax)
    214f:	00 94 f1 ff ff ec 00 	add    %dl,0xecffff(%rcx,%rsi,8)
    2156:	00 00                	add    %al,(%rax)
    2158:	84 f3                	test   %dh,%bl
    215a:	ff                   	(bad)  
    215b:	ff                   	(bad)  
    215c:	3c 01                	cmp    $0x1,%al
    215e:	00 00                	add    %al,(%rax)
    2160:	e4 f3                	in     $0xf3,%al
    2162:	ff                   	(bad)  
    2163:	ff 5c 01 00          	lcall  *0x0(%rcx,%rax,1)
    2167:	00 04 f5 ff ff 9c 01 	add    %al,0x19cffff(,%rsi,8)
    216e:	00 00                	add    %al,(%rax)
    2170:	34 f6                	xor    $0xf6,%al
    2172:	ff                   	(bad)  
    2173:	ff                   	(bad)  
    2174:	bc 01 00 00 44       	mov    $0x44000001,%esp
    2179:	f6 ff                	idiv   %bh
    217b:	ff d4                	callq  *%rsp
    217d:	01 00                	add    %eax,(%rax)
    217f:	00 a4 f7 ff ff 10 02 	add    %ah,0x210ffff(%rdi,%rsi,8)
    2186:	00 00                	add    %al,(%rax)
    2188:	24 f8                	and    $0xf8,%al
    218a:	ff                   	(bad)  
    218b:	ff 24 02             	jmpq   *(%rdx,%rax,1)
    218e:	00 00                	add    %al,(%rax)
    2190:	54                   	push   %rsp
    2191:	f8                   	clc    
    2192:	ff                   	(bad)  
    2193:	ff                   	(bad)  
    2194:	3c 02                	cmp    $0x2,%al
    2196:	00 00                	add    %al,(%rax)
    2198:	74 f8                	je     2192 <__sll_unload+0xa32>
    219a:	ff                   	(bad)  
    219b:	ff 50 02             	callq  *0x2(%rax)
    219e:	00 00                	add    %al,(%rax)
    21a0:	94                   	xchg   %eax,%esp
    21a1:	f8                   	clc    
    21a2:	ff                   	(bad)  
    21a3:	ff 64 02 00          	jmpq   *0x0(%rdx,%rax,1)
	...

Disassembly of section .eh_frame:

00000000000021a8 <.eh_frame>:
    21a8:	14 00                	adc    $0x0,%al
    21aa:	00 00                	add    %al,(%rax)
    21ac:	00 00                	add    %al,(%rax)
    21ae:	00 00                	add    %al,(%rax)
    21b0:	01 7a 52             	add    %edi,0x52(%rdx)
    21b3:	00 01                	add    %al,(%rcx)
    21b5:	78 10                	js     21c7 <__sll_unload+0xa67>
    21b7:	01 1b                	add    %ebx,(%rbx)
    21b9:	0c 07                	or     $0x7,%al
    21bb:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    21c1:	00 00                	add    %al,(%rax)
    21c3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21c6:	00 00                	add    %al,(%rax)
    21c8:	58                   	pop    %rax
    21c9:	ee                   	out    %al,(%dx)
    21ca:	ff                   	(bad)  
    21cb:	ff f0                	push   %rax
    21cd:	00 00                	add    %al,(%rax)
    21cf:	00 00                	add    %al,(%rax)
    21d1:	0e                   	(bad)  
    21d2:	10 46 0e             	adc    %al,0xe(%rsi)
    21d5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    21d8:	0b 77 08             	or     0x8(%rdi),%esi
    21db:	80 00 3f             	addb   $0x3f,(%rax)
    21de:	1a 3a                	sbb    (%rdx),%bh
    21e0:	2a 33                	sub    (%rbx),%dh
    21e2:	24 22                	and    $0x22,%al
    21e4:	00 00                	add    %al,(%rax)
    21e6:	00 00                	add    %al,(%rax)
    21e8:	14 00                	adc    $0x0,%al
    21ea:	00 00                	add    %al,(%rax)
    21ec:	44 00 00             	add    %r8b,(%rax)
    21ef:	00 20                	add    %ah,(%rax)
    21f1:	ef                   	out    %eax,(%dx)
    21f2:	ff                   	(bad)  
    21f3:	ff 10                	callq  *(%rax)
	...
    21fd:	00 00                	add    %al,(%rax)
    21ff:	00 14 00             	add    %dl,(%rax,%rax,1)
    2202:	00 00                	add    %al,(%rax)
    2204:	5c                   	pop    %rsp
    2205:	00 00                	add    %al,(%rax)
    2207:	00 18                	add    %bl,(%rax)
    2209:	ef                   	out    %eax,(%dx)
    220a:	ff                   	(bad)  
    220b:	ff e0                	jmpq   *%rax
	...
    2215:	00 00                	add    %al,(%rax)
    2217:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
    221b:	00 74 00 00          	add    %dh,0x0(%rax,%rax,1)
    221f:	00 a0 f0 ff ff ec    	add    %ah,-0x13000010(%rax)
    2225:	01 00                	add    %eax,(%rax)
    2227:	00 00                	add    %al,(%rax)
    2229:	46 0e                	rex.RX (bad) 
    222b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    2231:	8e 03                	mov    (%rbx),%es
    2233:	42 0e                	rex.X (bad) 
    2235:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    223b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86303082 <__sll_unload+0xffffffff86301922>
    2241:	06                   	(bad)  
    2242:	41 0e                	rex.B (bad) 
    2244:	38 83 07 44 0e 80    	cmp    %al,-0x7ff1bbf9(%rbx)
    224a:	01 02                	add    %eax,(%rdx)
    224c:	51                   	push   %rcx
    224d:	0a 0e                	or     (%rsi),%cl
    224f:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
    2253:	41 0e                	rex.B (bad) 
    2255:	28 42 0e             	sub    %al,0xe(%rdx)
    2258:	20 42 0e             	and    %al,0xe(%rdx)
    225b:	18 42 0e             	sbb    %al,0xe(%rdx)
    225e:	10 42 0e             	adc    %al,0xe(%rdx)
    2261:	08 48 0b             	or     %cl,0xb(%rax)
    2264:	00 00                	add    %al,(%rax)
    2266:	00 00                	add    %al,(%rax)
    2268:	1c 00                	sbb    $0x0,%al
    226a:	00 00                	add    %al,(%rax)
    226c:	c4                   	(bad)  
    226d:	00 00                	add    %al,(%rax)
    226f:	00 40 f2             	add    %al,-0xe(%rax)
    2272:	ff                   	(bad)  
    2273:	ff 5d 00             	lcall  *0x0(%rbp)
    2276:	00 00                	add    %al,(%rax)
    2278:	00 45 0e             	add    %al,0xe(%rbp)
    227b:	10 86 02 50 0a 0e    	adc    %al,0xe0a5002(%rsi)
    2281:	08 4b 0b             	or     %cl,0xb(%rbx)
    2284:	78 0e                	js     2294 <__sll_unload+0xb34>
    2286:	08 00                	or     %al,(%rax)
    2288:	3c 00                	cmp    $0x0,%al
    228a:	00 00                	add    %al,(%rax)
    228c:	e4 00                	in     $0x0,%al
    228e:	00 00                	add    %al,(%rax)
    2290:	80 f2 ff             	xor    $0xff,%dl
    2293:	ff 1f                	lcall  *(%rdi)
    2295:	01 00                	add    %eax,(%rax)
    2297:	00 00                	add    %al,(%rax)
    2299:	46 0e                	rex.RX (bad) 
    229b:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
    22a2:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
    22a6:	83 04 02 4b          	addl   $0x4b,(%rdx,%rax,1)
    22aa:	0a 0e                	or     (%rsi),%cl
    22ac:	18 41 0e             	sbb    %al,0xe(%rcx)
    22af:	10 42 0e             	adc    %al,0xe(%rdx)
    22b2:	08 47 0b             	or     %al,0xb(%rdi)
    22b5:	02 47 0a             	add    0xa(%rdi),%al
    22b8:	0e                   	(bad)  
    22b9:	18 41 0e             	sbb    %al,0xe(%rcx)
    22bc:	10 42 0e             	adc    %al,0xe(%rdx)
    22bf:	08 46 0b             	or     %al,0xb(%rsi)
    22c2:	00 00                	add    %al,(%rax)
    22c4:	00 00                	add    %al,(%rax)
    22c6:	00 00                	add    %al,(%rax)
    22c8:	1c 00                	sbb    $0x0,%al
    22ca:	00 00                	add    %al,(%rax)
    22cc:	24 01                	and    $0x1,%al
    22ce:	00 00                	add    %al,(%rax)
    22d0:	60                   	(bad)  
    22d1:	f3 ff                	repz (bad) 
    22d3:	ff 26                	jmpq   *(%rsi)
    22d5:	01 00                	add    %eax,(%rax)
    22d7:	00 00                	add    %al,(%rax)
    22d9:	45 0e                	rex.RB (bad) 
    22db:	10 83 02 6e 0a 0e    	adc    %al,0xe0a6e02(%rbx)
    22e1:	08 45 0b             	or     %al,0xb(%rbp)
    22e4:	02 ed                	add    %ch,%ch
    22e6:	0e                   	(bad)  
    22e7:	08 14 00             	or     %dl,(%rax,%rax,1)
    22ea:	00 00                	add    %al,(%rax)
    22ec:	44 01 00             	add    %r8d,(%rax)
    22ef:	00 70 f4             	add    %dh,-0xc(%rax)
    22f2:	ff                   	(bad)  
    22f3:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 22f9 <__sll_unload+0xb99>
    22f9:	00 00                	add    %al,(%rax)
    22fb:	00 00                	add    %al,(%rax)
    22fd:	00 00                	add    %al,(%rax)
    22ff:	00 38                	add    %bh,(%rax)
    2301:	00 00                	add    %al,(%rax)
    2303:	00 5c 01 00          	add    %bl,0x0(%rcx,%rax,1)
    2307:	00 68 f4             	add    %ch,-0xc(%rax)
    230a:	ff                   	(bad)  
    230b:	ff 53 01             	callq  *0x1(%rbx)
    230e:	00 00                	add    %al,(%rax)
    2310:	00 46 0e             	add    %al,0xe(%rsi)
    2313:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
    2319:	8d 03                	lea    (%rbx),%eax
    231b:	42 0e                	rex.X (bad) 
    231d:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
    2324:	05 44 0e 60 02       	add    $0x2600e44,%eax
    2329:	41 0a 0e             	or     (%r14),%cl
    232c:	28 44 0e 20          	sub    %al,0x20(%rsi,%rcx,1)
    2330:	42 0e                	rex.X (bad) 
    2332:	18 42 0e             	sbb    %al,0xe(%rdx)
    2335:	10 42 0e             	adc    %al,0xe(%rdx)
    2338:	08 46 0b             	or     %al,0xb(%rsi)
    233b:	00 10                	add    %dl,(%rax)
    233d:	00 00                	add    %al,(%rax)
    233f:	00 98 01 00 00 8c    	add    %bl,-0x73ffffff(%rax)
    2345:	f5                   	cmc    
    2346:	ff                   	(bad)  
    2347:	ff 72 00             	pushq  0x0(%rdx)
    234a:	00 00                	add    %al,(%rax)
    234c:	00 00                	add    %al,(%rax)
    234e:	00 00                	add    %al,(%rax)
    2350:	14 00                	adc    $0x0,%al
    2352:	00 00                	add    %al,(%rax)
    2354:	ac                   	lods   %ds:(%rsi),%al
    2355:	01 00                	add    %eax,(%rax)
    2357:	00 f8                	add    %bh,%al
    2359:	f5                   	cmc    
    235a:	ff                   	(bad)  
    235b:	ff 2a                	ljmp   *(%rdx)
	...
    2365:	00 00                	add    %al,(%rax)
    2367:	00 10                	add    %dl,(%rax)
    2369:	00 00                	add    %al,(%rax)
    236b:	00 c4                	add    %al,%ah
    236d:	01 00                	add    %eax,(%rax)
    236f:	00 10                	add    %dl,(%rax)
    2371:	f6 ff                	idiv   %bh
    2373:	ff 12                	callq  *(%rdx)
    2375:	00 00                	add    %al,(%rax)
    2377:	00 00                	add    %al,(%rax)
    2379:	00 00                	add    %al,(%rax)
    237b:	00 10                	add    %dl,(%rax)
    237d:	00 00                	add    %al,(%rax)
    237f:	00 d8                	add    %bl,%al
    2381:	01 00                	add    %eax,(%rax)
    2383:	00 1c f6             	add    %bl,(%rsi,%rsi,8)
    2386:	ff                   	(bad)  
    2387:	ff 12                	callq  *(%rdx)
    2389:	00 00                	add    %al,(%rax)
    238b:	00 00                	add    %al,(%rax)
    238d:	00 00                	add    %al,(%rax)
    238f:	00 28                	add    %ch,(%rax)
    2391:	00 00                	add    %al,(%rax)
    2393:	00 ec                	add    %ch,%ah
    2395:	01 00                	add    %eax,(%rax)
    2397:	00 28                	add    %ch,(%rax)
    2399:	f6 ff                	idiv   %bh
    239b:	ff 32                	pushq  (%rdx)
    239d:	01 00                	add    %eax,(%rax)
    239f:	00 00                	add    %al,(%rax)
    23a1:	46 0e                	rex.RX (bad) 
    23a3:	10 8c 02 41 0e 18 83 	adc    %cl,-0x7ce7f1bf(%rdx,%rax,1)
    23aa:	03 44 0e 50          	add    0x50(%rsi,%rcx,1),%eax
    23ae:	02 44 0a 0e          	add    0xe(%rdx,%rcx,1),%al
    23b2:	18 44 0e 10          	sbb    %al,0x10(%rsi,%rcx,1)
    23b6:	42 0e                	rex.X (bad) 
    23b8:	08 4b 0b             	or     %cl,0xb(%rbx)
    23bb:	00 00                	add    %al,(%rax)
    23bd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003de8 <__sll_unload+0x2688>:
    3de8:	b0 12                	mov    $0x12,%al
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003df0 <.fini_array>:
    3df0:	70 12                	jo     3e04 <__sll_unload+0x26a4>
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003df8 <.dynamic>:
    3df8:	01 00                	add    %eax,(%rax)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	ef                   	out    %eax,(%dx)
    3e01:	01 00                	add    %eax,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	00 10                	add    %dl,(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	0d 00 00 00 00       	or     $0x0,%eax
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 f4                	add    %dh,%ah
    3e21:	1a 00                	sbb    (%rax),%al
    3e23:	00 00                	add    %al,(%rax)
    3e25:	00 00                	add    %al,(%rax)
    3e27:	00 19                	add    %bl,(%rcx)
    3e29:	00 00                	add    %al,(%rax)
    3e2b:	00 00                	add    %al,(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 e8                	add    %ch,%al
    3e31:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e36:	00 00                	add    %al,(%rax)
    3e38:	1b 00                	sbb    (%rax),%eax
    3e3a:	00 00                	add    %al,(%rax)
    3e3c:	00 00                	add    %al,(%rax)
    3e3e:	00 00                	add    %al,(%rax)
    3e40:	08 00                	or     %al,(%rax)
    3e42:	00 00                	add    %al,(%rax)
    3e44:	00 00                	add    %al,(%rax)
    3e46:	00 00                	add    %al,(%rax)
    3e48:	1a 00                	sbb    (%rax),%al
    3e4a:	00 00                	add    %al,(%rax)
    3e4c:	00 00                	add    %al,(%rax)
    3e4e:	00 00                	add    %al,(%rax)
    3e50:	f0 3d 00 00 00 00    	lock cmp $0x0,%eax
    3e56:	00 00                	add    %al,(%rax)
    3e58:	1c 00                	sbb    $0x0,%al
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	08 00                	or     %al,(%rax)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 f0                	add    %dh,%al
    3e71:	02 00                	add    (%rax),%al
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e7d <__sll_unload+0x271d>
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 88 05 00 00 00    	add    %cl,0x5(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 06                	add    %al,(%rsi)
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 18                	add    %bl,(%rax)
    3e91:	03 00                	add    (%rax),%eax
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 0a                	add    %cl,(%rdx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 0f                	add    %cl,(%rdi)
    3ea1:	02 00                	add    (%rax),%al
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 0b                	add    %cl,(%rbx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 03                	add    %al,(%rbx)
	...
    3ec1:	40 00 00             	add    %al,(%rax)
    3ec4:	00 00                	add    %al,(%rax)
    3ec6:	00 00                	add    %al,(%rax)
    3ec8:	02 00                	add    (%rax),%al
    3eca:	00 00                	add    %al,(%rax)
    3ecc:	00 00                	add    %al,(%rax)
    3ece:	00 00                	add    %al,(%rax)
    3ed0:	50                   	push   %rax
    3ed1:	01 00                	add    %eax,(%rax)
    3ed3:	00 00                	add    %al,(%rax)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	07                   	(bad)  
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 17                	add    %dl,(%rdi)
    3ee9:	00 00                	add    %al,(%rax)
    3eeb:	00 00                	add    %al,(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 20                	add    %ah,(%rax)
    3ef1:	09 00                	or     %eax,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 07                	add    %al,(%rdi)
	...
    3f01:	08 00                	or     %al,(%rax)
    3f03:	00 00                	add    %al,(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 08                	add    %cl,(%rax)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 20                	add    %ah,(%rax)
    3f11:	01 00                	add    %eax,(%rax)
    3f13:	00 00                	add    %al,(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 09                	add    %cl,(%rcx)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 18                	add    %bl,(%rax)
    3f21:	00 00                	add    %al,(%rax)
    3f23:	00 00                	add    %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 fe                	add    %bh,%dh
    3f29:	ff                   	(bad)  
    3f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 d0                	add    %dl,%al
    3f31:	07                   	(bad)  
    3f32:	00 00                	add    %al,(%rax)
    3f34:	00 00                	add    %al,(%rax)
    3f36:	00 00                	add    %al,(%rax)
    3f38:	ff                   	(bad)  
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 01                	add    %al,(%rcx)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	00 00                	add    %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 f0                	add    %dh,%al
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 98 07 00 00 00    	add    %bl,0x7(%rax)
    3f55:	00 00                	add    %al,(%rax)
    3f57:	00 f9                	add    %bh,%cl
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fb8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <.got.plt>:
    4000:	f8                   	clc    
    4001:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    4016:	00 00                	add    %al,(%rax)
    4018:	30 10                	xor    %dl,(%rax)
    401a:	00 00                	add    %al,(%rax)
    401c:	00 00                	add    %al,(%rax)
    401e:	00 00                	add    %al,(%rax)
    4020:	40 10 00             	adc    %al,(%rax)
    4023:	00 00                	add    %al,(%rax)
    4025:	00 00                	add    %al,(%rax)
    4027:	00 50 10             	add    %dl,0x10(%rax)
    402a:	00 00                	add    %al,(%rax)
    402c:	00 00                	add    %al,(%rax)
    402e:	00 00                	add    %al,(%rax)
    4030:	60                   	(bad)  
    4031:	10 00                	adc    %al,(%rax)
    4033:	00 00                	add    %al,(%rax)
    4035:	00 00                	add    %al,(%rax)
    4037:	00 70 10             	add    %dh,0x10(%rax)
    403a:	00 00                	add    %al,(%rax)
    403c:	00 00                	add    %al,(%rax)
    403e:	00 00                	add    %al,(%rax)
    4040:	80 10 00             	adcb   $0x0,(%rax)
    4043:	00 00                	add    %al,(%rax)
    4045:	00 00                	add    %al,(%rax)
    4047:	00 90 10 00 00 00    	add    %dl,0x10(%rax)
    404d:	00 00                	add    %al,(%rax)
    404f:	00 a0 10 00 00 00    	add    %ah,0x10(%rax)
    4055:	00 00                	add    %al,(%rax)
    4057:	00 b0 10 00 00 00    	add    %dh,0x10(%rax)
    405d:	00 00                	add    %al,(%rax)
    405f:	00 c0                	add    %al,%al
    4061:	10 00                	adc    %al,(%rax)
    4063:	00 00                	add    %al,(%rax)
    4065:	00 00                	add    %al,(%rax)
    4067:	00 d0                	add    %dl,%al
    4069:	10 00                	adc    %al,(%rax)
    406b:	00 00                	add    %al,(%rax)
    406d:	00 00                	add    %al,(%rax)
    406f:	00 e0                	add    %ah,%al
    4071:	10 00                	adc    %al,(%rax)
    4073:	00 00                	add    %al,(%rax)
    4075:	00 00                	add    %al,(%rax)
    4077:	00 f0                	add    %dh,%al
    4079:	10 00                	adc    %al,(%rax)
    407b:	00 00                	add    %al,(%rax)
    407d:	00 00                	add    %al,(%rax)
    407f:	00 00                	add    %al,(%rax)
    4081:	11 00                	adc    %eax,(%rax)
    4083:	00 00                	add    %al,(%rax)
    4085:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000004088 <.data>:
    4088:	88 40 00             	mov    %al,0x0(%rax)
    408b:	00 00                	add    %al,(%rax)
    408d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004090 <.bss>:
	...
