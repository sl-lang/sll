name: All
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
permissions: read-all
env:
  BUILD_COMMAND_LINUX: ./build.sh --verbose
  BUILD_COMMAND_WINDOWS: .\build.bat --verbose
jobs:
  codeql:
    name: Analyze code
    needs:
      - darwin
      - darwin-release
      - linux
      - linux-release
      - windows
      - windows-release
    if: github.event_name!='workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Setup NASM
        uses: ilammy/setup-nasm@v1
      - name: Initialize codeql@1
        uses: github/codeql-action/init@v2
        with:
          languages: cpp, javascript
      - name: Build
        run: ${{env.BUILD_COMMAND_LINUX}}
      - name: Analyze
        uses: github/codeql-action/analyze@v2
  darwin:
    name: Build darwin
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Setup NASM
        uses: ilammy/setup-nasm@v1
      - name: Build
        run: ${{env.BUILD_COMMAND_LINUX}}
  darwin-release:
    name: Build darwin release
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Setup NASM
        uses: ilammy/setup-nasm@v1
      - name: Build
        run: ${{env.BUILD_COMMAND_LINUX}} --release --bundle --upload
      - name: Store assets
        uses: actions/upload-artifact@v3
        with:
          name: release-darwin
          path: darwin.zip
          retention-days: 1
  darwin-test:
    name: Test darwin release
    needs:
      - darwin
      - darwin-release
    if: github.event_name!='workflow_dispatch'
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download release build
        uses: actions/download-artifact@v3
        with:
          name: release-darwin
          path: build
      - name: Unpack release
        run: unzip -o build/darwin.zip -d build
      - name: Test
        run: build/sll tests/_runner.sll
  linux:
    name: Build linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Setup NASM
        uses: ilammy/setup-nasm@v1
      - name: Build
        run: ${{env.BUILD_COMMAND_LINUX}}
  linux-release:
    name: Build linux release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Setup NASM
        uses: ilammy/setup-nasm@v1
      - name: Build
        run: ${{env.BUILD_COMMAND_LINUX}} --release --bundle --upload
      - name: Store assets
        uses: actions/upload-artifact@v3
        with:
          name: release-linux
          path: linux.zip
          retention-days: 1
  linux-test:
    name: Test linux release
    needs:
      - linux
      - linux-release
    if: github.event_name!='workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Setup NASM
        uses: ilammy/setup-nasm@v1
      - name: Build
        run: ${{env.BUILD_COMMAND_LINUX}}
        env:
          GENERATE_COVERAGE: 1
      - name: Prepare test
        run: rm -f build/objects/*.gcda
      - name: Test
        run: build/sll tests/_runner.sll
      - name: Generate coverage report
        run: gcov -a -b -c -f -l -p $(find build/objects -type f -name *.gcno)
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./
          verbose: true
  release:
    name: Create release
    needs:
      - darwin-release
      - linux-release
      - windows-release
    if: github.event_name=='workflow_dispatch'&&github.actor=='krzem5'
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Set-up requests
        run: pip install requests
      - name: Load assets
        uses: actions/download-artifact@v3
        with:
          path: assets
      - name: Create release
        run: python3 src/_build/release.py --verbose ${{secrets.GITHUB_TOKEN}}
      - name: Trigger package server update
        run: ${{secrets.PACKAGE_SERVER_UPDATE_COMMAND}}
  windows:
    name: Build windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Setup NASM
        uses: ilammy/setup-nasm@v1
      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Build
        run: ${{env.BUILD_COMMAND_WINDOWS}}
        shell: cmd
  windows-release:
    name: Build windows release
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Setup NASM
        uses: ilammy/setup-nasm@v1
      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Build
        run: ${{env.BUILD_COMMAND_WINDOWS}} --release --bundle --upload
        shell: cmd
      - name: Store assets
        uses: actions/upload-artifact@v3
        with:
          name: release-win
          path: windows.zip
          retention-days: 1
  windows-test:
    name: Test windows release
    needs:
      - windows
      - windows-release
    if: github.event_name!='workflow_dispatch'
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download release build
        uses: actions/download-artifact@v3
        with:
          name: release-win
          path: build
      - name: Unpack release
        run: |
          Expand-Archive -Force build\windows.zip build\
          exit 0
        shell: powershell
      - name: Test
        run: build/sll.exe tests/_runner.sll
