(--- "_common.sll" "array.sll")

(<- run "Array module" (,,,
	(<- expect (<- array$count [1 2 3 2] 2) 2 "Item count")
	(<- expect (<- array$create 100) (* [0] 100) "Preallocation")
	(<- expect (,
		(= arr [1 2 3])
		(<- array$extend arr [4 5 6])
		arr
	) [1 2 3 4 5 6] "Extend")
	(<- expect (<- array$join [[1 2 3] [4 5 6] [7 8 9]] ',') [1 2 3 ',' 4 5 6 ',' 7 8 9] "Join")
	(<- expect (,
		(= arr [1 2 3])
		[(<- array$pop arr) arr]
	) [3 [1 2]] "Pop")
	(<- expect (,
		(= arr [1 2 3])
		(<- array$push arr 4)
		arr
	) [1 2 3 4] "Push")
	(<- expect (,
		(= arr [1 2 3 1 2 3])
		(<- array$remove arr 2)
		arr
	) [1 3 1 3] "Remove")
	(<- expect  (<- array$replace [1 2 3] 3 "three") [1 2 "three"] "Replace")
	(<- expect (<- array$reverse [1 2 3]) [3 2 1] "Reverse")
	(<- expect (,
		(= arr [1 2 3])
		[(<- array$shift arr) arr]
	) [1 [2 3]] "Shift")
	(<- expect (<- array$split [1 2 3 2 2 3 4] 2) [[1] [3] [] [3 4]] "Split")
	(<- expect (,
		(= arr [1 2 3])
		(<- array$unshift arr "zero")
		arr
	) ["zero" 1 2 3] "Unshift")
))
