(--- "json.sll" "file.sll" "sys.sll" "path.sll" "string.sll" "time.sll" "error.sll" "array.sll" "serial.sll" "base64.sll" "types.sll")



(= _gh_actions (!! (: sys$ENVIRONMENT "GITHUB_ACTIONS")))
(= _test_data nil)
(= _test_results nil)



(= _encode_object (,,, obj
	(= f (<- file$from_data "" file$FLAG_WRITE))
	(<- serial$encode f obj)
	(= out (<- file$get_buffer f))
	(<- file$close f)
	(@@ (<- base64$encode out))
))

(= expect (,,, result value name
	(= name (:: name string_type))
	(? (=== _test_results nil) {
		(:> "Function 'expect' executed outside of function 'run'!\n")
		(@@)
	})
	(= func_group (: (: (: (<- error$get_call_stack) -1) "return") "function"))
	(= func_group (?: (=== (: func_group 0) '@')
		nil
		(<- string$lower_case (<- string$replace
			(?: (<- string$starts func_group "test_") (>> func_group 5) func_group)
			'_'
			' '
		))
	))
	(= (: func_group 0) (: (<- string$upper_case (: func_group 0 1)) 0))
	(= name_str (?: (=== func_group nil) name (+ func_group ": " name))
	(? (=== result value) {
		(= _test_data$success (+ _test_data$success 1))
		(:> "+ " name_str "\n")
	} {
		(:> "- " name_str "\n")
		(= err (+ "Expected " (<- string$str value) ", got " (<- string$str result)))
		(= loc (: (: (<- error$get_call_stack) -1) "return"))
		(<- array$push _test_data$error <
			"name" name
			"group" func_group
			"file" loc$file
			"line" loc$line
			"output" (<- _encode_object result)
			"target" (<- _encode_object value)
		>)
		(? _gh_actions {
			(:> (<- string$format "::warning file=%s,line=%u,title=%s%3A %s%3A %s::%s\n" loc$file loc$line (<- string$title_case sys$PLATFORM) _test_data$name (<- string$replace (<- string$replace name_str "," "%2C") ":" "%3A") err))
		} {
			(:> "  " err "\n")
		})
	})
))

(= run (,,, name fn
	(? (!== _test_results nil) {
		(:> "Function 'run' executed more than once!\n")
		(@@)
	})
	(= name (:: name string_type))
	(= fn (:: fn func_type))
	(= _test_results <>)
	(= f (<- file$open "build/test_results.json" "r"))
	(? (=== f$error_data nil) {
		(= bf "")
		(>- (= chunk "") chunk
			(= chunk (<- file$read f 1024))
			(= bf (+ bf chunk))
		)
		(<- file$close f)
		(? bf (= _test_results (<- json$parse bf)))
	})
	(= id (: (<- string$split (: (<- path$split (: sys$ARGV 0)) 1) ".") 0))
	(= _test_data <
		"name" name
		"success" 0
		"error" []
		"time" 0
	>)
	(= (: _test_results id) _test_data)
	(? _gh_actions {
		(:> "::group::" name "\n")
	} {
		(:> ">>> " name "\n")
	})
	(= start_time (<- time$time))
	(<- fn)
	(? _gh_actions {
		(:> "::endgroup::\n")
	})
	(= _test_data$time (- (<- time$time) start_time))
	(= f (<- file$open "build/test_results.json" "w"))
	(<- file$write f (<- json$stringify _test_results))
	(<- file$close f)
))



(## expect run)
