(---
	"@test/_common.sll"
	"types.sll"
)



(= test_vector_type (&:
	object_type input
	object_type output
))



(= TEST_VECTORS [
	(. test_vector_type
		0
		0
	)
	(. test_vector_type
		+987
		987
	)
	(. test_vector_type
		-579
		579
	)
	(. test_vector_type
		0.0
		0.0
	)
	(. test_vector_type
		123.456
		123.456
	)
	(. test_vector_type
		-3.1415926
		3.1415926
	)
	(. test_vector_type
		'\x00'
		1
	)
	(. test_vector_type
		'A'
		1
	)
	(. test_vector_type
		0.0i
		0.0
	)
	(. test_vector_type
		1.0+0.0i
		1.0
	)
	(. test_vector_type
		-1.0+0.5i
		1.1180339887498949
	)
	(. test_vector_type
		0.0+1.0i
		1.0
	)
	(. test_vector_type
		4.0-3.0i
		5.0
	)
	(. test_vector_type
		""
		0
	)
	(. test_vector_type
		"\x00"
		1
	)
	(. test_vector_type
		"zero"
		4
	)
	(. test_vector_type
		[]
		0
	)
	(. test_vector_type
		[false]
		1
	)
	(. test_vector_type
		[1.2+3.4i 'a' 'b' 'c']
		4
	)
	(. test_vector_type
		<>
		0
	)
	(. test_vector_type
		<"key">
		1
	)
	(. test_vector_type
		<false 46>
		1
	)
	(. test_vector_type
		<1.2+3.4i 'a' 'b' 'c'>
		2
	)
])



(= test_no_operands (,,,
	(<- expect ($) 0)
))

(= test_one_operand (,,,
	(-> (= i 0) (< i ($ TEST_VECTORS))
		(= vec (: TEST_VECTORS i))
		(<- expect ($ vec$input) vec$output [vec$input])
		(++ i)
	)
))

(= test_multple_operands (,,,
	(-> (= i 0) (< i ($ TEST_VECTORS))
		(= vec (: TEST_VECTORS i))
		(-> (= j 0) (< j ($ TEST_VECTORS))
			(= vec2 (: TEST_VECTORS i))
			(<- expect ($ vec$input vec2$input) vec$output [vec$input vec2$input])
			(++ j)
		)
		(++ i)
	)
))



(<- run "Length operator ($)" (,,,
	(<- test_no_operands)
	(<- test_one_operand)
	(<- test_multple_operands)
))
