(---
	"@test/_common.sll"
	"@test/_random.sll"
	"types.sll"
)



(= test_integer (,,,
	(<- expect (: 58 12 'A' 0.56) nil)
	(<- expect (: false -1 894 11.0i) nil)
	(<- expect (: -410 0 [5 4 3 2 1] "abc") nil)
))

(= test_float (,,,
	(<- expect (: 12904.4565 33 true 0.123) nil)
	(<- expect (: -48e190 -1 <1 'A' 2 'B' 3 'C'> 'X') nil)
))

(= test_char (,,,
	(<- expect (: 'X' 2 78.9-123.456i -987654321) nil)
	(<- expect (: '\x01' -5 '\x01' 12.34e56) nil)
))

(= test_complex (,,,
	(<- expect (: 12.0-67.0i 1111 '\x50') nil)
	(<- expect (: 0.5+0.5i 0 "P") nil)
))

(= test_string (,,,
	(<- expect (: "Abcdefg" 0 0 -3) "")
	(<- expect (: "Abcdefg" 1 3 1) "bc")
	(<- expect (: "Abcdefg" 6 -3 -1) "gf")
	(<- expect (: "Abcdefg" -2 5 2) "")
	(<- expect (: "Abcdefg" -4 -2 3) "d")
	(<- expect (: "Abcdefg" -2 -4 -1) "fe")
	(<- expect (: "Abcdefg" -1.0+58.0i 5 'X') nil)
	(<- expect (: "Abcdefg" -3 0.0005e4i [1 2 3]) nil)
))

(= test_array (,,,
	(<- expect (: [2 'A' 5.5+5.5i "x,y,z,w" 123.456e78] 0 0 -3) [])
	(<- expect (: [2 'A' 5.5+5.5i "x,y,z,w" 123.456e78] 1 3 1) ['A' 5.5+5.5i])
	(<- expect (: [2 'A' 5.5+5.5i "x,y,z,w" 123.456e78] 4 -5 -1) [123.456e78 "x,y,z,w" 5.5+5.5i 'A'])
	(<- expect (: [2 'A' 5.5+5.5i "x,y,z,w" 123.456e78] -2 5 2) [2])
	(<- expect (: [2 'A' 5.5+5.5i "x,y,z,w" 123.456e78] -4 -2 3) ['A'])
	(<- expect (: [2 'A' 5.5+5.5i "x,y,z,w" 123.456e78] -2 -4 -1) ["x,y,z,w" 5.5+5.5i])
	(<- expect (: [2 'A' 5.5+5.5i "x,y,z,w" 123.456e78] -1.0+58.0i 5 'X') nil)
	(<- expect (: [2 'A' 5.5+5.5i "x,y,z,w" 123.456e78] -3 0.0005e4i [1 2 3]) nil)
))

(= test_map (,,,
	(<- expect (: <'X' 88 0.5 "float" 1234567890 [5 4 3 2 1]> 0 2 [3 . 1 4 1 5 9 2 6]) nil)
	(<- expect (: <'X' 88 0.5 "float" 1234567890 [5 4 3 2 1]> 'X' string_type "float") nil)
	(<- expect (: <'X' 88 0.5 "float" 1234567890 [5 4 3 2 1]> "float" 1234567890 [5 4 3 2 1]) nil)
	(<- expect (: <'X' 88 0.5 "float" 1234567890 [5 4 3 2 1]> 0.5-111.0i .5 88) nil)
))

(= test_custom_type (,,,
	(= type_type (&:
		int_type number
		string_type string
	))
	(= type (. type_type
		12345
		"example-string"
	))
	(<- expect (: type "number" 1234567890 0.5i) nil)
	(<- expect (: type 35 "key" "example-value") nil)
	(<- expect (: type 63824.549 [-5 -4 -3 -2 -1] 11.22e33+44.55e66i) nil)
	(<- expect (: type "string" "string" "string") nil)
	(<- expect (: type "stringA" 1212121212 true) nil)
))



(<- run "Access triple (:)" (,,,
	(<- test_integer)
	(<- test_float)
	(<- test_char)
	(<- test_complex)
	(<- test_string)
	(<- test_array)
	(<- test_map)
	(<- test_custom_type)
))
