(# time INVALID_FILE_HANDLE open close write platform argc argv)
(? 1 (-- "time.sll" "file.sll" "sys.sll"))
(-> (= i 1) (< i 11) {
	(-> (= j 1) (< j 11) {
		(:> i '*' j " is equal to " (* i j) "\n")
		(= j (+ j 1))
	})
	(= i (+ i 1))
})
(= func (,,, x y {
	(:> "(Function Args: {x, y} = {" x ", " y "}) ")
	(@@ (* x y))
}))
(= FACTORIAL 10)
(= i 1 (:> "After Var Init (i=" i ")\n"))
(-> (= j 2) (< j FACTORIAL) {
	(? (< j 5) {
		(:> "Small: " i "\n")
	}
	(< j 8) {
		(:> "Medium: " i "\n")
	} {
		(:> "End: " i " (j=" j ")\n")
	})
	(= i (* i j))
	(? (< j 5) (:> j "! = " i "\n"))
	(= j (+ j 1))
	(? (> 3 10 -5) (:> "This will Never Execute\n"))
})
(:> FACTORIAL "! = " i '\n')
(< 10 5 (:> "This Should Never Happen"))
(? 1 (-- "import.sll"))
(:> "Call: " (<- func 10 2) "\n")
(:> "Current Time (Internal Call): " (<- time) "\n")
(? true nil 2 (:> "Dead Code") (@ 128 "False Exit"))
(= f (<- open "build/hello.txt" "wb"))
(? (== f INVALID_FILE_HANDLE) {
	(:> "Unable to open file!\n")
} {
	(<- write f "Hello!\n")
	(<- close f)
})
(<- write stdout "Argument Count: " argc "\n")
(-> (= i 0) (< i argc) (:> "[" i "] = " (<- argv i) "\n") (= i (+ i 1)))
(:> "Platform: " platform "\n")
(:> "Program End\n")
(= string (<- (,,, (@@ "string"))))
(:> "String: " string "\n")
(:> "String: " string "\n")
(? (! FACTORIAL) nil {
	(:> "Early Exit\n")
	(@ false)
})
(:> "Useless Code")
(@ 1)
